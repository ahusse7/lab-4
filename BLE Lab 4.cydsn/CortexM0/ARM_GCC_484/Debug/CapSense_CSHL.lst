ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,10,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 10
  23              	CapSense_sensorBaseline:
  24 0000 00000000 		.space	10
  24      00000000 
  24      0000
  25              		.global	CapSense_sensorBaselineLow
  26 000a 0000     		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 5
  29              	CapSense_sensorBaselineLow:
  30 000c 00000000 		.space	5
  30      00
  31              		.global	CapSense_sensorSignal
  32 0011 000000   		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 5
  35              	CapSense_sensorSignal:
  36 0014 00000000 		.space	5
  36      00
  37              		.global	CapSense_sensorOnMask
  38 0019 000000   		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 001c 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,5,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 5
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 2


  54 0004 1E       		.byte	30
  55              		.global	CapSense_enableRawFilters
  56              		.type	CapSense_enableRawFilters, %object
  57              		.size	CapSense_enableRawFilters, 1
  58              	CapSense_enableRawFilters:
  59 0005 01       		.byte	1
  60              		.comm	CapSense_fingerThreshold,1,4
  61              		.comm	CapSense_noiseThreshold,1,4
  62              		.comm	CapSense_negativeNoiseThreshold,1,4
  63              		.comm	CapSense_hysteresis,1,4
  64              		.global	CapSense_debounce
  65 0006 0000     		.align	2
  66              		.type	CapSense_debounce, %object
  67              		.size	CapSense_debounce, 1
  68              	CapSense_debounce:
  69 0008 01       		.byte	1
  70              		.global	CapSense_rawDataIndex
  71              		.section	.rodata
  72              		.align	2
  73              		.type	CapSense_rawDataIndex, %object
  74              		.size	CapSense_rawDataIndex, 1
  75              	CapSense_rawDataIndex:
  76 0000 00       		.space	1
  77              		.global	CapSense_numberOfSensors
  78 0001 000000   		.align	2
  79              		.type	CapSense_numberOfSensors, %object
  80              		.size	CapSense_numberOfSensors, 1
  81              	CapSense_numberOfSensors:
  82 0004 05       		.byte	5
  83 0005 000000   		.align	2
  84              		.type	CapSense_centroidMult, %object
  85              		.size	CapSense_centroidMult, 2
  86              	CapSense_centroidMult:
  87 0008 0019     		.short	6400
  88 000a 0000     		.data
  89 0009 000000   		.align	2
  90              		.type	CapSense_posFiltersMask, %object
  91              		.size	CapSense_posFiltersMask, 1
  92              	CapSense_posFiltersMask:
  93 000c 02       		.byte	2
  94 000d 000000   		.align	2
  95              		.type	CapSense_posFiltersData, %object
  96              		.size	CapSense_posFiltersData, 4
  97              	CapSense_posFiltersData:
  98 0010 01       		.byte	1
  99 0011 00       		.byte	0
 100 0012 00       		.byte	0
 101 0013 00       		.byte	0
 102              		.section	.text.CapSense_BaseInit,"ax",%progbits
 103              		.align	2
 104              		.global	CapSense_BaseInit
 105              		.code	16
 106              		.thumb_func
 107              		.type	CapSense_BaseInit, %function
 108              	CapSense_BaseInit:
 109              	.LFB35:
 110              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 3


   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 4


  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_10 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0x2u, 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 0u, 
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 5


 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 111              		.loc 1 143 0
 112              		.cfi_startproc
 113 0000 80B5     		push	{r7, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 7, -8
 116              		.cfi_offset 14, -4
 117 0002 82B0     		sub	sp, sp, #8
 118              		.cfi_def_cfa_offset 16
 119 0004 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
 121 0006 7860     		str	r0, [r7, #4]
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 6


 122              		.loc 1 160 0
 123 0008 0E4B     		ldr	r3, .L2
 124 000a 7A68     		ldr	r2, [r7, #4]
 125 000c 5200     		lsl	r2, r2, #1
 126 000e D15A     		ldrh	r1, [r2, r3]
 127 0010 0D4B     		ldr	r3, .L2+4
 128 0012 7A68     		ldr	r2, [r7, #4]
 129 0014 5200     		lsl	r2, r2, #1
 130 0016 D152     		strh	r1, [r2, r3]
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 131              		.loc 1 161 0
 132 0018 0C4A     		ldr	r2, .L2+8
 133 001a 7B68     		ldr	r3, [r7, #4]
 134 001c D318     		add	r3, r2, r3
 135 001e 0022     		mov	r2, #0
 136 0020 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 137              		.loc 1 162 0
 138 0022 0B4A     		ldr	r2, .L2+12
 139 0024 7B68     		ldr	r3, [r7, #4]
 140 0026 D318     		add	r3, r2, r3
 141 0028 0022     		mov	r2, #0
 142 002a 1A70     		strb	r2, [r3]
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 143              		.loc 1 178 0
 144 002c 054B     		ldr	r3, .L2
 145 002e 7A68     		ldr	r2, [r7, #4]
 146 0030 5200     		lsl	r2, r2, #1
 147 0032 D15A     		ldrh	r1, [r2, r3]
 148 0034 074B     		ldr	r3, .L2+16
 149 0036 7A68     		ldr	r2, [r7, #4]
 150 0038 5200     		lsl	r2, r2, #1
 151 003a D152     		strh	r1, [r2, r3]
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 7


 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 152              		.loc 1 190 0
 153 003c BD46     		mov	sp, r7
 154 003e 02B0     		add	sp, sp, #8
 155              		@ sp needed
 156 0040 80BD     		pop	{r7, pc}
 157              	.L3:
 158 0042 C046     		.align	2
 159              	.L2:
 160 0044 00000000 		.word	CapSense_sensorRaw
 161 0048 00000000 		.word	CapSense_sensorBaseline
 162 004c 00000000 		.word	CapSense_sensorBaselineLow
 163 0050 00000000 		.word	CapSense_sensorSignal
 164 0054 00000000 		.word	CapSense_rawFilterData1
 165              		.cfi_endproc
 166              	.LFE35:
 167              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 168              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 169              		.align	2
 170              		.global	CapSense_InitializeSensorBaseline
 171              		.code	16
 172              		.thumb_func
 173              		.type	CapSense_InitializeSensorBaseline, %function
 174              	CapSense_InitializeSensorBaseline:
 175              	.LFB36:
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 176              		.loc 1 218 0
 177              		.cfi_startproc
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 8


 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 82B0     		sub	sp, sp, #8
 183              		.cfi_def_cfa_offset 16
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 186 0006 7860     		str	r0, [r7, #4]
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 187              		.loc 1 220 0
 188 0008 7B68     		ldr	r3, [r7, #4]
 189 000a 181C     		mov	r0, r3
 190 000c FFF7FEFF 		bl	CapSense_ScanSensor
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 191              		.loc 1 221 0
 192 0010 C046     		mov	r8, r8
 193              	.L5:
 194              		.loc 1 221 0 is_stmt 0 discriminator 1
 195 0012 FFF7FEFF 		bl	CapSense_IsBusy
 196 0016 031C     		mov	r3, r0
 197 0018 002B     		cmp	r3, #0
 198 001a FAD1     		bne	.L5
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 199              		.loc 1 227 0 is_stmt 1
 200 001c 7B68     		ldr	r3, [r7, #4]
 201 001e 181C     		mov	r0, r3
 202 0020 FFF7FEFF 		bl	CapSense_BaseInit
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 203              		.loc 1 228 0
 204 0024 BD46     		mov	sp, r7
 205 0026 02B0     		add	sp, sp, #8
 206              		@ sp needed
 207 0028 80BD     		pop	{r7, pc}
 208              		.cfi_endproc
 209              	.LFE36:
 210              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 211 002a C046     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 212              		.align	2
 213              		.global	CapSense_InitializeAllBaselines
 214              		.code	16
 215              		.thumb_func
 216              		.type	CapSense_InitializeAllBaselines, %function
 217              	CapSense_InitializeAllBaselines:
 218              	.LFB37:
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 9


 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 219              		.loc 1 255 0
 220              		.cfi_startproc
 221 0000 80B5     		push	{r7, lr}
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 82B0     		sub	sp, sp, #8
 226              		.cfi_def_cfa_offset 16
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 229              		.loc 1 258 0
 230 0006 0023     		mov	r3, #0
 231 0008 7B60     		str	r3, [r7, #4]
 232 000a 06E0     		b	.L7
 233              	.L8:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 234              		.loc 1 260 0 discriminator 2
 235 000c 7B68     		ldr	r3, [r7, #4]
 236 000e 181C     		mov	r0, r3
 237 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 238              		.loc 1 258 0 discriminator 2
 239 0014 7B68     		ldr	r3, [r7, #4]
 240 0016 0133     		add	r3, r3, #1
 241 0018 7B60     		str	r3, [r7, #4]
 242              	.L7:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 243              		.loc 1 258 0 is_stmt 0 discriminator 1
 244 001a 7B68     		ldr	r3, [r7, #4]
 245 001c 042B     		cmp	r3, #4
 246 001e F5D9     		bls	.L8
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 10


 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 247              		.loc 1 262 0 is_stmt 1
 248 0020 BD46     		mov	sp, r7
 249 0022 02B0     		add	sp, sp, #8
 250              		@ sp needed
 251 0024 80BD     		pop	{r7, pc}
 252              		.cfi_endproc
 253              	.LFE37:
 254              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 255 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 256              		.align	2
 257              		.global	CapSense_InitializeEnabledBaselines
 258              		.code	16
 259              		.thumb_func
 260              		.type	CapSense_InitializeEnabledBaselines, %function
 261              	CapSense_InitializeEnabledBaselines:
 262              	.LFB38:
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 263              		.loc 1 290 0
 264              		.cfi_startproc
 265 0000 80B5     		push	{r7, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 0002 82B0     		sub	sp, sp, #8
 270              		.cfi_def_cfa_offset 16
 271 0004 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 11


 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 273              		.loc 1 294 0
 274 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 275              		.loc 1 295 0
 276 000a C046     		mov	r8, r8
 277              	.L10:
 278              		.loc 1 295 0 is_stmt 0 discriminator 1
 279 000c FFF7FEFF 		bl	CapSense_IsBusy
 280 0010 031C     		mov	r3, r0
 281 0012 002B     		cmp	r3, #0
 282 0014 FAD1     		bne	.L10
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 283              		.loc 1 300 0 is_stmt 1
 284 0016 0023     		mov	r3, #0
 285 0018 7B60     		str	r3, [r7, #4]
 286 001a 11E0     		b	.L11
 287              	.L13:
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 288              		.loc 1 302 0
 289 001c 0B4A     		ldr	r2, .L14
 290 001e 7B68     		ldr	r3, [r7, #4]
 291 0020 101C     		mov	r0, r2
 292 0022 191C     		mov	r1, r3
 293 0024 FFF7FEFF 		bl	CapSense_GetBitValue
 294 0028 031C     		mov	r3, r0
 295 002a 3B60     		str	r3, [r7]
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 296              		.loc 1 305 0
 297 002c 3B68     		ldr	r3, [r7]
 298 002e 002B     		cmp	r3, #0
 299 0030 03D0     		beq	.L12
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 300              		.loc 1 308 0
 301 0032 7B68     		ldr	r3, [r7, #4]
 302 0034 181C     		mov	r0, r3
 303 0036 FFF7FEFF 		bl	CapSense_BaseInit
 304              	.L12:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 305              		.loc 1 300 0
 306 003a 7B68     		ldr	r3, [r7, #4]
 307 003c 0133     		add	r3, r3, #1
 308 003e 7B60     		str	r3, [r7, #4]
 309              	.L11:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 310              		.loc 1 300 0 is_stmt 0 discriminator 1
 311 0040 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 12


 312 0042 042B     		cmp	r3, #4
 313 0044 EAD9     		bls	.L13
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 314              		.loc 1 311 0 is_stmt 1
 315 0046 BD46     		mov	sp, r7
 316 0048 02B0     		add	sp, sp, #8
 317              		@ sp needed
 318 004a 80BD     		pop	{r7, pc}
 319              	.L15:
 320              		.align	2
 321              	.L14:
 322 004c 00000000 		.word	CapSense_sensorEnableMask
 323              		.cfi_endproc
 324              	.LFE38:
 325              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 326              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 327              		.align	2
 328              		.global	CapSense_UpdateBaselineNoThreshold
 329              		.code	16
 330              		.thumb_func
 331              		.type	CapSense_UpdateBaselineNoThreshold, %function
 332              	CapSense_UpdateBaselineNoThreshold:
 333              	.LFB39:
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 13


 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 334              		.loc 1 355 0
 335              		.cfi_startproc
 336 0000 90B5     		push	{r4, r7, lr}
 337              		.cfi_def_cfa_offset 12
 338              		.cfi_offset 4, -12
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 87B0     		sub	sp, sp, #28
 342              		.cfi_def_cfa_offset 40
 343 0004 00AF     		add	r7, sp, #0
 344              		.cfi_def_cfa_register 7
 345 0006 7860     		str	r0, [r7, #4]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 346              		.loc 1 360 0
 347 0008 3B1C     		mov	r3, r7
 348 000a 0F33     		add	r3, r3, #15
 349 000c 7A49     		ldr	r1, .L29
 350 000e 7A68     		ldr	r2, [r7, #4]
 351 0010 8A18     		add	r2, r1, r2
 352 0012 1278     		ldrb	r2, [r2]
 353 0014 1A70     		strb	r2, [r3]
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 354              		.loc 1 361 0
 355 0016 3B1C     		mov	r3, r7
 356 0018 0F33     		add	r3, r3, #15
 357 001a 1A78     		ldrb	r2, [r3]
 358 001c 3B1C     		mov	r3, r7
 359 001e 0E33     		add	r3, r3, #14
 360 0020 7649     		ldr	r1, .L29+4
 361 0022 8A5C     		ldrb	r2, [r1, r2]
 362 0024 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 363              		.loc 1 369 0
 364 0026 3B1C     		mov	r3, r7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 14


 365 0028 1033     		add	r3, r3, #16
 366 002a 754A     		ldr	r2, .L29+8
 367 002c 7968     		ldr	r1, [r7, #4]
 368 002e 4900     		lsl	r1, r1, #1
 369 0030 8A5A     		ldrh	r2, [r1, r2]
 370 0032 1A80     		strh	r2, [r3]
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 371              		.loc 1 372 0
 372 0034 734B     		ldr	r3, .L29+12
 373 0036 1B78     		ldrb	r3, [r3]
 374 0038 002B     		cmp	r3, #0
 375 003a 15D0     		beq	.L17
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 376              		.loc 1 393 0
 377 003c 724B     		ldr	r3, .L29+16
 378 003e 7A68     		ldr	r2, [r7, #4]
 379 0040 5200     		lsl	r2, r2, #1
 380 0042 D35A     		ldrh	r3, [r2, r3]
 381 0044 3C1C     		mov	r4, r7
 382 0046 1034     		add	r4, r4, #16
 383 0048 3A1C     		mov	r2, r7
 384 004a 1032     		add	r2, r2, #16
 385 004c 1288     		ldrh	r2, [r2]
 386 004e 101C     		mov	r0, r2
 387 0050 191C     		mov	r1, r3
 388 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 389 0056 031C     		mov	r3, r0
 390 0058 2380     		strh	r3, [r4]
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 391              		.loc 1 394 0
 392 005a 6B4B     		ldr	r3, .L29+16
 393 005c 7A68     		ldr	r2, [r7, #4]
 394 005e 5200     		lsl	r2, r2, #1
 395 0060 391C     		mov	r1, r7
 396 0062 1031     		add	r1, r1, #16
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 15


 397 0064 0988     		ldrh	r1, [r1]
 398 0066 D152     		strh	r1, [r2, r3]
 399              	.L17:
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_10(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 400              		.loc 1 415 0
 401 0068 7B68     		ldr	r3, [r7, #4]
 402 006a DAB2     		uxtb	r2, r3
 403 006c 6749     		ldr	r1, .L29+20
 404 006e 644B     		ldr	r3, .L29+8
 405 0070 081C     		mov	r0, r1
 406 0072 111C     		mov	r1, r2
 407 0074 1A1C     		mov	r2, r3
 408 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_10
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 409              		.loc 1 420 0
 410 007a 654B     		ldr	r3, .L29+24
 411 007c 7A68     		ldr	r2, [r7, #4]
 412 007e 5200     		lsl	r2, r2, #1
 413 0080 D35A     		ldrh	r3, [r2, r3]
 414 0082 3A1C     		mov	r2, r7
 415 0084 1032     		add	r2, r2, #16
 416 0086 1288     		ldrh	r2, [r2]
 417 0088 9A42     		cmp	r2, r3
 418 008a 12D3     		bcc	.L18
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 419              		.loc 1 422 0
 420 008c 614A     		ldr	r2, .L29+28
 421 008e 7B68     		ldr	r3, [r7, #4]
 422 0090 D318     		add	r3, r2, r3
 423 0092 0022     		mov	r2, #0
 424 0094 1A70     		strb	r2, [r3]
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 16


 425              		.loc 1 423 0
 426 0096 5E4B     		ldr	r3, .L29+24
 427 0098 7A68     		ldr	r2, [r7, #4]
 428 009a 5200     		lsl	r2, r2, #1
 429 009c D25A     		ldrh	r2, [r2, r3]
 430 009e 3B1C     		mov	r3, r7
 431 00a0 1233     		add	r3, r3, #18
 432 00a2 391C     		mov	r1, r7
 433 00a4 1031     		add	r1, r1, #16
 434 00a6 0988     		ldrh	r1, [r1]
 435 00a8 8A1A     		sub	r2, r1, r2
 436 00aa 1A80     		strh	r2, [r3]
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 437              		.loc 1 424 0
 438 00ac 0123     		mov	r3, #1
 439 00ae 7B61     		str	r3, [r7, #20]
 440 00b0 0CE0     		b	.L19
 441              	.L18:
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 442              		.loc 1 428 0
 443 00b2 574B     		ldr	r3, .L29+24
 444 00b4 7A68     		ldr	r2, [r7, #4]
 445 00b6 5200     		lsl	r2, r2, #1
 446 00b8 D15A     		ldrh	r1, [r2, r3]
 447 00ba 3B1C     		mov	r3, r7
 448 00bc 1233     		add	r3, r3, #18
 449 00be 3A1C     		mov	r2, r7
 450 00c0 1032     		add	r2, r2, #16
 451 00c2 1288     		ldrh	r2, [r2]
 452 00c4 8A1A     		sub	r2, r1, r2
 453 00c6 1A80     		strh	r2, [r3]
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 454              		.loc 1 429 0
 455 00c8 0023     		mov	r3, #0
 456 00ca 7B61     		str	r3, [r7, #20]
 457              	.L19:
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 458              		.loc 1 433 0
 459 00cc 7B69     		ldr	r3, [r7, #20]
 460 00ce 002B     		cmp	r3, #0
 461 00d0 28D1     		bne	.L20
 462              		.loc 1 433 0 is_stmt 0 discriminator 1
 463 00d2 3B1C     		mov	r3, r7
 464 00d4 0F33     		add	r3, r3, #15
 465 00d6 1B78     		ldrb	r3, [r3]
 466 00d8 4F4A     		ldr	r2, .L29+32
 467 00da D35C     		ldrb	r3, [r2, r3]
 468 00dc 3A1C     		mov	r2, r7
 469 00de 1232     		add	r2, r2, #18
 470 00e0 1288     		ldrh	r2, [r2]
 471 00e2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 17


 472 00e4 1ED9     		bls	.L20
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 473              		.loc 1 438 0 is_stmt 1
 474 00e6 4B4A     		ldr	r2, .L29+28
 475 00e8 7B68     		ldr	r3, [r7, #4]
 476 00ea D318     		add	r3, r2, r3
 477 00ec 1A78     		ldrb	r2, [r3]
 478 00ee 4B49     		ldr	r1, .L29+36
 479 00f0 7B68     		ldr	r3, [r7, #4]
 480 00f2 CB18     		add	r3, r1, r3
 481 00f4 1B78     		ldrb	r3, [r3]
 482 00f6 9A42     		cmp	r2, r3
 483 00f8 09D3     		bcc	.L21
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 484              		.loc 1 440 0
 485 00fa 7B68     		ldr	r3, [r7, #4]
 486 00fc 181C     		mov	r0, r3
 487 00fe FFF7FEFF 		bl	CapSense_BaseInit
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 488              		.loc 1 441 0
 489 0102 444A     		ldr	r2, .L29+28
 490 0104 7B68     		ldr	r3, [r7, #4]
 491 0106 D318     		add	r3, r2, r3
 492 0108 0022     		mov	r2, #0
 493 010a 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 494              		.loc 1 438 0
 495 010c 4CE0     		b	.L23
 496              	.L21:
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 497              		.loc 1 445 0
 498 010e 414A     		ldr	r2, .L29+28
 499 0110 7B68     		ldr	r3, [r7, #4]
 500 0112 D318     		add	r3, r2, r3
 501 0114 1B78     		ldrb	r3, [r3]
 502 0116 0133     		add	r3, r3, #1
 503 0118 DAB2     		uxtb	r2, r3
 504 011a 3E49     		ldr	r1, .L29+28
 505 011c 7B68     		ldr	r3, [r7, #4]
 506 011e CB18     		add	r3, r1, r3
 507 0120 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 508              		.loc 1 438 0
 509 0122 41E0     		b	.L23
 510              	.L20:
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 18


 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 511              		.loc 1 453 0
 512 0124 3B1C     		mov	r3, r7
 513 0126 0E33     		add	r3, r3, #14
 514 0128 1B78     		ldrb	r3, [r3]
 515 012a 9BB2     		uxth	r3, r3
 516 012c 3A1C     		mov	r2, r7
 517 012e 1232     		add	r2, r2, #18
 518 0130 1288     		ldrh	r2, [r2]
 519 0132 9A42     		cmp	r2, r3
 520 0134 0CD9     		bls	.L24
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 521              		.loc 1 454 0 discriminator 1
 522 0136 3B1C     		mov	r3, r7
 523 0138 0F33     		add	r3, r3, #15
 524 013a 1B78     		ldrb	r3, [r3]
 525 013c 364A     		ldr	r2, .L29+32
 526 013e D35C     		ldrb	r3, [r2, r3]
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 527              		.loc 1 453 0 discriminator 1
 528 0140 3A1C     		mov	r2, r7
 529 0142 1232     		add	r2, r2, #18
 530 0144 1288     		ldrh	r2, [r2]
 531 0146 9A42     		cmp	r2, r3
 532 0148 2ED2     		bcs	.L23
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 533              		.loc 1 455 0
 534 014a 7B69     		ldr	r3, [r7, #20]
 535 014c 002B     		cmp	r3, #0
 536 014e 2BD1     		bne	.L23
 537              	.L24:
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 538              		.loc 1 466 0
 539 0150 2F4B     		ldr	r3, .L29+24
 540 0152 7A68     		ldr	r2, [r7, #4]
 541 0154 5200     		lsl	r2, r2, #1
 542 0156 D35A     		ldrh	r3, [r2, r3]
 543 0158 1B02     		lsl	r3, r3, #8
 544 015a BB60     		str	r3, [r7, #8]
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 545              		.loc 1 467 0
 546 015c 304A     		ldr	r2, .L29+40
 547 015e 7B68     		ldr	r3, [r7, #4]
 548 0160 D318     		add	r3, r2, r3
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 19


 549 0162 1B78     		ldrb	r3, [r3]
 550 0164 BA68     		ldr	r2, [r7, #8]
 551 0166 1343     		orr	r3, r2
 552 0168 BB60     		str	r3, [r7, #8]
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 553              		.loc 1 470 0
 554 016a 3B1C     		mov	r3, r7
 555 016c 1033     		add	r3, r3, #16
 556 016e 1B88     		ldrh	r3, [r3]
 557 0170 BA68     		ldr	r2, [r7, #8]
 558 0172 D318     		add	r3, r2, r3
 559 0174 BB60     		str	r3, [r7, #8]
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 560              		.loc 1 473 0
 561 0176 264B     		ldr	r3, .L29+24
 562 0178 7A68     		ldr	r2, [r7, #4]
 563 017a 5200     		lsl	r2, r2, #1
 564 017c D35A     		ldrh	r3, [r2, r3]
 565 017e BA68     		ldr	r2, [r7, #8]
 566 0180 D31A     		sub	r3, r2, r3
 567 0182 BB60     		str	r3, [r7, #8]
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 568              		.loc 1 476 0
 569 0184 BB68     		ldr	r3, [r7, #8]
 570 0186 1B0A     		lsr	r3, r3, #8
 571 0188 99B2     		uxth	r1, r3
 572 018a 214B     		ldr	r3, .L29+24
 573 018c 7A68     		ldr	r2, [r7, #4]
 574 018e 5200     		lsl	r2, r2, #1
 575 0190 D152     		strh	r1, [r2, r3]
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 576              		.loc 1 477 0
 577 0192 BB68     		ldr	r3, [r7, #8]
 578 0194 DAB2     		uxtb	r2, r3
 579 0196 2249     		ldr	r1, .L29+40
 580 0198 7B68     		ldr	r3, [r7, #4]
 581 019a CB18     		add	r3, r1, r3
 582 019c 1A70     		strb	r2, [r3]
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 583              		.loc 1 479 0
 584 019e 1D4A     		ldr	r2, .L29+28
 585 01a0 7B68     		ldr	r3, [r7, #4]
 586 01a2 D318     		add	r3, r2, r3
 587 01a4 0022     		mov	r2, #0
 588 01a6 1A70     		strb	r2, [r3]
 589              	.L23:
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 20


 484:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 590              		.loc 1 486 0
 591 01a8 3B1C     		mov	r3, r7
 592 01aa 0E33     		add	r3, r3, #14
 593 01ac 1B78     		ldrb	r3, [r3]
 594 01ae 9BB2     		uxth	r3, r3
 595 01b0 3A1C     		mov	r2, r7
 596 01b2 1232     		add	r2, r2, #18
 597 01b4 1288     		ldrh	r2, [r2]
 598 01b6 9A42     		cmp	r2, r3
 599 01b8 16D9     		bls	.L25
 600              		.loc 1 486 0 is_stmt 0 discriminator 1
 601 01ba 7B69     		ldr	r3, [r7, #20]
 602 01bc 002B     		cmp	r3, #0
 603 01be 13D0     		beq	.L25
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 604              		.loc 1 490 0 is_stmt 1
 605 01c0 3B1C     		mov	r3, r7
 606 01c2 1233     		add	r3, r3, #18
 607 01c4 1B88     		ldrh	r3, [r3]
 608 01c6 FF2B     		cmp	r3, #255
 609 01c8 05D9     		bls	.L26
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 610              		.loc 1 492 0
 611 01ca 164A     		ldr	r2, .L29+44
 612 01cc 7B68     		ldr	r3, [r7, #4]
 613 01ce D318     		add	r3, r2, r3
 614 01d0 FF22     		mov	r2, #255
 615 01d2 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 616              		.loc 1 490 0
 617 01d4 0DE0     		b	.L16
 618              	.L26:
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 619              		.loc 1 496 0
 620 01d6 3B1C     		mov	r3, r7
 621 01d8 1233     		add	r3, r3, #18
 622 01da 1B88     		ldrh	r3, [r3]
 623 01dc DAB2     		uxtb	r2, r3
 624 01de 1149     		ldr	r1, .L29+44
 625 01e0 7B68     		ldr	r3, [r7, #4]
 626 01e2 CB18     		add	r3, r1, r3
 627 01e4 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 628              		.loc 1 490 0
 629 01e6 04E0     		b	.L16
 630              	.L25:
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 21


 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 631              		.loc 1 505 0
 632 01e8 0E4A     		ldr	r2, .L29+44
 633 01ea 7B68     		ldr	r3, [r7, #4]
 634 01ec D318     		add	r3, r2, r3
 635 01ee 0022     		mov	r2, #0
 636 01f0 1A70     		strb	r2, [r3]
 637              	.L16:
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 638              		.loc 1 512 0
 639 01f2 BD46     		mov	sp, r7
 640 01f4 07B0     		add	sp, sp, #28
 641              		@ sp needed
 642 01f6 90BD     		pop	{r4, r7, pc}
 643              	.L30:
 644              		.align	2
 645              	.L29:
 646 01f8 00000000 		.word	CapSense_widgetNumber
 647 01fc 00000000 		.word	CapSense_noiseThreshold
 648 0200 00000000 		.word	CapSense_sensorRaw
 649 0204 00000000 		.word	CapSense_enableRawFilters
 650 0208 00000000 		.word	CapSense_rawFilterData1
 651 020c 00000000 		.word	CapSense_config
 652 0210 00000000 		.word	CapSense_sensorBaseline
 653 0214 00000000 		.word	CapSense_lowBaselineResetCnt
 654 0218 00000000 		.word	CapSense_negativeNoiseThreshold
 655 021c 00000000 		.word	CapSense_lowBaselineReset
 656 0220 00000000 		.word	CapSense_sensorBaselineLow
 657 0224 00000000 		.word	CapSense_sensorSignal
 658              		.cfi_endproc
 659              	.LFE39:
 660              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 661              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 662              		.align	2
 663              		.global	CapSense_UpdateSensorBaseline
 664              		.code	16
 665              		.thumb_func
 666              		.type	CapSense_UpdateSensorBaseline, %function
 667              	CapSense_UpdateSensorBaseline:
 668              	.LFB40:
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 22


 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 669              		.loc 1 546 0
 670              		.cfi_startproc
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 82B0     		sub	sp, sp, #8
 676              		.cfi_def_cfa_offset 16
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 680              		.loc 1 558 0
 681 0008 7B68     		ldr	r3, [r7, #4]
 682 000a 181C     		mov	r0, r3
 683 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 23


 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 684              		.loc 1 561 0
 685 0010 7B68     		ldr	r3, [r7, #4]
 686 0012 181C     		mov	r0, r3
 687 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 688              		.loc 1 567 0
 689 0018 BD46     		mov	sp, r7
 690 001a 02B0     		add	sp, sp, #8
 691              		@ sp needed
 692 001c 80BD     		pop	{r7, pc}
 693              		.cfi_endproc
 694              	.LFE40:
 695              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 696 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 697              		.align	2
 698              		.global	CapSense_UpdateEnabledBaselines
 699              		.code	16
 700              		.thumb_func
 701              		.type	CapSense_UpdateEnabledBaselines, %function
 702              	CapSense_UpdateEnabledBaselines:
 703              	.LFB41:
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 24


 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 704              		.loc 1 600 0
 705              		.cfi_startproc
 706 0000 80B5     		push	{r7, lr}
 707              		.cfi_def_cfa_offset 8
 708              		.cfi_offset 7, -8
 709              		.cfi_offset 14, -4
 710 0002 82B0     		sub	sp, sp, #8
 711              		.cfi_def_cfa_offset 16
 712 0004 00AF     		add	r7, sp, #0
 713              		.cfi_def_cfa_register 7
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 714              		.loc 1 604 0
 715 0006 0023     		mov	r3, #0
 716 0008 7B60     		str	r3, [r7, #4]
 717 000a 11E0     		b	.L33
 718              	.L35:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 719              		.loc 1 606 0
 720 000c 0B4A     		ldr	r2, .L36
 721 000e 7B68     		ldr	r3, [r7, #4]
 722 0010 101C     		mov	r0, r2
 723 0012 191C     		mov	r1, r3
 724 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 725 0018 031C     		mov	r3, r0
 726 001a 3B60     		str	r3, [r7]
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 727              		.loc 1 608 0
 728 001c 3B68     		ldr	r3, [r7]
 729 001e 002B     		cmp	r3, #0
 730 0020 03D0     		beq	.L34
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 731              		.loc 1 610 0
 732 0022 7B68     		ldr	r3, [r7, #4]
 733 0024 181C     		mov	r0, r3
 734 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 735              	.L34:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 736              		.loc 1 604 0
 737 002a 7B68     		ldr	r3, [r7, #4]
 738 002c 0133     		add	r3, r3, #1
 739 002e 7B60     		str	r3, [r7, #4]
 740              	.L33:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 741              		.loc 1 604 0 is_stmt 0 discriminator 1
 742 0030 7B68     		ldr	r3, [r7, #4]
 743 0032 042B     		cmp	r3, #4
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 25


 744 0034 EAD9     		bls	.L35
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 745              		.loc 1 613 0 is_stmt 1
 746 0036 BD46     		mov	sp, r7
 747 0038 02B0     		add	sp, sp, #8
 748              		@ sp needed
 749 003a 80BD     		pop	{r7, pc}
 750              	.L37:
 751              		.align	2
 752              	.L36:
 753 003c 00000000 		.word	CapSense_sensorEnableMask
 754              		.cfi_endproc
 755              	.LFE41:
 756              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 757              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 758              		.align	2
 759              		.global	CapSense_UpdateWidgetBaseline
 760              		.code	16
 761              		.thumb_func
 762              		.type	CapSense_UpdateWidgetBaseline, %function
 763              	CapSense_UpdateWidgetBaseline:
 764              	.LFB42:
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 765              		.loc 1 645 0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 26


 766              		.cfi_startproc
 767 0000 80B5     		push	{r7, lr}
 768              		.cfi_def_cfa_offset 8
 769              		.cfi_offset 7, -8
 770              		.cfi_offset 14, -4
 771 0002 88B0     		sub	sp, sp, #32
 772              		.cfi_def_cfa_offset 40
 773 0004 00AF     		add	r7, sp, #0
 774              		.cfi_def_cfa_register 7
 775 0006 7860     		str	r0, [r7, #4]
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 776              		.loc 1 653 0
 777 0008 0523     		mov	r3, #5
 778 000a BB61     		str	r3, [r7, #24]
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 779              		.loc 1 656 0
 780 000c 0023     		mov	r3, #0
 781 000e 7B61     		str	r3, [r7, #20]
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 782              		.loc 1 659 0
 783 0010 0023     		mov	r3, #0
 784 0012 1A1C     		mov	r2, r3
 785 0014 BB69     		ldr	r3, [r7, #24]
 786 0016 D318     		add	r3, r2, r3
 787 0018 3B61     		str	r3, [r7, #16]
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 788              		.loc 1 661 0
 789 001a 7B69     		ldr	r3, [r7, #20]
 790 001c FB61     		str	r3, [r7, #28]
 791 001e 11E0     		b	.L39
 792              	.L41:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 793              		.loc 1 663 0
 794 0020 0C4A     		ldr	r2, .L42
 795 0022 FB69     		ldr	r3, [r7, #28]
 796 0024 101C     		mov	r0, r2
 797 0026 191C     		mov	r1, r3
 798 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 799 002c 031C     		mov	r3, r0
 800 002e FB60     		str	r3, [r7, #12]
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 801              		.loc 1 665 0
 802 0030 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 27


 803 0032 002B     		cmp	r3, #0
 804 0034 03D0     		beq	.L40
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 805              		.loc 1 667 0
 806 0036 FB69     		ldr	r3, [r7, #28]
 807 0038 181C     		mov	r0, r3
 808 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 809              	.L40:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 810              		.loc 1 661 0
 811 003e FB69     		ldr	r3, [r7, #28]
 812 0040 0133     		add	r3, r3, #1
 813 0042 FB61     		str	r3, [r7, #28]
 814              	.L39:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 815              		.loc 1 661 0 is_stmt 0 discriminator 1
 816 0044 FA69     		ldr	r2, [r7, #28]
 817 0046 3B69     		ldr	r3, [r7, #16]
 818 0048 9A42     		cmp	r2, r3
 819 004a E9D3     		bcc	.L41
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 820              		.loc 1 670 0 is_stmt 1
 821 004c BD46     		mov	sp, r7
 822 004e 08B0     		add	sp, sp, #32
 823              		@ sp needed
 824 0050 80BD     		pop	{r7, pc}
 825              	.L43:
 826 0052 C046     		.align	2
 827              	.L42:
 828 0054 00000000 		.word	CapSense_sensorEnableMask
 829              		.cfi_endproc
 830              	.LFE42:
 831              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 832              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 833              		.align	2
 834              		.global	CapSense_GetBaselineData
 835              		.code	16
 836              		.thumb_func
 837              		.type	CapSense_GetBaselineData, %function
 838              	CapSense_GetBaselineData:
 839              	.LFB43:
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 28


 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 840              		.loc 1 694 0
 841              		.cfi_startproc
 842 0000 80B5     		push	{r7, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 82B0     		sub	sp, sp, #8
 847              		.cfi_def_cfa_offset 16
 848 0004 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 850 0006 7860     		str	r0, [r7, #4]
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 851              		.loc 1 695 0
 852 0008 034B     		ldr	r3, .L46
 853 000a 7A68     		ldr	r2, [r7, #4]
 854 000c 5200     		lsl	r2, r2, #1
 855 000e D35A     		ldrh	r3, [r2, r3]
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 856              		.loc 1 696 0
 857 0010 181C     		mov	r0, r3
 858 0012 BD46     		mov	sp, r7
 859 0014 02B0     		add	sp, sp, #8
 860              		@ sp needed
 861 0016 80BD     		pop	{r7, pc}
 862              	.L47:
 863              		.align	2
 864              	.L46:
 865 0018 00000000 		.word	CapSense_sensorBaseline
 866              		.cfi_endproc
 867              	.LFE43:
 868              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 869              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 870              		.align	2
 871              		.global	CapSense_SetBaselineData
 872              		.code	16
 873              		.thumb_func
 874              		.type	CapSense_SetBaselineData, %function
 875              	CapSense_SetBaselineData:
 876              	.LFB44:
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 29


 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 877              		.loc 1 721 0
 878              		.cfi_startproc
 879 0000 80B5     		push	{r7, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 82B0     		sub	sp, sp, #8
 884              		.cfi_def_cfa_offset 16
 885 0004 00AF     		add	r7, sp, #0
 886              		.cfi_def_cfa_register 7
 887 0006 7860     		str	r0, [r7, #4]
 888 0008 0A1C     		mov	r2, r1
 889 000a BB1C     		add	r3, r7, #2
 890 000c 1A80     		strh	r2, [r3]
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 891              		.loc 1 722 0
 892 000e 044B     		ldr	r3, .L49
 893 0010 7A68     		ldr	r2, [r7, #4]
 894 0012 5200     		lsl	r2, r2, #1
 895 0014 B91C     		add	r1, r7, #2
 896 0016 0988     		ldrh	r1, [r1]
 897 0018 D152     		strh	r1, [r2, r3]
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 898              		.loc 1 723 0
 899 001a BD46     		mov	sp, r7
 900 001c 02B0     		add	sp, sp, #8
 901              		@ sp needed
 902 001e 80BD     		pop	{r7, pc}
 903              	.L50:
 904              		.align	2
 905              	.L49:
 906 0020 00000000 		.word	CapSense_sensorBaseline
 907              		.cfi_endproc
 908              	.LFE44:
 909              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 910              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 911              		.align	2
 912              		.global	CapSense_GetDiffCountData
 913              		.code	16
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 30


 914              		.thumb_func
 915              		.type	CapSense_GetDiffCountData, %function
 916              	CapSense_GetDiffCountData:
 917              	.LFB45:
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 918              		.loc 1 748 0
 919              		.cfi_startproc
 920 0000 80B5     		push	{r7, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
 924 0002 82B0     		sub	sp, sp, #8
 925              		.cfi_def_cfa_offset 16
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
 928 0006 7860     		str	r0, [r7, #4]
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 929              		.loc 1 749 0
 930 0008 034A     		ldr	r2, .L53
 931 000a 7B68     		ldr	r3, [r7, #4]
 932 000c D318     		add	r3, r2, r3
 933 000e 1B78     		ldrb	r3, [r3]
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 934              		.loc 1 750 0
 935 0010 181C     		mov	r0, r3
 936 0012 BD46     		mov	sp, r7
 937 0014 02B0     		add	sp, sp, #8
 938              		@ sp needed
 939 0016 80BD     		pop	{r7, pc}
 940              	.L54:
 941              		.align	2
 942              	.L53:
 943 0018 00000000 		.word	CapSense_sensorSignal
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 31


 944              		.cfi_endproc
 945              	.LFE45:
 946              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 947              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 948              		.align	2
 949              		.global	CapSense_SetDiffCountData
 950              		.code	16
 951              		.thumb_func
 952              		.type	CapSense_SetDiffCountData, %function
 953              	CapSense_SetDiffCountData:
 954              	.LFB46:
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 955              		.loc 1 775 0
 956              		.cfi_startproc
 957 0000 80B5     		push	{r7, lr}
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 82B0     		sub	sp, sp, #8
 962              		.cfi_def_cfa_offset 16
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 965 0006 7860     		str	r0, [r7, #4]
 966 0008 0A1C     		mov	r2, r1
 967 000a FB1C     		add	r3, r7, #3
 968 000c 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 969              		.loc 1 776 0
 970 000e 044A     		ldr	r2, .L56
 971 0010 7B68     		ldr	r3, [r7, #4]
 972 0012 D318     		add	r3, r2, r3
 973 0014 FA1C     		add	r2, r7, #3
 974 0016 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 32


 975 0018 1A70     		strb	r2, [r3]
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 976              		.loc 1 777 0
 977 001a BD46     		mov	sp, r7
 978 001c 02B0     		add	sp, sp, #8
 979              		@ sp needed
 980 001e 80BD     		pop	{r7, pc}
 981              	.L57:
 982              		.align	2
 983              	.L56:
 984 0020 00000000 		.word	CapSense_sensorSignal
 985              		.cfi_endproc
 986              	.LFE46:
 987              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 988              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 989              		.align	2
 990              		.global	CapSense_GetFingerThreshold
 991              		.code	16
 992              		.thumb_func
 993              		.type	CapSense_GetFingerThreshold, %function
 994              	CapSense_GetFingerThreshold:
 995              	.LFB47:
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 996              		.loc 1 802 0
 997              		.cfi_startproc
 998 0000 80B5     		push	{r7, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 7, -8
 1001              		.cfi_offset 14, -4
 1002 0002 82B0     		sub	sp, sp, #8
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 33


 1006 0006 7860     		str	r0, [r7, #4]
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 1007              		.loc 1 803 0
 1008 0008 034A     		ldr	r2, .L60
 1009 000a 7B68     		ldr	r3, [r7, #4]
 1010 000c D318     		add	r3, r2, r3
 1011 000e 1B78     		ldrb	r3, [r3]
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1012              		.loc 1 804 0
 1013 0010 181C     		mov	r0, r3
 1014 0012 BD46     		mov	sp, r7
 1015 0014 02B0     		add	sp, sp, #8
 1016              		@ sp needed
 1017 0016 80BD     		pop	{r7, pc}
 1018              	.L61:
 1019              		.align	2
 1020              	.L60:
 1021 0018 00000000 		.word	CapSense_fingerThreshold
 1022              		.cfi_endproc
 1023              	.LFE47:
 1024              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1025              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1026              		.align	2
 1027              		.global	CapSense_GetNoiseThreshold
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	CapSense_GetNoiseThreshold, %function
 1031              	CapSense_GetNoiseThreshold:
 1032              	.LFB48:
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1033              		.loc 1 829 0
 1034              		.cfi_startproc
 1035 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 34


 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 7, -8
 1038              		.cfi_offset 14, -4
 1039 0002 82B0     		sub	sp, sp, #8
 1040              		.cfi_def_cfa_offset 16
 1041 0004 00AF     		add	r7, sp, #0
 1042              		.cfi_def_cfa_register 7
 1043 0006 7860     		str	r0, [r7, #4]
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 1044              		.loc 1 830 0
 1045 0008 034A     		ldr	r2, .L64
 1046 000a 7B68     		ldr	r3, [r7, #4]
 1047 000c D318     		add	r3, r2, r3
 1048 000e 1B78     		ldrb	r3, [r3]
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1049              		.loc 1 831 0
 1050 0010 181C     		mov	r0, r3
 1051 0012 BD46     		mov	sp, r7
 1052 0014 02B0     		add	sp, sp, #8
 1053              		@ sp needed
 1054 0016 80BD     		pop	{r7, pc}
 1055              	.L65:
 1056              		.align	2
 1057              	.L64:
 1058 0018 00000000 		.word	CapSense_noiseThreshold
 1059              		.cfi_endproc
 1060              	.LFE48:
 1061              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1062              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1063              		.align	2
 1064              		.global	CapSense_GetFingerHysteresis
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	CapSense_GetFingerHysteresis, %function
 1068              	CapSense_GetFingerHysteresis:
 1069              	.LFB49:
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 35


 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1070              		.loc 1 857 0
 1071              		.cfi_startproc
 1072 0000 80B5     		push	{r7, lr}
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 7, -8
 1075              		.cfi_offset 14, -4
 1076 0002 82B0     		sub	sp, sp, #8
 1077              		.cfi_def_cfa_offset 16
 1078 0004 00AF     		add	r7, sp, #0
 1079              		.cfi_def_cfa_register 7
 1080 0006 7860     		str	r0, [r7, #4]
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 1081              		.loc 1 858 0
 1082 0008 034A     		ldr	r2, .L68
 1083 000a 7B68     		ldr	r3, [r7, #4]
 1084 000c D318     		add	r3, r2, r3
 1085 000e 1B78     		ldrb	r3, [r3]
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1086              		.loc 1 859 0
 1087 0010 181C     		mov	r0, r3
 1088 0012 BD46     		mov	sp, r7
 1089 0014 02B0     		add	sp, sp, #8
 1090              		@ sp needed
 1091 0016 80BD     		pop	{r7, pc}
 1092              	.L69:
 1093              		.align	2
 1094              	.L68:
 1095 0018 00000000 		.word	CapSense_hysteresis
 1096              		.cfi_endproc
 1097              	.LFE49:
 1098              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1099              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1100              		.align	2
 1101              		.global	CapSense_GetNegativeNoiseThreshold
 1102              		.code	16
 1103              		.thumb_func
 1104              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1105              	CapSense_GetNegativeNoiseThreshold:
 1106              	.LFB50:
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 36


 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1107              		.loc 1 885 0
 1108              		.cfi_startproc
 1109 0000 80B5     		push	{r7, lr}
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 7, -8
 1112              		.cfi_offset 14, -4
 1113 0002 82B0     		sub	sp, sp, #8
 1114              		.cfi_def_cfa_offset 16
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 1117 0006 7860     		str	r0, [r7, #4]
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 1118              		.loc 1 887 0
 1119 0008 034A     		ldr	r2, .L72
 1120 000a 7B68     		ldr	r3, [r7, #4]
 1121 000c D318     		add	r3, r2, r3
 1122 000e 1B78     		ldrb	r3, [r3]
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1123              		.loc 1 891 0
 1124 0010 181C     		mov	r0, r3
 1125 0012 BD46     		mov	sp, r7
 1126 0014 02B0     		add	sp, sp, #8
 1127              		@ sp needed
 1128 0016 80BD     		pop	{r7, pc}
 1129              	.L73:
 1130              		.align	2
 1131              	.L72:
 1132 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1133              		.cfi_endproc
 1134              	.LFE50:
 1135              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1136              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1137              		.align	2
 1138              		.global	CapSense_SetFingerThreshold
 1139              		.code	16
 1140              		.thumb_func
 1141              		.type	CapSense_SetFingerThreshold, %function
 1142              	CapSense_SetFingerThreshold:
 1143              	.LFB51:
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 37


 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 1144              		.loc 1 918 0
 1145              		.cfi_startproc
 1146 0000 80B5     		push	{r7, lr}
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 7, -8
 1149              		.cfi_offset 14, -4
 1150 0002 82B0     		sub	sp, sp, #8
 1151              		.cfi_def_cfa_offset 16
 1152 0004 00AF     		add	r7, sp, #0
 1153              		.cfi_def_cfa_register 7
 1154 0006 7860     		str	r0, [r7, #4]
 1155 0008 0A1C     		mov	r2, r1
 1156 000a FB1C     		add	r3, r7, #3
 1157 000c 1A70     		strb	r2, [r3]
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 1158              		.loc 1 919 0
 1159 000e 044A     		ldr	r2, .L75
 1160 0010 7B68     		ldr	r3, [r7, #4]
 1161 0012 D318     		add	r3, r2, r3
 1162 0014 FA1C     		add	r2, r7, #3
 1163 0016 1278     		ldrb	r2, [r2]
 1164 0018 1A70     		strb	r2, [r3]
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1165              		.loc 1 920 0
 1166 001a BD46     		mov	sp, r7
 1167 001c 02B0     		add	sp, sp, #8
 1168              		@ sp needed
 1169 001e 80BD     		pop	{r7, pc}
 1170              	.L76:
 1171              		.align	2
 1172              	.L75:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 38


 1173 0020 00000000 		.word	CapSense_fingerThreshold
 1174              		.cfi_endproc
 1175              	.LFE51:
 1176              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1177              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1178              		.align	2
 1179              		.global	CapSense_SetNoiseThreshold
 1180              		.code	16
 1181              		.thumb_func
 1182              		.type	CapSense_SetNoiseThreshold, %function
 1183              	CapSense_SetNoiseThreshold:
 1184              	.LFB52:
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1185              		.loc 1 946 0
 1186              		.cfi_startproc
 1187 0000 80B5     		push	{r7, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
 1190              		.cfi_offset 14, -4
 1191 0002 82B0     		sub	sp, sp, #8
 1192              		.cfi_def_cfa_offset 16
 1193 0004 00AF     		add	r7, sp, #0
 1194              		.cfi_def_cfa_register 7
 1195 0006 7860     		str	r0, [r7, #4]
 1196 0008 0A1C     		mov	r2, r1
 1197 000a FB1C     		add	r3, r7, #3
 1198 000c 1A70     		strb	r2, [r3]
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 1199              		.loc 1 947 0
 1200 000e 044A     		ldr	r2, .L78
 1201 0010 7B68     		ldr	r3, [r7, #4]
 1202 0012 D318     		add	r3, r2, r3
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 39


 1203 0014 FA1C     		add	r2, r7, #3
 1204 0016 1278     		ldrb	r2, [r2]
 1205 0018 1A70     		strb	r2, [r3]
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1206              		.loc 1 948 0
 1207 001a BD46     		mov	sp, r7
 1208 001c 02B0     		add	sp, sp, #8
 1209              		@ sp needed
 1210 001e 80BD     		pop	{r7, pc}
 1211              	.L79:
 1212              		.align	2
 1213              	.L78:
 1214 0020 00000000 		.word	CapSense_noiseThreshold
 1215              		.cfi_endproc
 1216              	.LFE52:
 1217              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1218              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1219              		.align	2
 1220              		.global	CapSense_SetFingerHysteresis
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	CapSense_SetFingerHysteresis, %function
 1224              	CapSense_SetFingerHysteresis:
 1225              	.LFB53:
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1226              		.loc 1 974 0
 1227              		.cfi_startproc
 1228 0000 80B5     		push	{r7, lr}
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 7, -8
 1231              		.cfi_offset 14, -4
 1232 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 40


 1233              		.cfi_def_cfa_offset 16
 1234 0004 00AF     		add	r7, sp, #0
 1235              		.cfi_def_cfa_register 7
 1236 0006 7860     		str	r0, [r7, #4]
 1237 0008 0A1C     		mov	r2, r1
 1238 000a FB1C     		add	r3, r7, #3
 1239 000c 1A70     		strb	r2, [r3]
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 1240              		.loc 1 975 0
 1241 000e 044A     		ldr	r2, .L81
 1242 0010 7B68     		ldr	r3, [r7, #4]
 1243 0012 D318     		add	r3, r2, r3
 1244 0014 FA1C     		add	r2, r7, #3
 1245 0016 1278     		ldrb	r2, [r2]
 1246 0018 1A70     		strb	r2, [r3]
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1247              		.loc 1 976 0
 1248 001a BD46     		mov	sp, r7
 1249 001c 02B0     		add	sp, sp, #8
 1250              		@ sp needed
 1251 001e 80BD     		pop	{r7, pc}
 1252              	.L82:
 1253              		.align	2
 1254              	.L81:
 1255 0020 00000000 		.word	CapSense_hysteresis
 1256              		.cfi_endproc
 1257              	.LFE53:
 1258              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1259              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1260              		.align	2
 1261              		.global	CapSense_SetNegativeNoiseThreshold
 1262              		.code	16
 1263              		.thumb_func
 1264              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1265              	CapSense_SetNegativeNoiseThreshold:
 1266              	.LFB54:
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 41


 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1267              		.loc 1 1003 0
 1268              		.cfi_startproc
 1269 0000 80B5     		push	{r7, lr}
 1270              		.cfi_def_cfa_offset 8
 1271              		.cfi_offset 7, -8
 1272              		.cfi_offset 14, -4
 1273 0002 82B0     		sub	sp, sp, #8
 1274              		.cfi_def_cfa_offset 16
 1275 0004 00AF     		add	r7, sp, #0
 1276              		.cfi_def_cfa_register 7
 1277 0006 7860     		str	r0, [r7, #4]
 1278 0008 0A1C     		mov	r2, r1
 1279 000a FB1C     		add	r3, r7, #3
 1280 000c 1A70     		strb	r2, [r3]
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 1281              		.loc 1 1004 0
 1282 000e 044A     		ldr	r2, .L84
 1283 0010 7B68     		ldr	r3, [r7, #4]
 1284 0012 D318     		add	r3, r2, r3
 1285 0014 FA1C     		add	r2, r7, #3
 1286 0016 1278     		ldrb	r2, [r2]
 1287 0018 1A70     		strb	r2, [r3]
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1288              		.loc 1 1005 0
 1289 001a BD46     		mov	sp, r7
 1290 001c 02B0     		add	sp, sp, #8
 1291              		@ sp needed
 1292 001e 80BD     		pop	{r7, pc}
 1293              	.L85:
 1294              		.align	2
 1295              	.L84:
 1296 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1297              		.cfi_endproc
 1298              	.LFE54:
 1299              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1300              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1301              		.align	2
 1302              		.global	CapSense_SetDebounce
 1303              		.code	16
 1304              		.thumb_func
 1305              		.type	CapSense_SetDebounce, %function
 1306              	CapSense_SetDebounce:
 1307              	.LFB55:
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 42


1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1308              		.loc 1 1031 0
 1309              		.cfi_startproc
 1310 0000 80B5     		push	{r7, lr}
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 82B0     		sub	sp, sp, #8
 1315              		.cfi_def_cfa_offset 16
 1316 0004 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 1318 0006 7860     		str	r0, [r7, #4]
 1319 0008 0A1C     		mov	r2, r1
 1320 000a FB1C     		add	r3, r7, #3
 1321 000c 1A70     		strb	r2, [r3]
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 1322              		.loc 1 1032 0
 1323 000e 044A     		ldr	r2, .L87
 1324 0010 7B68     		ldr	r3, [r7, #4]
 1325 0012 D318     		add	r3, r2, r3
 1326 0014 FA1C     		add	r2, r7, #3
 1327 0016 1278     		ldrb	r2, [r2]
 1328 0018 1A70     		strb	r2, [r3]
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1329              		.loc 1 1033 0
 1330 001a BD46     		mov	sp, r7
 1331 001c 02B0     		add	sp, sp, #8
 1332              		@ sp needed
 1333 001e 80BD     		pop	{r7, pc}
 1334              	.L88:
 1335              		.align	2
 1336              	.L87:
 1337 0020 00000000 		.word	CapSense_debounce
 1338              		.cfi_endproc
 1339              	.LFE55:
 1340              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1341              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1342              		.align	2
 1343              		.global	CapSense_SetLowBaselineReset
 1344              		.code	16
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 43


 1345              		.thumb_func
 1346              		.type	CapSense_SetLowBaselineReset, %function
 1347              	CapSense_SetLowBaselineReset:
 1348              	.LFB56:
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1349              		.loc 1 1059 0
 1350              		.cfi_startproc
 1351 0000 80B5     		push	{r7, lr}
 1352              		.cfi_def_cfa_offset 8
 1353              		.cfi_offset 7, -8
 1354              		.cfi_offset 14, -4
 1355 0002 82B0     		sub	sp, sp, #8
 1356              		.cfi_def_cfa_offset 16
 1357 0004 00AF     		add	r7, sp, #0
 1358              		.cfi_def_cfa_register 7
 1359 0006 7860     		str	r0, [r7, #4]
 1360 0008 0A1C     		mov	r2, r1
 1361 000a FB1C     		add	r3, r7, #3
 1362 000c 1A70     		strb	r2, [r3]
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 1363              		.loc 1 1060 0
 1364 000e 044A     		ldr	r2, .L90
 1365 0010 7B68     		ldr	r3, [r7, #4]
 1366 0012 D318     		add	r3, r2, r3
 1367 0014 FA1C     		add	r2, r7, #3
 1368 0016 1278     		ldrb	r2, [r2]
 1369 0018 1A70     		strb	r2, [r3]
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1370              		.loc 1 1061 0
 1371 001a BD46     		mov	sp, r7
 1372 001c 02B0     		add	sp, sp, #8
 1373              		@ sp needed
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 44


 1374 001e 80BD     		pop	{r7, pc}
 1375              	.L91:
 1376              		.align	2
 1377              	.L90:
 1378 0020 00000000 		.word	CapSense_lowBaselineReset
 1379              		.cfi_endproc
 1380              	.LFE56:
 1381              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1382              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1383              		.align	2
 1384              		.global	CapSense_CheckIsSensorActive
 1385              		.code	16
 1386              		.thumb_func
 1387              		.type	CapSense_CheckIsSensorActive, %function
 1388              	CapSense_CheckIsSensorActive:
 1389              	.LFB57:
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 45


1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 1390              		.loc 1 1105 0
 1391              		.cfi_startproc
 1392 0000 80B5     		push	{r7, lr}
 1393              		.cfi_def_cfa_offset 8
 1394              		.cfi_offset 7, -8
 1395              		.cfi_offset 14, -4
 1396 0002 84B0     		sub	sp, sp, #16
 1397              		.cfi_def_cfa_offset 24
 1398 0004 00AF     		add	r7, sp, #0
 1399              		.cfi_def_cfa_register 7
 1400 0006 7860     		str	r0, [r7, #4]
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	static uint8 CapSense_debounceCounter[] = {
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1401              		.loc 1 1119 0
 1402 0008 3B1C     		mov	r3, r7
 1403 000a 0F33     		add	r3, r3, #15
 1404 000c 4549     		ldr	r1, .L101
 1405 000e 7A68     		ldr	r2, [r7, #4]
 1406 0010 8A18     		add	r2, r1, r2
 1407 0012 1278     		ldrb	r2, [r2]
 1408 0014 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1409              		.loc 1 1121 0
 1410 0016 3B1C     		mov	r3, r7
 1411 0018 0F33     		add	r3, r3, #15
 1412 001a 1A78     		ldrb	r2, [r3]
 1413 001c 3B1C     		mov	r3, r7
 1414 001e 0E33     		add	r3, r3, #14
 1415 0020 4149     		ldr	r1, .L101+4
 1416 0022 8A5C     		ldrb	r2, [r1, r2]
 1417 0024 1A70     		strb	r2, [r3]
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 1418              		.loc 1 1122 0
 1419 0026 3B1C     		mov	r3, r7
 1420 0028 0F33     		add	r3, r3, #15
 1421 002a 1A78     		ldrb	r2, [r3]
 1422 002c 3B1C     		mov	r3, r7
 1423 002e 0D33     		add	r3, r3, #13
 1424 0030 3E49     		ldr	r1, .L101+8
 1425 0032 8A5C     		ldrb	r2, [r1, r2]
 1426 0034 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 46


1123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 1427              		.loc 1 1123 0
 1428 0036 3B1C     		mov	r3, r7
 1429 0038 0F33     		add	r3, r3, #15
 1430 003a 1A78     		ldrb	r2, [r3]
 1431 003c 3B1C     		mov	r3, r7
 1432 003e 0C33     		add	r3, r3, #12
 1433 0040 3B49     		ldr	r1, .L101+12
 1434 0042 8A5C     		ldrb	r2, [r1, r2]
 1435 0044 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1436              		.loc 1 1125 0
 1437 0046 3B1C     		mov	r3, r7
 1438 0048 0B33     		add	r3, r3, #11
 1439 004a 0022     		mov	r2, #0
 1440 004c 1A70     		strb	r2, [r3]
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 1441              		.loc 1 1126 0
 1442 004e 3B1C     		mov	r3, r7
 1443 0050 0B33     		add	r3, r3, #11
 1444 0052 1B78     		ldrb	r3, [r3]
 1445 0054 374A     		ldr	r2, .L101+16
 1446 0056 0121     		mov	r1, #1
 1447 0058 D154     		strb	r1, [r2, r3]
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1448              		.loc 1 1130 0
 1449 005a 374A     		ldr	r2, .L101+20
 1450 005c 7B68     		ldr	r3, [r7, #4]
 1451 005e 101C     		mov	r0, r2
 1452 0060 191C     		mov	r1, r3
 1453 0062 FFF7FEFF 		bl	CapSense_GetBitValue
 1454 0066 031C     		mov	r3, r0
 1455 0068 002B     		cmp	r3, #0
 1456 006a 1DD0     		beq	.L93
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1457              		.loc 1 1133 0
 1458 006c 334A     		ldr	r2, .L101+24
 1459 006e 7B68     		ldr	r3, [r7, #4]
 1460 0070 D318     		add	r3, r2, r3
 1461 0072 1B78     		ldrb	r3, [r3]
 1462 0074 1A1C     		mov	r2, r3
 1463 0076 3B1C     		mov	r3, r7
 1464 0078 0E33     		add	r3, r3, #14
 1465 007a 1978     		ldrb	r1, [r3]
 1466 007c 3B1C     		mov	r3, r7
 1467 007e 0D33     		add	r3, r3, #13
 1468 0080 1B78     		ldrb	r3, [r3]
 1469 0082 CB1A     		sub	r3, r1, r3
 1470 0084 9A42     		cmp	r2, r3
 1471 0086 3DDA     		bge	.L95
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 47


1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1472              		.loc 1 1135 0
 1473 0088 2B4A     		ldr	r2, .L101+20
 1474 008a 7B68     		ldr	r3, [r7, #4]
 1475 008c 101C     		mov	r0, r2
 1476 008e 191C     		mov	r1, r3
 1477 0090 0022     		mov	r2, #0
 1478 0092 FFF7FEFF 		bl	CapSense_SetBitValue
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1479              		.loc 1 1137 0
 1480 0096 3B1C     		mov	r3, r7
 1481 0098 0B33     		add	r3, r3, #11
 1482 009a 1B78     		ldrb	r3, [r3]
 1483 009c 254A     		ldr	r2, .L101+16
 1484 009e 391C     		mov	r1, r7
 1485 00a0 0C31     		add	r1, r1, #12
 1486 00a2 0978     		ldrb	r1, [r1]
 1487 00a4 D154     		strb	r1, [r2, r3]
 1488 00a6 2DE0     		b	.L95
 1489              	.L93:
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1490              		.loc 1 1143 0
 1491 00a8 244A     		ldr	r2, .L101+24
 1492 00aa 7B68     		ldr	r3, [r7, #4]
 1493 00ac D318     		add	r3, r2, r3
 1494 00ae 1B78     		ldrb	r3, [r3]
 1495 00b0 1A1C     		mov	r2, r3
 1496 00b2 3B1C     		mov	r3, r7
 1497 00b4 0E33     		add	r3, r3, #14
 1498 00b6 1978     		ldrb	r1, [r3]
 1499 00b8 3B1C     		mov	r3, r7
 1500 00ba 0D33     		add	r3, r3, #13
 1501 00bc 1B78     		ldrb	r3, [r3]
 1502 00be CB18     		add	r3, r1, r3
 1503 00c0 9A42     		cmp	r2, r3
 1504 00c2 17DB     		blt	.L96
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 1505              		.loc 1 1145 0
 1506 00c4 3B1C     		mov	r3, r7
 1507 00c6 0B33     		add	r3, r3, #11
 1508 00c8 1B78     		ldrb	r3, [r3]
 1509 00ca 1A4A     		ldr	r2, .L101+16
 1510 00cc D25C     		ldrb	r2, [r2, r3]
 1511 00ce 013A     		sub	r2, r2, #1
 1512 00d0 D1B2     		uxtb	r1, r2
 1513 00d2 184A     		ldr	r2, .L101+16
 1514 00d4 D154     		strb	r1, [r2, r3]
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1515              		.loc 1 1147 0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 48


 1516 00d6 3B1C     		mov	r3, r7
 1517 00d8 0B33     		add	r3, r3, #11
 1518 00da 1B78     		ldrb	r3, [r3]
 1519 00dc 154A     		ldr	r2, .L101+16
 1520 00de D35C     		ldrb	r3, [r2, r3]
 1521 00e0 002B     		cmp	r3, #0
 1522 00e2 0FD1     		bne	.L95
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 1523              		.loc 1 1149 0
 1524 00e4 144A     		ldr	r2, .L101+20
 1525 00e6 7B68     		ldr	r3, [r7, #4]
 1526 00e8 101C     		mov	r0, r2
 1527 00ea 191C     		mov	r1, r3
 1528 00ec 0122     		mov	r2, #1
 1529 00ee FFF7FEFF 		bl	CapSense_SetBitValue
 1530 00f2 07E0     		b	.L95
 1531              	.L96:
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1532              		.loc 1 1155 0
 1533 00f4 3B1C     		mov	r3, r7
 1534 00f6 0B33     		add	r3, r3, #11
 1535 00f8 1B78     		ldrb	r3, [r3]
 1536 00fa 0E4A     		ldr	r2, .L101+16
 1537 00fc 391C     		mov	r1, r7
 1538 00fe 0C31     		add	r1, r1, #12
 1539 0100 0978     		ldrb	r1, [r1]
 1540 0102 D154     		strb	r1, [r2, r3]
 1541              	.L95:
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1542              		.loc 1 1159 0
 1543 0104 0C4A     		ldr	r2, .L101+20
 1544 0106 7B68     		ldr	r3, [r7, #4]
 1545 0108 101C     		mov	r0, r2
 1546 010a 191C     		mov	r1, r3
 1547 010c FFF7FEFF 		bl	CapSense_GetBitValue
 1548 0110 031C     		mov	r3, r0
 1549 0112 002B     		cmp	r3, #0
 1550 0114 01D0     		beq	.L98
 1551              		.loc 1 1159 0 is_stmt 0 discriminator 1
 1552 0116 0123     		mov	r3, #1
 1553 0118 00E0     		b	.L99
 1554              	.L98:
 1555              		.loc 1 1159 0 discriminator 2
 1556 011a 0023     		mov	r3, #0
 1557              	.L99:
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1558              		.loc 1 1160 0 is_stmt 1 discriminator 3
 1559 011c 181C     		mov	r0, r3
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 49


 1560 011e BD46     		mov	sp, r7
 1561 0120 04B0     		add	sp, sp, #16
 1562              		@ sp needed
 1563 0122 80BD     		pop	{r7, pc}
 1564              	.L102:
 1565              		.align	2
 1566              	.L101:
 1567 0124 00000000 		.word	CapSense_widgetNumber
 1568 0128 00000000 		.word	CapSense_fingerThreshold
 1569 012c 00000000 		.word	CapSense_hysteresis
 1570 0130 00000000 		.word	CapSense_debounce
 1571 0134 20000000 		.word	CapSense_debounceCounter.5358
 1572 0138 00000000 		.word	CapSense_sensorOnMask
 1573 013c 00000000 		.word	CapSense_sensorSignal
 1574              		.cfi_endproc
 1575              	.LFE57:
 1576              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1577              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1578              		.align	2
 1579              		.global	CapSense_CheckIsWidgetActive
 1580              		.code	16
 1581              		.thumb_func
 1582              		.type	CapSense_CheckIsWidgetActive, %function
 1583              	CapSense_CheckIsWidgetActive:
 1584              	.LFB58:
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 50


 1585              		.loc 1 1192 0
 1586              		.cfi_startproc
 1587 0000 80B5     		push	{r7, lr}
 1588              		.cfi_def_cfa_offset 8
 1589              		.cfi_offset 7, -8
 1590              		.cfi_offset 14, -4
 1591 0002 86B0     		sub	sp, sp, #24
 1592              		.cfi_def_cfa_offset 32
 1593 0004 00AF     		add	r7, sp, #0
 1594              		.cfi_def_cfa_register 7
 1595 0006 7860     		str	r0, [r7, #4]
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1596              		.loc 1 1193 0
 1597 0008 0023     		mov	r3, #0
 1598 000a 7B61     		str	r3, [r7, #20]
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1599              		.loc 1 1194 0
 1600 000c 0523     		mov	r3, #5
 1601 000e 1A1C     		mov	r2, r3
 1602 0010 7B69     		ldr	r3, [r7, #20]
 1603 0012 D318     		add	r3, r2, r3
 1604 0014 FB60     		str	r3, [r7, #12]
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1605              		.loc 1 1195 0
 1606 0016 0023     		mov	r3, #0
 1607 0018 3B61     		str	r3, [r7, #16]
 1608              	.L105:
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1609              		.loc 1 1200 0
 1610 001a 7B69     		ldr	r3, [r7, #20]
 1611 001c 181C     		mov	r0, r3
 1612 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1613 0022 031C     		mov	r3, r0
 1614 0024 002B     		cmp	r3, #0
 1615 0026 01D0     		beq	.L104
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1616              		.loc 1 1202 0
 1617 0028 0123     		mov	r3, #1
 1618 002a 3B61     		str	r3, [r7, #16]
 1619              	.L104:
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1620              		.loc 1 1204 0
 1621 002c 7B69     		ldr	r3, [r7, #20]
 1622 002e 0133     		add	r3, r3, #1
 1623 0030 7B61     		str	r3, [r7, #20]
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1624              		.loc 1 1206 0
 1625 0032 7A69     		ldr	r2, [r7, #20]
 1626 0034 FB68     		ldr	r3, [r7, #12]
 1627 0036 9A42     		cmp	r2, r3
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 51


 1628 0038 EFD3     		bcc	.L105
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1629              		.loc 1 1210 0
 1630 003a 3B69     		ldr	r3, [r7, #16]
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1631              		.loc 1 1211 0
 1632 003c 181C     		mov	r0, r3
 1633 003e BD46     		mov	sp, r7
 1634 0040 06B0     		add	sp, sp, #24
 1635              		@ sp needed
 1636 0042 80BD     		pop	{r7, pc}
 1637              		.cfi_endproc
 1638              	.LFE58:
 1639              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1640              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1641              		.align	2
 1642              		.global	CapSense_CheckIsAnyWidgetActive
 1643              		.code	16
 1644              		.thumb_func
 1645              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1646              	CapSense_CheckIsAnyWidgetActive:
 1647              	.LFB59:
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1648              		.loc 1 1238 0
 1649              		.cfi_startproc
 1650 0000 80B5     		push	{r7, lr}
 1651              		.cfi_def_cfa_offset 8
 1652              		.cfi_offset 7, -8
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 52


 1653              		.cfi_offset 14, -4
 1654 0002 82B0     		sub	sp, sp, #8
 1655              		.cfi_def_cfa_offset 16
 1656 0004 00AF     		add	r7, sp, #0
 1657              		.cfi_def_cfa_register 7
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1658              		.loc 1 1241 0
 1659 0006 0023     		mov	r3, #0
 1660 0008 3B60     		str	r3, [r7]
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1661              		.loc 1 1243 0
 1662 000a 0023     		mov	r3, #0
 1663 000c 7B60     		str	r3, [r7, #4]
 1664 000e 0BE0     		b	.L108
 1665              	.L110:
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1666              		.loc 1 1245 0
 1667 0010 7B68     		ldr	r3, [r7, #4]
 1668 0012 181C     		mov	r0, r3
 1669 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1670 0018 031C     		mov	r3, r0
 1671 001a 002B     		cmp	r3, #0
 1672 001c 01D0     		beq	.L109
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1673              		.loc 1 1247 0
 1674 001e 0123     		mov	r3, #1
 1675 0020 3B60     		str	r3, [r7]
 1676              	.L109:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1677              		.loc 1 1243 0
 1678 0022 7B68     		ldr	r3, [r7, #4]
 1679 0024 0133     		add	r3, r3, #1
 1680 0026 7B60     		str	r3, [r7, #4]
 1681              	.L108:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1682              		.loc 1 1243 0 is_stmt 0 discriminator 1
 1683 0028 7B68     		ldr	r3, [r7, #4]
 1684 002a 002B     		cmp	r3, #0
 1685 002c F0D0     		beq	.L110
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1686              		.loc 1 1253 0 is_stmt 1
 1687 002e 3B68     		ldr	r3, [r7]
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1688              		.loc 1 1254 0
 1689 0030 181C     		mov	r0, r3
 1690 0032 BD46     		mov	sp, r7
 1691 0034 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 53


 1692              		@ sp needed
 1693 0036 80BD     		pop	{r7, pc}
 1694              		.cfi_endproc
 1695              	.LFE59:
 1696              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1697              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1698              		.align	2
 1699              		.global	CapSense_EnableWidget
 1700              		.code	16
 1701              		.thumb_func
 1702              		.type	CapSense_EnableWidget, %function
 1703              	CapSense_EnableWidget:
 1704              	.LFB60:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1705              		.loc 1 1285 0
 1706              		.cfi_startproc
 1707 0000 80B5     		push	{r7, lr}
 1708              		.cfi_def_cfa_offset 8
 1709              		.cfi_offset 7, -8
 1710              		.cfi_offset 14, -4
 1711 0002 84B0     		sub	sp, sp, #16
 1712              		.cfi_def_cfa_offset 24
 1713 0004 00AF     		add	r7, sp, #0
 1714              		.cfi_def_cfa_register 7
 1715 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 54


 1716              		.loc 1 1287 0
 1717 0008 3B1C     		mov	r3, r7
 1718 000a 0F33     		add	r3, r3, #15
 1719 000c 0022     		mov	r2, #0
 1720 000e 1A70     		strb	r2, [r3]
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1721              		.loc 1 1288 0
 1722 0010 0521     		mov	r1, #5
 1723 0012 3B1C     		mov	r3, r7
 1724 0014 0E33     		add	r3, r3, #14
 1725 0016 3A1C     		mov	r2, r7
 1726 0018 0F32     		add	r2, r2, #15
 1727 001a 1278     		ldrb	r2, [r2]
 1728 001c 8A18     		add	r2, r1, r2
 1729 001e 1A70     		strb	r2, [r3]
 1730              	.L113:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1731              		.loc 1 1293 0 discriminator 1
 1732 0020 3B1C     		mov	r3, r7
 1733 0022 0F33     		add	r3, r3, #15
 1734 0024 1B78     		ldrb	r3, [r3]
 1735 0026 0C4A     		ldr	r2, .L114
 1736 0028 101C     		mov	r0, r2
 1737 002a 191C     		mov	r1, r3
 1738 002c 0122     		mov	r2, #1
 1739 002e FFF7FEFF 		bl	CapSense_SetBitValue
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1740              		.loc 1 1294 0 discriminator 1
 1741 0032 3B1C     		mov	r3, r7
 1742 0034 0F33     		add	r3, r3, #15
 1743 0036 1A78     		ldrb	r2, [r3]
 1744 0038 3B1C     		mov	r3, r7
 1745 003a 0F33     		add	r3, r3, #15
 1746 003c 0132     		add	r2, r2, #1
 1747 003e 1A70     		strb	r2, [r3]
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1748              		.loc 1 1296 0 discriminator 1
 1749 0040 3A1C     		mov	r2, r7
 1750 0042 0F32     		add	r2, r2, #15
 1751 0044 3B1C     		mov	r3, r7
 1752 0046 0E33     		add	r3, r3, #14
 1753 0048 1278     		ldrb	r2, [r2]
 1754 004a 1B78     		ldrb	r3, [r3]
 1755 004c 9A42     		cmp	r2, r3
 1756 004e E7D3     		bcc	.L113
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1757              		.loc 1 1297 0
 1758 0050 BD46     		mov	sp, r7
 1759 0052 04B0     		add	sp, sp, #16
 1760              		@ sp needed
 1761 0054 80BD     		pop	{r7, pc}
 1762              	.L115:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 55


 1763 0056 C046     		.align	2
 1764              	.L114:
 1765 0058 00000000 		.word	CapSense_sensorEnableMask
 1766              		.cfi_endproc
 1767              	.LFE60:
 1768              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1769              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1770              		.align	2
 1771              		.global	CapSense_DisableWidget
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	CapSense_DisableWidget, %function
 1775              	CapSense_DisableWidget:
 1776              	.LFB61:
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1777              		.loc 1 1328 0
 1778              		.cfi_startproc
 1779 0000 80B5     		push	{r7, lr}
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 7, -8
 1782              		.cfi_offset 14, -4
 1783 0002 84B0     		sub	sp, sp, #16
 1784              		.cfi_def_cfa_offset 24
 1785 0004 00AF     		add	r7, sp, #0
 1786              		.cfi_def_cfa_register 7
 1787 0006 7860     		str	r0, [r7, #4]
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 56


 1788              		.loc 1 1329 0
 1789 0008 3B1C     		mov	r3, r7
 1790 000a 0F33     		add	r3, r3, #15
 1791 000c 0022     		mov	r2, #0
 1792 000e 1A70     		strb	r2, [r3]
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1793              		.loc 1 1330 0
 1794 0010 0521     		mov	r1, #5
 1795 0012 3B1C     		mov	r3, r7
 1796 0014 0E33     		add	r3, r3, #14
 1797 0016 3A1C     		mov	r2, r7
 1798 0018 0F32     		add	r2, r2, #15
 1799 001a 1278     		ldrb	r2, [r2]
 1800 001c 8A18     		add	r2, r1, r2
 1801 001e 1A70     		strb	r2, [r3]
 1802              	.L117:
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1803              		.loc 1 1336 0 discriminator 1
 1804 0020 3B1C     		mov	r3, r7
 1805 0022 0F33     		add	r3, r3, #15
 1806 0024 1B78     		ldrb	r3, [r3]
 1807 0026 0C4A     		ldr	r2, .L118
 1808 0028 101C     		mov	r0, r2
 1809 002a 191C     		mov	r1, r3
 1810 002c 0022     		mov	r2, #0
 1811 002e FFF7FEFF 		bl	CapSense_SetBitValue
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1812              		.loc 1 1337 0 discriminator 1
 1813 0032 3B1C     		mov	r3, r7
 1814 0034 0F33     		add	r3, r3, #15
 1815 0036 1A78     		ldrb	r2, [r3]
 1816 0038 3B1C     		mov	r3, r7
 1817 003a 0F33     		add	r3, r3, #15
 1818 003c 0132     		add	r2, r2, #1
 1819 003e 1A70     		strb	r2, [r3]
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1820              		.loc 1 1339 0 discriminator 1
 1821 0040 3A1C     		mov	r2, r7
 1822 0042 0F32     		add	r2, r2, #15
 1823 0044 3B1C     		mov	r3, r7
 1824 0046 0E33     		add	r3, r3, #14
 1825 0048 1278     		ldrb	r2, [r2]
 1826 004a 1B78     		ldrb	r3, [r3]
 1827 004c 9A42     		cmp	r2, r3
 1828 004e E7D3     		bcc	.L117
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1829              		.loc 1 1340 0
 1830 0050 BD46     		mov	sp, r7
 1831 0052 04B0     		add	sp, sp, #16
 1832              		@ sp needed
 1833 0054 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 57


 1834              	.L119:
 1835 0056 C046     		.align	2
 1836              	.L118:
 1837 0058 00000000 		.word	CapSense_sensorEnableMask
 1838              		.cfi_endproc
 1839              	.LFE61:
 1840              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1841              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1842              		.align	2
 1843              		.global	CapSense_FindMaximum
 1844              		.code	16
 1845              		.thumb_func
 1846              		.type	CapSense_FindMaximum, %function
 1847              	CapSense_FindMaximum:
 1848              	.LFB62:
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1849              		.loc 1 1379 0
 1850              		.cfi_startproc
 1851 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 58


 1852              		.cfi_def_cfa_offset 8
 1853              		.cfi_offset 7, -8
 1854              		.cfi_offset 14, -4
 1855 0002 84B0     		sub	sp, sp, #16
 1856              		.cfi_def_cfa_offset 24
 1857 0004 00AF     		add	r7, sp, #0
 1858              		.cfi_def_cfa_register 7
 1859 0006 FB1D     		add	r3, r7, #7
 1860 0008 1870     		strb	r0, [r3]
 1861 000a BB1D     		add	r3, r7, #6
 1862 000c 1970     		strb	r1, [r3]
 1863 000e 7B1D     		add	r3, r7, #5
 1864 0010 1A70     		strb	r2, [r3]
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1865              		.loc 1 1390 0
 1866 0012 3B1C     		mov	r3, r7
 1867 0014 0E33     		add	r3, r3, #14
 1868 0016 FF22     		mov	r2, #255
 1869 0018 1A70     		strb	r2, [r3]
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1870              		.loc 1 1392 0
 1871 001a 3B1C     		mov	r3, r7
 1872 001c 0D33     		add	r3, r3, #13
 1873 001e 0022     		mov	r2, #0
 1874 0020 1A70     		strb	r2, [r3]
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1875              		.loc 1 1393 0
 1876 0022 FB1D     		add	r3, r7, #7
 1877 0024 1A78     		ldrb	r2, [r3]
 1878 0026 204B     		ldr	r3, .L125
 1879 0028 D318     		add	r3, r2, r3
 1880 002a BB60     		str	r3, [r7, #8]
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 59


1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 60


1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1881              		.loc 1 1490 0
 1882 002c 3B1C     		mov	r3, r7
 1883 002e 0F33     		add	r3, r3, #15
 1884 0030 0022     		mov	r2, #0
 1885 0032 1A70     		strb	r2, [r3]
 1886 0034 2AE0     		b	.L121
 1887              	.L123:
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1888              		.loc 1 1493 0
 1889 0036 3B1C     		mov	r3, r7
 1890 0038 0F33     		add	r3, r3, #15
 1891 003a 1B78     		ldrb	r3, [r3]
 1892 003c BA68     		ldr	r2, [r7, #8]
 1893 003e D318     		add	r3, r2, r3
 1894 0040 1B78     		ldrb	r3, [r3]
 1895 0042 7A1D     		add	r2, r7, #5
 1896 0044 1278     		ldrb	r2, [r2]
 1897 0046 9A42     		cmp	r2, r3
 1898 0048 19D2     		bcs	.L122
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1899              		.loc 1 1495 0
 1900 004a 3B1C     		mov	r3, r7
 1901 004c 0F33     		add	r3, r3, #15
 1902 004e 1B78     		ldrb	r3, [r3]
 1903 0050 BA68     		ldr	r2, [r7, #8]
 1904 0052 D318     		add	r3, r2, r3
 1905 0054 1B78     		ldrb	r3, [r3]
 1906 0056 3A1C     		mov	r2, r7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 61


 1907 0058 0D32     		add	r2, r2, #13
 1908 005a 1278     		ldrb	r2, [r2]
 1909 005c 9A42     		cmp	r2, r3
 1910 005e 0ED2     		bcs	.L122
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 1911              		.loc 1 1497 0
 1912 0060 3B1C     		mov	r3, r7
 1913 0062 0E33     		add	r3, r3, #14
 1914 0064 3A1C     		mov	r2, r7
 1915 0066 0F32     		add	r2, r2, #15
 1916 0068 1278     		ldrb	r2, [r2]
 1917 006a 1A70     		strb	r2, [r3]
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1918              		.loc 1 1498 0
 1919 006c 3B1C     		mov	r3, r7
 1920 006e 0F33     		add	r3, r3, #15
 1921 0070 1B78     		ldrb	r3, [r3]
 1922 0072 BA68     		ldr	r2, [r7, #8]
 1923 0074 D218     		add	r2, r2, r3
 1924 0076 3B1C     		mov	r3, r7
 1925 0078 0D33     		add	r3, r3, #13
 1926 007a 1278     		ldrb	r2, [r2]
 1927 007c 1A70     		strb	r2, [r3]
 1928              	.L122:
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1929              		.loc 1 1490 0
 1930 007e 3B1C     		mov	r3, r7
 1931 0080 0F33     		add	r3, r3, #15
 1932 0082 1A78     		ldrb	r2, [r3]
 1933 0084 3B1C     		mov	r3, r7
 1934 0086 0F33     		add	r3, r3, #15
 1935 0088 0132     		add	r2, r2, #1
 1936 008a 1A70     		strb	r2, [r3]
 1937              	.L121:
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1938              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1939 008c 3A1C     		mov	r2, r7
 1940 008e 0F32     		add	r2, r2, #15
 1941 0090 BB1D     		add	r3, r7, #6
 1942 0092 1278     		ldrb	r2, [r2]
 1943 0094 1B78     		ldrb	r3, [r3]
 1944 0096 9A42     		cmp	r2, r3
 1945 0098 CDD3     		bcc	.L123
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
 1946              		.loc 1 1503 0 is_stmt 1
 1947 009a 3B1C     		mov	r3, r7
 1948 009c 0E33     		add	r3, r3, #14
 1949 009e 1B78     		ldrb	r3, [r3]
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1950              		.loc 1 1504 0
 1951 00a0 181C     		mov	r0, r3
 1952 00a2 BD46     		mov	sp, r7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 62


 1953 00a4 04B0     		add	sp, sp, #16
 1954              		@ sp needed
 1955 00a6 80BD     		pop	{r7, pc}
 1956              	.L126:
 1957              		.align	2
 1958              	.L125:
 1959 00a8 00000000 		.word	CapSense_sensorSignal
 1960              		.cfi_endproc
 1961              	.LFE62:
 1962              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1963              		.global	__aeabi_idiv
 1964              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1965              		.align	2
 1966              		.global	CapSense_CalcCentroid
 1967              		.code	16
 1968              		.thumb_func
 1969              		.type	CapSense_CalcCentroid, %function
 1970              	CapSense_CalcCentroid:
 1971              	.LFB63:
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1972              		.loc 1 1539 0
 1973              		.cfi_startproc
 1974 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 63


 1975              		.cfi_def_cfa_offset 12
 1976              		.cfi_offset 4, -12
 1977              		.cfi_offset 7, -8
 1978              		.cfi_offset 14, -4
 1979 0002 89B0     		sub	sp, sp, #36
 1980              		.cfi_def_cfa_offset 48
 1981 0004 00AF     		add	r7, sp, #0
 1982              		.cfi_def_cfa_register 7
 1983 0006 041C     		mov	r4, r0
 1984 0008 081C     		mov	r0, r1
 1985 000a 111C     		mov	r1, r2
 1986 000c 1A1C     		mov	r2, r3
 1987 000e FB1D     		add	r3, r7, #7
 1988 0010 1C70     		strb	r4, [r3]
 1989 0012 BB1D     		add	r3, r7, #6
 1990 0014 1870     		strb	r0, [r3]
 1991 0016 7B1D     		add	r3, r7, #5
 1992 0018 1970     		strb	r1, [r3]
 1993 001a BB1C     		add	r3, r7, #2
 1994 001c 1A80     		strh	r2, [r3]
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 1995              		.loc 1 1558 0
 1996 001e BB1D     		add	r3, r7, #6
 1997 0020 1A78     		ldrb	r2, [r3]
 1998 0022 5A4B     		ldr	r3, .L137
 1999 0024 D318     		add	r3, r2, r3
 2000 0026 BB61     		str	r3, [r7, #24]
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 2001              		.loc 1 1561 0
 2002 0028 3B1C     		mov	r3, r7
 2003 002a 1F33     		add	r3, r3, #31
 2004 002c 0022     		mov	r2, #0
 2005 002e 1A70     		strb	r2, [r3]
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 64


1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 2006              		.loc 1 1621 0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 65


 2007 0030 FB1D     		add	r3, r7, #7
 2008 0032 1B78     		ldrb	r3, [r3]
 2009 0034 002B     		cmp	r3, #0
 2010 0036 05D0     		beq	.L128
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 2011              		.loc 1 1623 0
 2012 0038 3B1C     		mov	r3, r7
 2013 003a 1F33     		add	r3, r3, #31
 2014 003c FA1D     		add	r2, r7, #7
 2015 003e 1278     		ldrb	r2, [r2]
 2016 0040 013A     		sub	r2, r2, #1
 2017 0042 1A70     		strb	r2, [r3]
 2018              	.L128:
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 2019              		.loc 1 1625 0
 2020 0044 3B1C     		mov	r3, r7
 2021 0046 1733     		add	r3, r3, #23
 2022 0048 FA1D     		add	r2, r7, #7
 2023 004a 1278     		ldrb	r2, [r2]
 2024 004c 0132     		add	r2, r2, #1
 2025 004e 1A70     		strb	r2, [r3]
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2026              		.loc 1 1632 0
 2027 0050 FB1D     		add	r3, r7, #7
 2028 0052 1B78     		ldrb	r3, [r3]
 2029 0054 BA69     		ldr	r2, [r7, #24]
 2030 0056 D318     		add	r3, r2, r3
 2031 0058 1A78     		ldrb	r2, [r3]
 2032 005a 4D4B     		ldr	r3, .L137+4
 2033 005c 5A70     		strb	r2, [r3, #1]
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2034              		.loc 1 1636 0
 2035 005e FB1D     		add	r3, r7, #7
 2036 0060 1B78     		ldrb	r3, [r3]
 2037 0062 002B     		cmp	r3, #0
 2038 0064 0BD1     		bne	.L129
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 2039              		.loc 1 1638 0
 2040 0066 4A4B     		ldr	r3, .L137+4
 2041 0068 0022     		mov	r2, #0
 2042 006a 1A70     		strb	r2, [r3]
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2043              		.loc 1 1639 0
 2044 006c 3B1C     		mov	r3, r7
 2045 006e 1733     		add	r3, r3, #23
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 66


 2046 0070 1B78     		ldrb	r3, [r3]
 2047 0072 BA69     		ldr	r2, [r7, #24]
 2048 0074 D318     		add	r3, r2, r3
 2049 0076 1A78     		ldrb	r2, [r3]
 2050 0078 454B     		ldr	r3, .L137+4
 2051 007a 9A70     		strb	r2, [r3, #2]
 2052 007c 22E0     		b	.L130
 2053              	.L129:
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2054              		.loc 1 1641 0
 2055 007e FB1D     		add	r3, r7, #7
 2056 0080 1A78     		ldrb	r2, [r3]
 2057 0082 7B1D     		add	r3, r7, #5
 2058 0084 1B78     		ldrb	r3, [r3]
 2059 0086 013B     		sub	r3, r3, #1
 2060 0088 9A42     		cmp	r2, r3
 2061 008a 0BD1     		bne	.L131
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2062              		.loc 1 1643 0
 2063 008c 3B1C     		mov	r3, r7
 2064 008e 1F33     		add	r3, r3, #31
 2065 0090 1B78     		ldrb	r3, [r3]
 2066 0092 BA69     		ldr	r2, [r7, #24]
 2067 0094 D318     		add	r3, r2, r3
 2068 0096 1A78     		ldrb	r2, [r3]
 2069 0098 3D4B     		ldr	r3, .L137+4
 2070 009a 1A70     		strb	r2, [r3]
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2071              		.loc 1 1644 0
 2072 009c 3C4B     		ldr	r3, .L137+4
 2073 009e 0022     		mov	r2, #0
 2074 00a0 9A70     		strb	r2, [r3, #2]
 2075 00a2 0FE0     		b	.L130
 2076              	.L131:
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2077              		.loc 1 1648 0
 2078 00a4 3B1C     		mov	r3, r7
 2079 00a6 1F33     		add	r3, r3, #31
 2080 00a8 1B78     		ldrb	r3, [r3]
 2081 00aa BA69     		ldr	r2, [r7, #24]
 2082 00ac D318     		add	r3, r2, r3
 2083 00ae 1A78     		ldrb	r2, [r3]
 2084 00b0 374B     		ldr	r3, .L137+4
 2085 00b2 1A70     		strb	r2, [r3]
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2086              		.loc 1 1649 0
 2087 00b4 3B1C     		mov	r3, r7
 2088 00b6 1733     		add	r3, r3, #23
 2089 00b8 1B78     		ldrb	r3, [r3]
 2090 00ba BA69     		ldr	r2, [r7, #24]
 2091 00bc D318     		add	r3, r2, r3
 2092 00be 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 67


 2093 00c0 334B     		ldr	r3, .L137+4
 2094 00c2 9A70     		strb	r2, [r3, #2]
 2095              	.L130:
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2096              		.loc 1 1658 0
 2097 00c4 324B     		ldr	r3, .L137+4
 2098 00c6 1B78     		ldrb	r3, [r3]
 2099 00c8 3A1C     		mov	r2, r7
 2100 00ca 3032     		add	r2, r2, #48
 2101 00cc 1278     		ldrb	r2, [r2]
 2102 00ce 9A42     		cmp	r2, r3
 2103 00d0 09D2     		bcs	.L132
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2104              		.loc 1 1660 0
 2105 00d2 2F4B     		ldr	r3, .L137+4
 2106 00d4 1A78     		ldrb	r2, [r3]
 2107 00d6 3B1C     		mov	r3, r7
 2108 00d8 3033     		add	r3, r3, #48
 2109 00da 1B78     		ldrb	r3, [r3]
 2110 00dc D31A     		sub	r3, r2, r3
 2111 00de DAB2     		uxtb	r2, r3
 2112 00e0 2B4B     		ldr	r3, .L137+4
 2113 00e2 1A70     		strb	r2, [r3]
 2114 00e4 02E0     		b	.L133
 2115              	.L132:
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2116              		.loc 1 1664 0
 2117 00e6 2A4B     		ldr	r3, .L137+4
 2118 00e8 0022     		mov	r2, #0
 2119 00ea 1A70     		strb	r2, [r3]
 2120              	.L133:
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2121              		.loc 1 1668 0
 2122 00ec 284B     		ldr	r3, .L137+4
 2123 00ee 5A78     		ldrb	r2, [r3, #1]
 2124 00f0 3B1C     		mov	r3, r7
 2125 00f2 3033     		add	r3, r3, #48
 2126 00f4 1B78     		ldrb	r3, [r3]
 2127 00f6 D31A     		sub	r3, r2, r3
 2128 00f8 DAB2     		uxtb	r2, r3
 2129 00fa 254B     		ldr	r3, .L137+4
 2130 00fc 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 68


1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2131              		.loc 1 1671 0
 2132 00fe 244B     		ldr	r3, .L137+4
 2133 0100 9B78     		ldrb	r3, [r3, #2]
 2134 0102 3A1C     		mov	r2, r7
 2135 0104 3032     		add	r2, r2, #48
 2136 0106 1278     		ldrb	r2, [r2]
 2137 0108 9A42     		cmp	r2, r3
 2138 010a 09D2     		bcs	.L134
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2139              		.loc 1 1673 0
 2140 010c 204B     		ldr	r3, .L137+4
 2141 010e 9A78     		ldrb	r2, [r3, #2]
 2142 0110 3B1C     		mov	r3, r7
 2143 0112 3033     		add	r3, r3, #48
 2144 0114 1B78     		ldrb	r3, [r3]
 2145 0116 D31A     		sub	r3, r2, r3
 2146 0118 DAB2     		uxtb	r2, r3
 2147 011a 1D4B     		ldr	r3, .L137+4
 2148 011c 9A70     		strb	r2, [r3, #2]
 2149 011e 02E0     		b	.L135
 2150              	.L134:
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2151              		.loc 1 1677 0
 2152 0120 1B4B     		ldr	r3, .L137+4
 2153 0122 0022     		mov	r2, #0
 2154 0124 9A70     		strb	r2, [r3, #2]
 2155              	.L135:
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2156              		.loc 1 1682 0
 2157 0126 1A4B     		ldr	r3, .L137+4
 2158 0128 9B78     		ldrb	r3, [r3, #2]
 2159 012a 1A1C     		mov	r2, r3
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2160              		.loc 1 1683 0
 2161 012c 184B     		ldr	r3, .L137+4
 2162 012e 1B78     		ldrb	r3, [r3]
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2163              		.loc 1 1682 0
 2164 0130 D31A     		sub	r3, r2, r3
 2165 0132 3B61     		str	r3, [r7, #16]
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2166              		.loc 1 1686 0
 2167 0134 164B     		ldr	r3, .L137+4
 2168 0136 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 69


 2169 0138 1A1C     		mov	r2, r3
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 2170              		.loc 1 1687 0
 2171 013a 154B     		ldr	r3, .L137+4
 2172 013c 5B78     		ldrb	r3, [r3, #1]
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2173              		.loc 1 1686 0
 2174 013e D218     		add	r2, r2, r3
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2175              		.loc 1 1688 0
 2176 0140 134B     		ldr	r3, .L137+4
 2177 0142 9B78     		ldrb	r3, [r3, #2]
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2178              		.loc 1 1686 0
 2179 0144 D318     		add	r3, r2, r3
 2180 0146 FB60     		str	r3, [r7, #12]
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2181              		.loc 1 1691 0
 2182 0148 3B69     		ldr	r3, [r7, #16]
 2183 014a 1B02     		lsl	r3, r3, #8
 2184 014c 181C     		mov	r0, r3
 2185 014e F968     		ldr	r1, [r7, #12]
 2186 0150 FFF7FEFF 		bl	__aeabi_idiv
 2187 0154 031C     		mov	r3, r0
 2188 0156 1A1C     		mov	r2, r3
 2189 0158 FB1D     		add	r3, r7, #7
 2190 015a 1B78     		ldrb	r3, [r3]
 2191 015c 1B02     		lsl	r3, r3, #8
 2192 015e D318     		add	r3, r2, r3
 2193 0160 FB60     		str	r3, [r7, #12]
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2194              		.loc 1 1701 0
 2195 0162 BB1C     		add	r3, r7, #2
 2196 0164 1B88     		ldrh	r3, [r3]
 2197 0166 1AB2     		sxth	r2, r3
 2198 0168 FB68     		ldr	r3, [r7, #12]
 2199 016a 5343     		mul	r3, r2
 2200 016c FB60     		str	r3, [r7, #12]
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2201              		.loc 1 1704 0
 2202 016e FB68     		ldr	r3, [r7, #12]
 2203 0170 FE22     		mov	r2, #254
 2204 0172 D201     		lsl	r2, r2, #7
 2205 0174 9B18     		add	r3, r3, r2
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 70


 2206 0176 1A0C     		lsr	r2, r3, #16
 2207 0178 3B1C     		mov	r3, r7
 2208 017a 0B33     		add	r3, r3, #11
 2209 017c 1A70     		strb	r2, [r3]
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2210              		.loc 1 1706 0
 2211 017e 3B1C     		mov	r3, r7
 2212 0180 0B33     		add	r3, r3, #11
 2213 0182 1B78     		ldrb	r3, [r3]
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
 2214              		.loc 1 1707 0
 2215 0184 181C     		mov	r0, r3
 2216 0186 BD46     		mov	sp, r7
 2217 0188 09B0     		add	sp, sp, #36
 2218              		@ sp needed
 2219 018a 90BD     		pop	{r4, r7, pc}
 2220              	.L138:
 2221              		.align	2
 2222              	.L137:
 2223 018c 00000000 		.word	CapSense_sensorSignal
 2224 0190 24000000 		.word	CapSense_centroid.5410
 2225              		.cfi_endproc
 2226              	.LFE63:
 2227              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2228              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2229              		.align	2
 2230              		.global	CapSense_GetCentroidPos
 2231              		.code	16
 2232              		.thumb_func
 2233              		.type	CapSense_GetCentroidPos, %function
 2234              	CapSense_GetCentroidPos:
 2235              	.LFB64:
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 71


1732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2236              		.loc 1 1748 0
 2237              		.cfi_startproc
 2238 0000 90B5     		push	{r4, r7, lr}
 2239              		.cfi_def_cfa_offset 12
 2240              		.cfi_offset 4, -12
 2241              		.cfi_offset 7, -8
 2242              		.cfi_offset 14, -4
 2243 0002 89B0     		sub	sp, sp, #36
 2244              		.cfi_def_cfa_offset 48
 2245 0004 02AF     		add	r7, sp, #8
 2246              		.cfi_def_cfa 7, 40
 2247 0006 7860     		str	r0, [r7, #4]
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2248              		.loc 1 1755 0
 2249 0008 3B1C     		mov	r3, r7
 2250 000a 1533     		add	r3, r3, #21
 2251 000c 6749     		ldr	r1, .L147
 2252 000e 7A68     		ldr	r2, [r7, #4]
 2253 0010 8A18     		add	r2, r1, r2
 2254 0012 1278     		ldrb	r2, [r2]
 2255 0014 1A70     		strb	r2, [r3]
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
 2256              		.loc 1 1756 0
 2257 0016 3B1C     		mov	r3, r7
 2258 0018 1433     		add	r3, r3, #20
 2259 001a 6549     		ldr	r1, .L147+4
 2260 001c 7A68     		ldr	r2, [r7, #4]
 2261 001e 8A18     		add	r2, r1, r2
 2262 0020 1278     		ldrb	r2, [r2]
 2263 0022 1A70     		strb	r2, [r3]
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 72


1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2264              		.loc 1 1768 0
 2265 0024 3B1C     		mov	r3, r7
 2266 0026 1333     		add	r3, r3, #19
 2267 0028 0022     		mov	r2, #0
 2268 002a 1A70     		strb	r2, [r3]
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2269              		.loc 1 1769 0
 2270 002c 3B1C     		mov	r3, r7
 2271 002e 1233     		add	r3, r3, #18
 2272 0030 0522     		mov	r2, #5
 2273 0032 1A70     		strb	r2, [r3]
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2274              		.loc 1 1787 0
 2275 0034 5F4A     		ldr	r2, .L147+8
 2276 0036 7B68     		ldr	r3, [r7, #4]
 2277 0038 D318     		add	r3, r2, r3
 2278 003a 1B78     		ldrb	r3, [r3]
 2279 003c 3C1C     		mov	r4, r7
 2280 003e 1134     		add	r4, r4, #17
 2281 0040 3A1C     		mov	r2, r7
 2282 0042 1332     		add	r2, r2, #19
 2283 0044 1178     		ldrb	r1, [r2]
 2284 0046 3A1C     		mov	r2, r7
 2285 0048 1232     		add	r2, r2, #18
 2286 004a 1278     		ldrb	r2, [r2]
 2287 004c 081C     		mov	r0, r1
 2288 004e 111C     		mov	r1, r2
 2289 0050 1A1C     		mov	r2, r3
 2290 0052 FFF7FEFF 		bl	CapSense_FindMaximum
 2291 0056 031C     		mov	r3, r0
 2292 0058 2370     		strb	r3, [r4]
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 73


1789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2293              		.loc 1 1790 0
 2294 005a 3B1C     		mov	r3, r7
 2295 005c 1133     		add	r3, r3, #17
 2296 005e 1B78     		ldrb	r3, [r3]
 2297 0060 FF2B     		cmp	r3, #255
 2298 0062 00D1     		bne	.LCB1998
 2299 0064 89E0     		b	.L140	@long jump
 2300              	.LCB1998:
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 2301              		.loc 1 1793 0
 2302 0066 C823     		mov	r3, #200
 2303 0068 5B01     		lsl	r3, r3, #5
 2304 006a 5349     		ldr	r1, .L147+12
 2305 006c 7A68     		ldr	r2, [r7, #4]
 2306 006e 8A18     		add	r2, r1, r2
 2307 0070 1478     		ldrb	r4, [r2]
 2308 0072 3A1C     		mov	r2, r7
 2309 0074 1132     		add	r2, r2, #17
 2310 0076 1078     		ldrb	r0, [r2]
 2311 0078 3A1C     		mov	r2, r7
 2312 007a 1332     		add	r2, r2, #19
 2313 007c 1178     		ldrb	r1, [r2]
 2314 007e 3A1C     		mov	r2, r7
 2315 0080 1232     		add	r2, r2, #18
 2316 0082 1278     		ldrb	r2, [r2]
 2317 0084 0094     		str	r4, [sp]
 2318 0086 FFF7FEFF 		bl	CapSense_CalcCentroid
 2319 008a 031C     		mov	r3, r0
 2320 008c 1A1C     		mov	r2, r3
 2321 008e 3B1C     		mov	r3, r7
 2322 0090 1633     		add	r3, r3, #22
 2323 0092 1A80     		strh	r2, [r3]
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2324              		.loc 1 1798 0
 2325 0094 3B1C     		mov	r3, r7
 2326 0096 1433     		add	r3, r3, #20
 2327 0098 1A78     		ldrb	r2, [r3]
 2328 009a 1F23     		mov	r3, #31
 2329 009c 1340     		and	r3, r2
 2330 009e 00D1     		bne	.LCB2027
 2331 00a0 7CE0     		b	.L145	@long jump
 2332              	.LCB2027:
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2333              		.loc 1 1801 0
 2334 00a2 3B1C     		mov	r3, r7
 2335 00a4 1033     		add	r3, r3, #16
 2336 00a6 3A1C     		mov	r2, r7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 74


 2337 00a8 1532     		add	r2, r2, #21
 2338 00aa 1278     		ldrb	r2, [r2]
 2339 00ac 0132     		add	r2, r2, #1
 2340 00ae 1A70     		strb	r2, [r3]
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2341              		.loc 1 1803 0
 2342 00b0 3B1C     		mov	r3, r7
 2343 00b2 1533     		add	r3, r3, #21
 2344 00b4 1B78     		ldrb	r3, [r3]
 2345 00b6 3D4A     		ldr	r2, .L147
 2346 00b8 D35C     		ldrb	r3, [r2, r3]
 2347 00ba 002B     		cmp	r3, #0
 2348 00bc 25D1     		bne	.L142
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2349              		.loc 1 1806 0
 2350 00be 3B1C     		mov	r3, r7
 2351 00c0 1033     		add	r3, r3, #16
 2352 00c2 1B78     		ldrb	r3, [r3]
 2353 00c4 3A1C     		mov	r2, r7
 2354 00c6 1632     		add	r2, r2, #22
 2355 00c8 1288     		ldrh	r2, [r2]
 2356 00ca D1B2     		uxtb	r1, r2
 2357 00cc 374A     		ldr	r2, .L147
 2358 00ce D154     		strb	r1, [r2, r3]
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
 2359              		.loc 1 1812 0
 2360 00d0 3B1C     		mov	r3, r7
 2361 00d2 1433     		add	r3, r3, #20
 2362 00d4 1A78     		ldrb	r2, [r3]
 2363 00d6 0123     		mov	r3, #1
 2364 00d8 1340     		and	r3, r2
 2365 00da 05D1     		bne	.L143
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
 2366              		.loc 1 1813 0 discriminator 1
 2367 00dc 3B1C     		mov	r3, r7
 2368 00de 1433     		add	r3, r3, #20
 2369 00e0 1A78     		ldrb	r2, [r3]
 2370 00e2 0223     		mov	r3, #2
 2371 00e4 1340     		and	r3, r2
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
 2372              		.loc 1 1812 0 discriminator 1
 2373 00e6 09D0     		beq	.L144
 2374              	.L143:
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
 2375              		.loc 1 1815 0
 2376 00e8 3B1C     		mov	r3, r7
 2377 00ea 1033     		add	r3, r3, #16
 2378 00ec 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 75


 2379 00ee 0133     		add	r3, r3, #1
 2380 00f0 3A1C     		mov	r2, r7
 2381 00f2 1632     		add	r2, r2, #22
 2382 00f4 1288     		ldrh	r2, [r2]
 2383 00f6 D1B2     		uxtb	r1, r2
 2384 00f8 2C4A     		ldr	r2, .L147
 2385 00fa D154     		strb	r1, [r2, r3]
 2386              	.L144:
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2387              		.loc 1 1823 0
 2388 00fc 3B1C     		mov	r3, r7
 2389 00fe 1533     		add	r3, r3, #21
 2390 0100 1B78     		ldrb	r3, [r3]
 2391 0102 2A4A     		ldr	r2, .L147
 2392 0104 0121     		mov	r1, #1
 2393 0106 D154     		strb	r1, [r2, r3]
 2394 0108 48E0     		b	.L145
 2395              	.L142:
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
 2396              		.loc 1 1844 0
 2397 010a 3B1C     		mov	r3, r7
 2398 010c 1433     		add	r3, r3, #20
 2399 010e 1A78     		ldrb	r2, [r3]
 2400 0110 0223     		mov	r3, #2
 2401 0112 1340     		and	r3, r2
 2402 0114 42D0     		beq	.L145
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
 2403              		.loc 1 1846 0
 2404 0116 3B1C     		mov	r3, r7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 76


 2405 0118 0F33     		add	r3, r3, #15
 2406 011a 3A1C     		mov	r2, r7
 2407 011c 1632     		add	r2, r2, #22
 2408 011e 1288     		ldrh	r2, [r2]
 2409 0120 1A70     		strb	r2, [r3]
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
 2410              		.loc 1 1848 0
 2411 0122 3B1C     		mov	r3, r7
 2412 0124 1033     		add	r3, r3, #16
 2413 0126 1B78     		ldrb	r3, [r3]
 2414 0128 204A     		ldr	r2, .L147
 2415 012a D35C     		ldrb	r3, [r2, r3]
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
 2416              		.loc 1 1847 0
 2417 012c 1A1C     		mov	r2, r3
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
 2418              		.loc 1 1849 0
 2419 012e 3B1C     		mov	r3, r7
 2420 0130 1033     		add	r3, r3, #16
 2421 0132 1B78     		ldrb	r3, [r3]
 2422 0134 0133     		add	r3, r3, #1
 2423 0136 1D49     		ldr	r1, .L147
 2424 0138 CB5C     		ldrb	r3, [r1, r3]
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
 2425              		.loc 1 1847 0
 2426 013a 3C1C     		mov	r4, r7
 2427 013c 1634     		add	r4, r4, #22
 2428 013e 391C     		mov	r1, r7
 2429 0140 1631     		add	r1, r1, #22
 2430 0142 0988     		ldrh	r1, [r1]
 2431 0144 081C     		mov	r0, r1
 2432 0146 111C     		mov	r1, r2
 2433 0148 1A1C     		mov	r2, r3
 2434 014a FFF7FEFF 		bl	CapSense_AveragingFilter
 2435 014e 031C     		mov	r3, r0
 2436 0150 2380     		strh	r3, [r4]
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
 2437              		.loc 1 1850 0
 2438 0152 3B1C     		mov	r3, r7
 2439 0154 1033     		add	r3, r3, #16
 2440 0156 1B78     		ldrb	r3, [r3]
 2441 0158 0133     		add	r3, r3, #1
 2442 015a 3A1C     		mov	r2, r7
 2443 015c 1032     		add	r2, r2, #16
 2444 015e 1278     		ldrb	r2, [r2]
 2445 0160 1249     		ldr	r1, .L147
 2446 0162 895C     		ldrb	r1, [r1, r2]
 2447 0164 114A     		ldr	r2, .L147
 2448 0166 D154     		strb	r1, [r2, r3]
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
 2449              		.loc 1 1851 0
 2450 0168 3B1C     		mov	r3, r7
 2451 016a 1033     		add	r3, r3, #16
 2452 016c 1B78     		ldrb	r3, [r3]
 2453 016e 0F4A     		ldr	r2, .L147
 2454 0170 391C     		mov	r1, r7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 77


 2455 0172 0F31     		add	r1, r1, #15
 2456 0174 0978     		ldrb	r1, [r1]
 2457 0176 D154     		strb	r1, [r2, r3]
 2458 0178 10E0     		b	.L145
 2459              	.L140:
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2460              		.loc 1 1897 0
 2461 017a 3B1C     		mov	r3, r7
 2462 017c 1633     		add	r3, r3, #22
 2463 017e 0122     		mov	r2, #1
 2464 0180 5242     		neg	r2, r2
 2465 0182 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 78


1898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2466              		.loc 1 1901 0
 2467 0184 3B1C     		mov	r3, r7
 2468 0186 1433     		add	r3, r3, #20
 2469 0188 1A78     		ldrb	r2, [r3]
 2470 018a 1F23     		mov	r3, #31
 2471 018c 1340     		and	r3, r2
 2472 018e 05D0     		beq	.L145
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2473              		.loc 1 1903 0
 2474 0190 3B1C     		mov	r3, r7
 2475 0192 1533     		add	r3, r3, #21
 2476 0194 1B78     		ldrb	r3, [r3]
 2477 0196 054A     		ldr	r2, .L147
 2478 0198 0021     		mov	r1, #0
 2479 019a D154     		strb	r1, [r2, r3]
 2480              	.L145:
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2481              		.loc 1 1909 0
 2482 019c 3B1C     		mov	r3, r7
 2483 019e 1633     		add	r3, r3, #22
 2484 01a0 1B88     		ldrh	r3, [r3]
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2485              		.loc 1 1910 0
 2486 01a2 181C     		mov	r0, r3
 2487 01a4 BD46     		mov	sp, r7
 2488 01a6 07B0     		add	sp, sp, #28
 2489              		@ sp needed
 2490 01a8 90BD     		pop	{r4, r7, pc}
 2491              	.L148:
 2492 01aa C046     		.align	2
 2493              	.L147:
 2494 01ac 10000000 		.word	CapSense_posFiltersData
 2495 01b0 0C000000 		.word	CapSense_posFiltersMask
 2496 01b4 00000000 		.word	CapSense_fingerThreshold
 2497 01b8 00000000 		.word	CapSense_noiseThreshold
 2498              		.cfi_endproc
 2499              	.LFE64:
 2500              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2501              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2502              		.align	2
 2503              		.global	CapSense_GetRadialCentroidPos
 2504              		.code	16
 2505              		.thumb_func
 2506              		.type	CapSense_GetRadialCentroidPos, %function
 2507              	CapSense_GetRadialCentroidPos:
 2508              	.LFB65:
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 79


1912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2509              		.loc 1 1951 0
 2510              		.cfi_startproc
 2511 0000 90B5     		push	{r4, r7, lr}
 2512              		.cfi_def_cfa_offset 12
 2513              		.cfi_offset 4, -12
 2514              		.cfi_offset 7, -8
 2515              		.cfi_offset 14, -4
 2516 0002 87B0     		sub	sp, sp, #28
 2517              		.cfi_def_cfa_offset 40
 2518 0004 02AF     		add	r7, sp, #8
 2519              		.cfi_def_cfa 7, 32
 2520 0006 7860     		str	r0, [r7, #4]
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 80


1957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2521              		.loc 1 1967 0
 2522 0008 3B1C     		mov	r3, r7
 2523 000a 0D33     		add	r3, r3, #13
 2524 000c 0022     		mov	r2, #0
 2525 000e 1A70     		strb	r2, [r3]
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2526              		.loc 1 1968 0
 2527 0010 3B1C     		mov	r3, r7
 2528 0012 0C33     		add	r3, r3, #12
 2529 0014 0522     		mov	r2, #5
 2530 0016 1A70     		strb	r2, [r3]
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2531              		.loc 1 1974 0
 2532 0018 1D4A     		ldr	r2, .L153
 2533 001a 7B68     		ldr	r3, [r7, #4]
 2534 001c D318     		add	r3, r2, r3
 2535 001e 1B78     		ldrb	r3, [r3]
 2536 0020 3C1C     		mov	r4, r7
 2537 0022 0B34     		add	r4, r4, #11
 2538 0024 3A1C     		mov	r2, r7
 2539 0026 0D32     		add	r2, r2, #13
 2540 0028 1178     		ldrb	r1, [r2]
 2541 002a 3A1C     		mov	r2, r7
 2542 002c 0C32     		add	r2, r2, #12
 2543 002e 1278     		ldrb	r2, [r2]
 2544 0030 081C     		mov	r0, r1
 2545 0032 111C     		mov	r1, r2
 2546 0034 1A1C     		mov	r2, r3
 2547 0036 FFF7FEFF 		bl	CapSense_FindMaximum
 2548 003a 031C     		mov	r3, r0
 2549 003c 2370     		strb	r3, [r4]
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2550              		.loc 1 1977 0
 2551 003e 3B1C     		mov	r3, r7
 2552 0040 0B33     		add	r3, r3, #11
 2553 0042 1B78     		ldrb	r3, [r3]
 2554 0044 FF2B     		cmp	r3, #255
 2555 0046 17D0     		beq	.L150
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 81


1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 2556              		.loc 1 1980 0
 2557 0048 C823     		mov	r3, #200
 2558 004a 5B01     		lsl	r3, r3, #5
 2559 004c 1149     		ldr	r1, .L153+4
 2560 004e 7A68     		ldr	r2, [r7, #4]
 2561 0050 8A18     		add	r2, r1, r2
 2562 0052 1478     		ldrb	r4, [r2]
 2563 0054 3A1C     		mov	r2, r7
 2564 0056 0B32     		add	r2, r2, #11
 2565 0058 1078     		ldrb	r0, [r2]
 2566 005a 3A1C     		mov	r2, r7
 2567 005c 0D32     		add	r2, r2, #13
 2568 005e 1178     		ldrb	r1, [r2]
 2569 0060 3A1C     		mov	r2, r7
 2570 0062 0C32     		add	r2, r2, #12
 2571 0064 1278     		ldrb	r2, [r2]
 2572 0066 0094     		str	r4, [sp]
 2573 0068 FFF7FEFF 		bl	CapSense_CalcCentroid
 2574 006c 031C     		mov	r3, r0
 2575 006e 1A1C     		mov	r2, r3
 2576 0070 3B1C     		mov	r3, r7
 2577 0072 0E33     		add	r3, r3, #14
 2578 0074 1A80     		strh	r2, [r3]
 2579 0076 04E0     		b	.L151
 2580              	.L150:
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 82


2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 83


2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found?? */
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2581              		.loc 1 2085 0
 2582 0078 3B1C     		mov	r3, r7
 2583 007a 0E33     		add	r3, r3, #14
 2584 007c 0122     		mov	r2, #1
 2585 007e 5242     		neg	r2, r2
 2586 0080 1A80     		strh	r2, [r3]
 2587              	.L151:
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2588              		.loc 1 2096 0
 2589 0082 3B1C     		mov	r3, r7
 2590 0084 0E33     		add	r3, r3, #14
 2591 0086 1B88     		ldrh	r3, [r3]
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2592              		.loc 1 2097 0
 2593 0088 181C     		mov	r0, r3
 2594 008a BD46     		mov	sp, r7
 2595 008c 05B0     		add	sp, sp, #20
 2596              		@ sp needed
 2597 008e 90BD     		pop	{r4, r7, pc}
 2598              	.L154:
 2599              		.align	2
 2600              	.L153:
 2601 0090 00000000 		.word	CapSense_fingerThreshold
 2602 0094 00000000 		.word	CapSense_noiseThreshold
 2603              		.cfi_endproc
 2604              	.LFE65:
 2605              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2606              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2607              		.align	2
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 84


 2608              		.global	CapSense_MedianFilter
 2609              		.code	16
 2610              		.thumb_func
 2611              		.type	CapSense_MedianFilter, %function
 2612              	CapSense_MedianFilter:
 2613              	.LFB66:
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 85


2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 86


2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 87


2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 88


2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 89


2377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2614              		.loc 1 2380 0
 2615              		.cfi_startproc
 2616 0000 80B5     		push	{r7, lr}
 2617              		.cfi_def_cfa_offset 8
 2618              		.cfi_offset 7, -8
 2619              		.cfi_offset 14, -4
 2620 0002 84B0     		sub	sp, sp, #16
 2621              		.cfi_def_cfa_offset 24
 2622 0004 00AF     		add	r7, sp, #0
 2623              		.cfi_def_cfa_register 7
 2624 0006 BB1D     		add	r3, r7, #6
 2625 0008 1880     		strh	r0, [r3]
 2626 000a 3B1D     		add	r3, r7, #4
 2627 000c 1980     		strh	r1, [r3]
 2628 000e BB1C     		add	r3, r7, #2
 2629 0010 1A80     		strh	r2, [r3]
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2630              		.loc 1 2383 0
 2631 0012 BA1D     		add	r2, r7, #6
 2632 0014 3B1D     		add	r3, r7, #4
 2633 0016 1288     		ldrh	r2, [r2]
 2634 0018 1B88     		ldrh	r3, [r3]
 2635 001a 9A42     		cmp	r2, r3
 2636 001c 0DD9     		bls	.L156
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2637              		.loc 1 2385 0
 2638 001e 3B1C     		mov	r3, r7
 2639 0020 0E33     		add	r3, r3, #14
 2640 0022 3A1D     		add	r2, r7, #4
 2641 0024 1288     		ldrh	r2, [r2]
 2642 0026 1A80     		strh	r2, [r3]
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2643              		.loc 1 2386 0
 2644 0028 3B1D     		add	r3, r7, #4
 2645 002a BA1D     		add	r2, r7, #6
 2646 002c 1288     		ldrh	r2, [r2]
 2647 002e 1A80     		strh	r2, [r3]
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2648              		.loc 1 2387 0
 2649 0030 BB1D     		add	r3, r7, #6
 2650 0032 3A1C     		mov	r2, r7
 2651 0034 0E32     		add	r2, r2, #14
 2652 0036 1288     		ldrh	r2, [r2]
 2653 0038 1A80     		strh	r2, [r3]
 2654              	.L156:
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2655              		.loc 1 2390 0
 2656 003a 3A1D     		add	r2, r7, #4
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 90


 2657 003c BB1C     		add	r3, r7, #2
 2658 003e 1288     		ldrh	r2, [r2]
 2659 0040 1B88     		ldrh	r3, [r3]
 2660 0042 9A42     		cmp	r2, r3
 2661 0044 03D9     		bls	.L157
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2662              		.loc 1 2392 0
 2663 0046 3B1D     		add	r3, r7, #4
 2664 0048 BA1C     		add	r2, r7, #2
 2665 004a 1288     		ldrh	r2, [r2]
 2666 004c 1A80     		strh	r2, [r3]
 2667              	.L157:
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2668              		.loc 1 2395 0
 2669 004e 3B1D     		add	r3, r7, #4
 2670 0050 BA1D     		add	r2, r7, #6
 2671 0052 1288     		ldrh	r2, [r2]
 2672 0054 1B88     		ldrh	r3, [r3]
 2673 0056 98B2     		uxth	r0, r3
 2674 0058 91B2     		uxth	r1, r2
 2675 005a 8842     		cmp	r0, r1
 2676 005c 00D2     		bcs	.L158
 2677 005e 131C     		add	r3, r2, #0
 2678              	.L158:
 2679 0060 9BB2     		uxth	r3, r3
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2680              		.loc 1 2396 0
 2681 0062 181C     		mov	r0, r3
 2682 0064 BD46     		mov	sp, r7
 2683 0066 04B0     		add	sp, sp, #16
 2684              		@ sp needed
 2685 0068 80BD     		pop	{r7, pc}
 2686              		.cfi_endproc
 2687              	.LFE66:
 2688              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2689              		.global	__aeabi_uidiv
 2690 006a C046     		.section	.text.CapSense_AveragingFilter,"ax",%progbits
 2691              		.align	2
 2692              		.global	CapSense_AveragingFilter
 2693              		.code	16
 2694              		.thumb_func
 2695              		.type	CapSense_AveragingFilter, %function
 2696              	CapSense_AveragingFilter:
 2697              	.LFB67:
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 91


2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2698              		.loc 1 2429 0
 2699              		.cfi_startproc
 2700 0000 80B5     		push	{r7, lr}
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 7, -8
 2703              		.cfi_offset 14, -4
 2704 0002 84B0     		sub	sp, sp, #16
 2705              		.cfi_def_cfa_offset 24
 2706 0004 00AF     		add	r7, sp, #0
 2707              		.cfi_def_cfa_register 7
 2708 0006 BB1D     		add	r3, r7, #6
 2709 0008 1880     		strh	r0, [r3]
 2710 000a 3B1D     		add	r3, r7, #4
 2711 000c 1980     		strh	r1, [r3]
 2712 000e BB1C     		add	r3, r7, #2
 2713 0010 1A80     		strh	r2, [r3]
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
 2714              		.loc 1 2430 0
 2715 0012 BB1D     		add	r3, r7, #6
 2716 0014 1A88     		ldrh	r2, [r3]
 2717 0016 3B1D     		add	r3, r7, #4
 2718 0018 1B88     		ldrh	r3, [r3]
 2719 001a D218     		add	r2, r2, r3
 2720 001c BB1C     		add	r3, r7, #2
 2721 001e 1B88     		ldrh	r3, [r3]
 2722 0020 D318     		add	r3, r2, r3
 2723 0022 181C     		mov	r0, r3
 2724 0024 0321     		mov	r1, #3
 2725 0026 FFF7FEFF 		bl	__aeabi_uidiv
 2726 002a 031C     		mov	r3, r0
 2727 002c FB60     		str	r3, [r7, #12]
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2728              		.loc 1 2432 0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 92


 2729 002e FB68     		ldr	r3, [r7, #12]
 2730 0030 9BB2     		uxth	r3, r3
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2731              		.loc 1 2433 0
 2732 0032 181C     		mov	r0, r3
 2733 0034 BD46     		mov	sp, r7
 2734 0036 04B0     		add	sp, sp, #16
 2735              		@ sp needed
 2736 0038 80BD     		pop	{r7, pc}
 2737              		.cfi_endproc
 2738              	.LFE67:
 2739              		.size	CapSense_AveragingFilter, .-CapSense_AveragingFilter
 2740 003a C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 2741              		.align	2
 2742              		.global	CapSense_IIR4Filter
 2743              		.code	16
 2744              		.thumb_func
 2745              		.type	CapSense_IIR4Filter, %function
 2746              	CapSense_IIR4Filter:
 2747              	.LFB68:
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 93


2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2748              		.loc 1 2500 0
 2749              		.cfi_startproc
 2750 0000 80B5     		push	{r7, lr}
 2751              		.cfi_def_cfa_offset 8
 2752              		.cfi_offset 7, -8
 2753              		.cfi_offset 14, -4
 2754 0002 84B0     		sub	sp, sp, #16
 2755              		.cfi_def_cfa_offset 24
 2756 0004 00AF     		add	r7, sp, #0
 2757              		.cfi_def_cfa_register 7
 2758 0006 0A1C     		mov	r2, r1
 2759 0008 BB1D     		add	r3, r7, #6
 2760 000a 011C     		add	r1, r0, #0
 2761 000c 1980     		strh	r1, [r3]
 2762 000e 3B1D     		add	r3, r7, #4
 2763 0010 1A80     		strh	r2, [r3]
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2764              		.loc 1 2504 0
 2765 0012 BB1D     		add	r3, r7, #6
 2766 0014 1A88     		ldrh	r2, [r3]
 2767 0016 3B1D     		add	r3, r7, #4
 2768 0018 1B88     		ldrh	r3, [r3]
 2769 001a D318     		add	r3, r2, r3
 2770 001c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 94


2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2771              		.loc 1 2505 0
 2772 001e 3B1D     		add	r3, r7, #4
 2773 0020 1B88     		ldrh	r3, [r3]
 2774 0022 5B00     		lsl	r3, r3, #1
 2775 0024 FA68     		ldr	r2, [r7, #12]
 2776 0026 D318     		add	r3, r2, r3
 2777 0028 FB60     		str	r3, [r7, #12]
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2778              		.loc 1 2506 0
 2779 002a FB68     		ldr	r3, [r7, #12]
 2780 002c 9B08     		lsr	r3, r3, #2
 2781 002e FB60     		str	r3, [r7, #12]
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2782              		.loc 1 2508 0
 2783 0030 FB68     		ldr	r3, [r7, #12]
 2784 0032 9BB2     		uxth	r3, r3
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2785              		.loc 1 2509 0
 2786 0034 181C     		mov	r0, r3
 2787 0036 BD46     		mov	sp, r7
 2788 0038 04B0     		add	sp, sp, #16
 2789              		@ sp needed
 2790 003a 80BD     		pop	{r7, pc}
 2791              		.cfi_endproc
 2792              	.LFE68:
 2793              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2794              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2795              		.align	2
 2796              		.global	CapSense_GetWidgetNumber
 2797              		.code	16
 2798              		.thumb_func
 2799              		.type	CapSense_GetWidgetNumber, %function
 2800              	CapSense_GetWidgetNumber:
 2801              	.LFB69:
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 95


2531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 96


2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 97


2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 98


2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2802              		.loc 1 2733 0
 2803              		.cfi_startproc
 2804 0000 80B5     		push	{r7, lr}
 2805              		.cfi_def_cfa_offset 8
 2806              		.cfi_offset 7, -8
 2807              		.cfi_offset 14, -4
 2808 0002 82B0     		sub	sp, sp, #8
 2809              		.cfi_def_cfa_offset 16
 2810 0004 00AF     		add	r7, sp, #0
 2811              		.cfi_def_cfa_register 7
 2812 0006 7860     		str	r0, [r7, #4]
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 2813              		.loc 1 2734 0
 2814 0008 034A     		ldr	r2, .L166
 2815 000a 7B68     		ldr	r3, [r7, #4]
 2816 000c D318     		add	r3, r2, r3
 2817 000e 1B78     		ldrb	r3, [r3]
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2818              		.loc 1 2735 0
 2819 0010 181C     		mov	r0, r3
 2820 0012 BD46     		mov	sp, r7
 2821 0014 02B0     		add	sp, sp, #8
 2822              		@ sp needed
 2823 0016 80BD     		pop	{r7, pc}
 2824              	.L167:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 99


 2825              		.align	2
 2826              	.L166:
 2827 0018 00000000 		.word	CapSense_widgetNumber
 2828              		.cfi_endproc
 2829              	.LFE69:
 2830              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2831              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2832              		.align	2
 2833              		.global	CapSense_GetLowBaselineReset
 2834              		.code	16
 2835              		.thumb_func
 2836              		.type	CapSense_GetLowBaselineReset, %function
 2837              	CapSense_GetLowBaselineReset:
 2838              	.LFB70:
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2839              		.loc 1 2759 0
 2840              		.cfi_startproc
 2841 0000 80B5     		push	{r7, lr}
 2842              		.cfi_def_cfa_offset 8
 2843              		.cfi_offset 7, -8
 2844              		.cfi_offset 14, -4
 2845 0002 82B0     		sub	sp, sp, #8
 2846              		.cfi_def_cfa_offset 16
 2847 0004 00AF     		add	r7, sp, #0
 2848              		.cfi_def_cfa_register 7
 2849 0006 7860     		str	r0, [r7, #4]
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 2850              		.loc 1 2760 0
 2851 0008 034A     		ldr	r2, .L170
 2852 000a 7B68     		ldr	r3, [r7, #4]
 2853 000c D318     		add	r3, r2, r3
 2854 000e 1B78     		ldrb	r3, [r3]
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2855              		.loc 1 2761 0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 100


 2856 0010 181C     		mov	r0, r3
 2857 0012 BD46     		mov	sp, r7
 2858 0014 02B0     		add	sp, sp, #8
 2859              		@ sp needed
 2860 0016 80BD     		pop	{r7, pc}
 2861              	.L171:
 2862              		.align	2
 2863              	.L170:
 2864 0018 00000000 		.word	CapSense_lowBaselineReset
 2865              		.cfi_endproc
 2866              	.LFE70:
 2867              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2868              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2869              		.align	2
 2870              		.global	CapSense_GetDebounce
 2871              		.code	16
 2872              		.thumb_func
 2873              		.type	CapSense_GetDebounce, %function
 2874              	CapSense_GetDebounce:
 2875              	.LFB71:
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2876              		.loc 1 2785 0
 2877              		.cfi_startproc
 2878 0000 80B5     		push	{r7, lr}
 2879              		.cfi_def_cfa_offset 8
 2880              		.cfi_offset 7, -8
 2881              		.cfi_offset 14, -4
 2882 0002 82B0     		sub	sp, sp, #8
 2883              		.cfi_def_cfa_offset 16
 2884 0004 00AF     		add	r7, sp, #0
 2885              		.cfi_def_cfa_register 7
 2886 0006 7860     		str	r0, [r7, #4]
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 2887              		.loc 1 2786 0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 101


 2888 0008 034A     		ldr	r2, .L174
 2889 000a 7B68     		ldr	r3, [r7, #4]
 2890 000c D318     		add	r3, r2, r3
 2891 000e 1B78     		ldrb	r3, [r3]
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2892              		.loc 1 2787 0
 2893 0010 181C     		mov	r0, r3
 2894 0012 BD46     		mov	sp, r7
 2895 0014 02B0     		add	sp, sp, #8
 2896              		@ sp needed
 2897 0016 80BD     		pop	{r7, pc}
 2898              	.L175:
 2899              		.align	2
 2900              	.L174:
 2901 0018 00000000 		.word	CapSense_debounce
 2902              		.cfi_endproc
 2903              	.LFE71:
 2904              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2905              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2906              		.align	2
 2907              		.global	CapSense_EnableRawDataFilters
 2908              		.code	16
 2909              		.thumb_func
 2910              		.type	CapSense_EnableRawDataFilters, %function
 2911              	CapSense_EnableRawDataFilters:
 2912              	.LFB72:
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2913              		.loc 1 2811 0
 2914              		.cfi_startproc
 2915 0000 80B5     		push	{r7, lr}
 2916              		.cfi_def_cfa_offset 8
 2917              		.cfi_offset 7, -8
 2918              		.cfi_offset 14, -4
 2919 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 102


 2920              		.cfi_def_cfa_register 7
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2921              		.loc 1 2812 0
 2922 0004 024B     		ldr	r3, .L177
 2923 0006 0122     		mov	r2, #1
 2924 0008 1A70     		strb	r2, [r3]
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2925              		.loc 1 2813 0
 2926 000a BD46     		mov	sp, r7
 2927              		@ sp needed
 2928 000c 80BD     		pop	{r7, pc}
 2929              	.L178:
 2930 000e C046     		.align	2
 2931              	.L177:
 2932 0010 00000000 		.word	CapSense_enableRawFilters
 2933              		.cfi_endproc
 2934              	.LFE72:
 2935              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2936              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2937              		.align	2
 2938              		.global	CapSense_DisableRawDataFilters
 2939              		.code	16
 2940              		.thumb_func
 2941              		.type	CapSense_DisableRawDataFilters, %function
 2942              	CapSense_DisableRawDataFilters:
 2943              	.LFB73:
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2944              		.loc 1 2836 0
 2945              		.cfi_startproc
 2946 0000 80B5     		push	{r7, lr}
 2947              		.cfi_def_cfa_offset 8
 2948              		.cfi_offset 7, -8
 2949              		.cfi_offset 14, -4
 2950 0002 00AF     		add	r7, sp, #0
 2951              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 103


2837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2952              		.loc 1 2837 0
 2953 0004 024B     		ldr	r3, .L180
 2954 0006 0022     		mov	r2, #0
 2955 0008 1A70     		strb	r2, [r3]
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2956              		.loc 1 2838 0
 2957 000a BD46     		mov	sp, r7
 2958              		@ sp needed
 2959 000c 80BD     		pop	{r7, pc}
 2960              	.L181:
 2961 000e C046     		.align	2
 2962              	.L180:
 2963 0010 00000000 		.word	CapSense_enableRawFilters
 2964              		.cfi_endproc
 2965              	.LFE73:
 2966              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2967              		.bss
 2968 001d 000000   		.align	2
 2969              	CapSense_debounceCounter.5358:
 2970 0020 00       		.space	1
 2971 0021 000000   		.align	2
 2972              	CapSense_centroid.5410:
 2973 0024 000000   		.space	3
 2974 0027 00       		.text
 2975              	.Letext0:
 2976              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2977              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 2978              		.section	.debug_info,"",%progbits
 2979              	.Ldebug_info0:
 2980 0000 350E0000 		.4byte	0xe35
 2981 0004 0400     		.2byte	0x4
 2982 0006 00000000 		.4byte	.Ldebug_abbrev0
 2983 000a 04       		.byte	0x4
 2984 000b 01       		.uleb128 0x1
 2985 000c 2B070000 		.4byte	.LASF138
 2986 0010 01       		.byte	0x1
 2987 0011 AA050000 		.4byte	.LASF139
 2988 0015 BF010000 		.4byte	.LASF140
 2989 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2990 001d 00000000 		.4byte	0
 2991 0021 00000000 		.4byte	.Ldebug_line0
 2992 0025 02       		.uleb128 0x2
 2993 0026 01       		.byte	0x1
 2994 0027 06       		.byte	0x6
 2995 0028 0E0A0000 		.4byte	.LASF0
 2996 002c 02       		.uleb128 0x2
 2997 002d 01       		.byte	0x1
 2998 002e 08       		.byte	0x8
 2999 002f 1F090000 		.4byte	.LASF1
 3000 0033 02       		.uleb128 0x2
 3001 0034 02       		.byte	0x2
 3002 0035 05       		.byte	0x5
 3003 0036 F1070000 		.4byte	.LASF2
 3004 003a 02       		.uleb128 0x2
 3005 003b 02       		.byte	0x2
 3006 003c 07       		.byte	0x7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 104


 3007 003d 1A0A0000 		.4byte	.LASF3
 3008 0041 02       		.uleb128 0x2
 3009 0042 04       		.byte	0x4
 3010 0043 05       		.byte	0x5
 3011 0044 FB070000 		.4byte	.LASF4
 3012 0048 02       		.uleb128 0x2
 3013 0049 04       		.byte	0x4
 3014 004a 07       		.byte	0x7
 3015 004b C3080000 		.4byte	.LASF5
 3016 004f 02       		.uleb128 0x2
 3017 0050 08       		.byte	0x8
 3018 0051 05       		.byte	0x5
 3019 0052 D3050000 		.4byte	.LASF6
 3020 0056 02       		.uleb128 0x2
 3021 0057 08       		.byte	0x8
 3022 0058 07       		.byte	0x7
 3023 0059 4B030000 		.4byte	.LASF7
 3024 005d 03       		.uleb128 0x3
 3025 005e 04       		.byte	0x4
 3026 005f 05       		.byte	0x5
 3027 0060 696E7400 		.ascii	"int\000"
 3028 0064 02       		.uleb128 0x2
 3029 0065 04       		.byte	0x4
 3030 0066 07       		.byte	0x7
 3031 0067 1C010000 		.4byte	.LASF8
 3032 006b 04       		.uleb128 0x4
 3033 006c AA0A0000 		.4byte	.LASF9
 3034 0070 02       		.byte	0x2
 3035 0071 A1       		.byte	0xa1
 3036 0072 2C000000 		.4byte	0x2c
 3037 0076 04       		.uleb128 0x4
 3038 0077 69050000 		.4byte	.LASF10
 3039 007b 02       		.byte	0x2
 3040 007c A2       		.byte	0xa2
 3041 007d 3A000000 		.4byte	0x3a
 3042 0081 04       		.uleb128 0x4
 3043 0082 CE060000 		.4byte	.LASF11
 3044 0086 02       		.byte	0x2
 3045 0087 A3       		.byte	0xa3
 3046 0088 48000000 		.4byte	0x48
 3047 008c 04       		.uleb128 0x4
 3048 008d 41010000 		.4byte	.LASF12
 3049 0091 02       		.byte	0x2
 3050 0092 A5       		.byte	0xa5
 3051 0093 33000000 		.4byte	0x33
 3052 0097 04       		.uleb128 0x4
 3053 0098 06030000 		.4byte	.LASF13
 3054 009c 02       		.byte	0x2
 3055 009d A6       		.byte	0xa6
 3056 009e 41000000 		.4byte	0x41
 3057 00a2 02       		.uleb128 0x2
 3058 00a3 04       		.byte	0x4
 3059 00a4 04       		.byte	0x4
 3060 00a5 00030000 		.4byte	.LASF14
 3061 00a9 02       		.uleb128 0x2
 3062 00aa 08       		.byte	0x8
 3063 00ab 04       		.byte	0x4
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 105


 3064 00ac B00A0000 		.4byte	.LASF15
 3065 00b0 02       		.uleb128 0x2
 3066 00b1 01       		.byte	0x1
 3067 00b2 08       		.byte	0x8
 3068 00b3 41050000 		.4byte	.LASF16
 3069 00b7 02       		.uleb128 0x2
 3070 00b8 04       		.byte	0x4
 3071 00b9 07       		.byte	0x7
 3072 00ba BA080000 		.4byte	.LASF17
 3073 00be 05       		.uleb128 0x5
 3074 00bf 38       		.byte	0x38
 3075 00c0 03       		.byte	0x3
 3076 00c1 2F       		.byte	0x2f
 3077 00c2 6F010000 		.4byte	0x16f
 3078 00c6 06       		.uleb128 0x6
 3079 00c7 75050000 		.4byte	.LASF18
 3080 00cb 03       		.byte	0x3
 3081 00cc 31       		.byte	0x31
 3082 00cd 6F010000 		.4byte	0x16f
 3083 00d1 00       		.byte	0
 3084 00d2 06       		.uleb128 0x6
 3085 00d3 E2070000 		.4byte	.LASF19
 3086 00d7 03       		.byte	0x3
 3087 00d8 32       		.byte	0x32
 3088 00d9 6F010000 		.4byte	0x16f
 3089 00dd 04       		.byte	0x4
 3090 00de 06       		.uleb128 0x6
 3091 00df A9090000 		.4byte	.LASF20
 3092 00e3 03       		.byte	0x3
 3093 00e4 33       		.byte	0x33
 3094 00e5 6F010000 		.4byte	0x16f
 3095 00e9 08       		.byte	0x8
 3096 00ea 06       		.uleb128 0x6
 3097 00eb 12090000 		.4byte	.LASF21
 3098 00ef 03       		.byte	0x3
 3099 00f0 34       		.byte	0x34
 3100 00f1 6F010000 		.4byte	0x16f
 3101 00f5 0C       		.byte	0xc
 3102 00f6 06       		.uleb128 0x6
 3103 00f7 EE090000 		.4byte	.LASF22
 3104 00fb 03       		.byte	0x3
 3105 00fc 35       		.byte	0x35
 3106 00fd 6F010000 		.4byte	0x16f
 3107 0101 10       		.byte	0x10
 3108 0102 06       		.uleb128 0x6
 3109 0103 2A080000 		.4byte	.LASF23
 3110 0107 03       		.byte	0x3
 3111 0108 36       		.byte	0x36
 3112 0109 75010000 		.4byte	0x175
 3113 010d 14       		.byte	0x14
 3114 010e 06       		.uleb128 0x6
 3115 010f 12030000 		.4byte	.LASF24
 3116 0113 03       		.byte	0x3
 3117 0114 37       		.byte	0x37
 3118 0115 80010000 		.4byte	0x180
 3119 0119 18       		.byte	0x18
 3120 011a 06       		.uleb128 0x6
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 106


 3121 011b 5A020000 		.4byte	.LASF25
 3122 011f 03       		.byte	0x3
 3123 0120 38       		.byte	0x38
 3124 0121 75010000 		.4byte	0x175
 3125 0125 1C       		.byte	0x1c
 3126 0126 06       		.uleb128 0x6
 3127 0127 88000000 		.4byte	.LASF26
 3128 012b 03       		.byte	0x3
 3129 012c 39       		.byte	0x39
 3130 012d 75010000 		.4byte	0x175
 3131 0131 20       		.byte	0x20
 3132 0132 06       		.uleb128 0x6
 3133 0133 2B060000 		.4byte	.LASF27
 3134 0137 03       		.byte	0x3
 3135 0138 3A       		.byte	0x3a
 3136 0139 95010000 		.4byte	0x195
 3137 013d 24       		.byte	0x24
 3138 013e 06       		.uleb128 0x6
 3139 013f 03060000 		.4byte	.LASF28
 3140 0143 03       		.byte	0x3
 3141 0144 3B       		.byte	0x3b
 3142 0145 A6010000 		.4byte	0x1a6
 3143 0149 28       		.byte	0x28
 3144 014a 06       		.uleb128 0x6
 3145 014b 6C040000 		.4byte	.LASF29
 3146 014f 03       		.byte	0x3
 3147 0150 3C       		.byte	0x3c
 3148 0151 95010000 		.4byte	0x195
 3149 0155 2C       		.byte	0x2c
 3150 0156 06       		.uleb128 0x6
 3151 0157 98000000 		.4byte	.LASF30
 3152 015b 03       		.byte	0x3
 3153 015c 3D       		.byte	0x3d
 3154 015d C0010000 		.4byte	0x1c0
 3155 0161 30       		.byte	0x30
 3156 0162 06       		.uleb128 0x6
 3157 0163 4B0A0000 		.4byte	.LASF31
 3158 0167 03       		.byte	0x3
 3159 0168 3E       		.byte	0x3e
 3160 0169 DB010000 		.4byte	0x1db
 3161 016d 34       		.byte	0x34
 3162 016e 00       		.byte	0
 3163 016f 07       		.uleb128 0x7
 3164 0170 04       		.byte	0x4
 3165 0171 6B000000 		.4byte	0x6b
 3166 0175 07       		.uleb128 0x7
 3167 0176 04       		.byte	0x4
 3168 0177 7B010000 		.4byte	0x17b
 3169 017b 08       		.uleb128 0x8
 3170 017c 6B000000 		.4byte	0x6b
 3171 0180 07       		.uleb128 0x7
 3172 0181 04       		.byte	0x4
 3173 0182 81000000 		.4byte	0x81
 3174 0186 09       		.uleb128 0x9
 3175 0187 76000000 		.4byte	0x76
 3176 018b 95010000 		.4byte	0x195
 3177 018f 0A       		.uleb128 0xa
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 107


 3178 0190 81000000 		.4byte	0x81
 3179 0194 00       		.byte	0
 3180 0195 07       		.uleb128 0x7
 3181 0196 04       		.byte	0x4
 3182 0197 86010000 		.4byte	0x186
 3183 019b 0B       		.uleb128 0xb
 3184 019c A6010000 		.4byte	0x1a6
 3185 01a0 0A       		.uleb128 0xa
 3186 01a1 81000000 		.4byte	0x81
 3187 01a5 00       		.byte	0
 3188 01a6 07       		.uleb128 0x7
 3189 01a7 04       		.byte	0x4
 3190 01a8 9B010000 		.4byte	0x19b
 3191 01ac 09       		.uleb128 0x9
 3192 01ad 81000000 		.4byte	0x81
 3193 01b1 C0010000 		.4byte	0x1c0
 3194 01b5 0A       		.uleb128 0xa
 3195 01b6 75010000 		.4byte	0x175
 3196 01ba 0A       		.uleb128 0xa
 3197 01bb 81000000 		.4byte	0x81
 3198 01bf 00       		.byte	0
 3199 01c0 07       		.uleb128 0x7
 3200 01c1 04       		.byte	0x4
 3201 01c2 AC010000 		.4byte	0x1ac
 3202 01c6 0B       		.uleb128 0xb
 3203 01c7 DB010000 		.4byte	0x1db
 3204 01cb 0A       		.uleb128 0xa
 3205 01cc 6F010000 		.4byte	0x16f
 3206 01d0 0A       		.uleb128 0xa
 3207 01d1 81000000 		.4byte	0x81
 3208 01d5 0A       		.uleb128 0xa
 3209 01d6 81000000 		.4byte	0x81
 3210 01da 00       		.byte	0
 3211 01db 07       		.uleb128 0x7
 3212 01dc 04       		.byte	0x4
 3213 01dd C6010000 		.4byte	0x1c6
 3214 01e1 04       		.uleb128 0x4
 3215 01e2 73080000 		.4byte	.LASF32
 3216 01e6 03       		.byte	0x3
 3217 01e7 3F       		.byte	0x3f
 3218 01e8 BE000000 		.4byte	0xbe
 3219 01ec 05       		.uleb128 0x5
 3220 01ed 0C       		.byte	0xc
 3221 01ee 03       		.byte	0x3
 3222 01ef 41       		.byte	0x41
 3223 01f0 3D020000 		.4byte	0x23d
 3224 01f4 06       		.uleb128 0x6
 3225 01f5 02050000 		.4byte	.LASF33
 3226 01f9 03       		.byte	0x3
 3227 01fa 43       		.byte	0x43
 3228 01fb 6B000000 		.4byte	0x6b
 3229 01ff 00       		.byte	0
 3230 0200 06       		.uleb128 0x6
 3231 0201 67020000 		.4byte	.LASF34
 3232 0205 03       		.byte	0x3
 3233 0206 44       		.byte	0x44
 3234 0207 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 108


 3235 020b 01       		.byte	0x1
 3236 020c 06       		.uleb128 0x6
 3237 020d 29010000 		.4byte	.LASF35
 3238 0211 03       		.byte	0x3
 3239 0212 45       		.byte	0x45
 3240 0213 6B000000 		.4byte	0x6b
 3241 0217 02       		.byte	0x2
 3242 0218 06       		.uleb128 0x6
 3243 0219 1B050000 		.4byte	.LASF36
 3244 021d 03       		.byte	0x3
 3245 021e 46       		.byte	0x46
 3246 021f 76000000 		.4byte	0x76
 3247 0223 04       		.byte	0x4
 3248 0224 06       		.uleb128 0x6
 3249 0225 BC070000 		.4byte	.LASF37
 3250 0229 03       		.byte	0x3
 3251 022a 47       		.byte	0x47
 3252 022b 76000000 		.4byte	0x76
 3253 022f 06       		.byte	0x6
 3254 0230 06       		.uleb128 0x6
 3255 0231 D5080000 		.4byte	.LASF38
 3256 0235 03       		.byte	0x3
 3257 0236 48       		.byte	0x48
 3258 0237 3D020000 		.4byte	0x23d
 3259 023b 08       		.byte	0x8
 3260 023c 00       		.byte	0
 3261 023d 07       		.uleb128 0x7
 3262 023e 04       		.byte	0x4
 3263 023f 43020000 		.4byte	0x243
 3264 0243 08       		.uleb128 0x8
 3265 0244 E1010000 		.4byte	0x1e1
 3266 0248 04       		.uleb128 0x4
 3267 0249 B70A0000 		.4byte	.LASF39
 3268 024d 03       		.byte	0x3
 3269 024e 49       		.byte	0x49
 3270 024f EC010000 		.4byte	0x1ec
 3271 0253 0C       		.uleb128 0xc
 3272 0254 53060000 		.4byte	.LASF40
 3273 0258 01       		.byte	0x1
 3274 0259 8E       		.byte	0x8e
 3275 025a 00000000 		.4byte	.LFB35
 3276 025e 58000000 		.4byte	.LFE35-.LFB35
 3277 0262 01       		.uleb128 0x1
 3278 0263 9C       		.byte	0x9c
 3279 0264 77020000 		.4byte	0x277
 3280 0268 0D       		.uleb128 0xd
 3281 0269 14050000 		.4byte	.LASF42
 3282 026d 01       		.byte	0x1
 3283 026e 8E       		.byte	0x8e
 3284 026f 81000000 		.4byte	0x81
 3285 0273 02       		.uleb128 0x2
 3286 0274 91       		.byte	0x91
 3287 0275 74       		.sleb128 -12
 3288 0276 00       		.byte	0
 3289 0277 0E       		.uleb128 0xe
 3290 0278 95010000 		.4byte	.LASF41
 3291 027c 01       		.byte	0x1
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 109


 3292 027d D9       		.byte	0xd9
 3293 027e 00000000 		.4byte	.LFB36
 3294 0282 2A000000 		.4byte	.LFE36-.LFB36
 3295 0286 01       		.uleb128 0x1
 3296 0287 9C       		.byte	0x9c
 3297 0288 9B020000 		.4byte	0x29b
 3298 028c 0D       		.uleb128 0xd
 3299 028d 14050000 		.4byte	.LASF42
 3300 0291 01       		.byte	0x1
 3301 0292 D9       		.byte	0xd9
 3302 0293 81000000 		.4byte	0x81
 3303 0297 02       		.uleb128 0x2
 3304 0298 91       		.byte	0x91
 3305 0299 74       		.sleb128 -12
 3306 029a 00       		.byte	0
 3307 029b 0E       		.uleb128 0xe
 3308 029c 53090000 		.4byte	.LASF43
 3309 02a0 01       		.byte	0x1
 3310 02a1 FE       		.byte	0xfe
 3311 02a2 00000000 		.4byte	.LFB37
 3312 02a6 26000000 		.4byte	.LFE37-.LFB37
 3313 02aa 01       		.uleb128 0x1
 3314 02ab 9C       		.byte	0x9c
 3315 02ac BE020000 		.4byte	0x2be
 3316 02b0 0F       		.uleb128 0xf
 3317 02b1 6900     		.ascii	"i\000"
 3318 02b3 01       		.byte	0x1
 3319 02b4 0001     		.2byte	0x100
 3320 02b6 81000000 		.4byte	0x81
 3321 02ba 02       		.uleb128 0x2
 3322 02bb 91       		.byte	0x91
 3323 02bc 74       		.sleb128 -12
 3324 02bd 00       		.byte	0
 3325 02be 10       		.uleb128 0x10
 3326 02bf 47010000 		.4byte	.LASF44
 3327 02c3 01       		.byte	0x1
 3328 02c4 2101     		.2byte	0x121
 3329 02c6 00000000 		.4byte	.LFB38
 3330 02ca 50000000 		.4byte	.LFE38-.LFB38
 3331 02ce 01       		.uleb128 0x1
 3332 02cf 9C       		.byte	0x9c
 3333 02d0 F1020000 		.4byte	0x2f1
 3334 02d4 0F       		.uleb128 0xf
 3335 02d5 6900     		.ascii	"i\000"
 3336 02d7 01       		.byte	0x1
 3337 02d8 2301     		.2byte	0x123
 3338 02da 81000000 		.4byte	0x81
 3339 02de 02       		.uleb128 0x2
 3340 02df 91       		.byte	0x91
 3341 02e0 74       		.sleb128 -12
 3342 02e1 11       		.uleb128 0x11
 3343 02e2 FF000000 		.4byte	.LASF45
 3344 02e6 01       		.byte	0x1
 3345 02e7 2401     		.2byte	0x124
 3346 02e9 81000000 		.4byte	0x81
 3347 02ed 02       		.uleb128 0x2
 3348 02ee 91       		.byte	0x91
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 110


 3349 02ef 70       		.sleb128 -16
 3350 02f0 00       		.byte	0
 3351 02f1 10       		.uleb128 0x10
 3352 02f2 65000000 		.4byte	.LASF46
 3353 02f6 01       		.byte	0x1
 3354 02f7 6201     		.2byte	0x162
 3355 02f9 00000000 		.4byte	.LFB39
 3356 02fd 28020000 		.4byte	.LFE39-.LFB39
 3357 0301 01       		.uleb128 0x1
 3358 0302 9C       		.byte	0x9c
 3359 0303 71030000 		.4byte	0x371
 3360 0307 12       		.uleb128 0x12
 3361 0308 14050000 		.4byte	.LASF42
 3362 030c 01       		.byte	0x1
 3363 030d 6201     		.2byte	0x162
 3364 030f 81000000 		.4byte	0x81
 3365 0313 02       		.uleb128 0x2
 3366 0314 91       		.byte	0x91
 3367 0315 5C       		.sleb128 -36
 3368 0316 11       		.uleb128 0x11
 3369 0317 67040000 		.4byte	.LASF47
 3370 031b 01       		.byte	0x1
 3371 031c 6401     		.2byte	0x164
 3372 031e 81000000 		.4byte	0x81
 3373 0322 02       		.uleb128 0x2
 3374 0323 91       		.byte	0x91
 3375 0324 60       		.sleb128 -32
 3376 0325 11       		.uleb128 0x11
 3377 0326 5B040000 		.4byte	.LASF48
 3378 032a 01       		.byte	0x1
 3379 032b 6501     		.2byte	0x165
 3380 032d 81000000 		.4byte	0x81
 3381 0331 02       		.uleb128 0x2
 3382 0332 91       		.byte	0x91
 3383 0333 6C       		.sleb128 -20
 3384 0334 11       		.uleb128 0x11
 3385 0335 700A0000 		.4byte	.LASF49
 3386 0339 01       		.byte	0x1
 3387 033a 6601     		.2byte	0x166
 3388 033c 76000000 		.4byte	0x76
 3389 0340 02       		.uleb128 0x2
 3390 0341 91       		.byte	0x91
 3391 0342 6A       		.sleb128 -22
 3392 0343 11       		.uleb128 0x11
 3393 0344 88040000 		.4byte	.LASF50
 3394 0348 01       		.byte	0x1
 3395 0349 6701     		.2byte	0x167
 3396 034b 76000000 		.4byte	0x76
 3397 034f 02       		.uleb128 0x2
 3398 0350 91       		.byte	0x91
 3399 0351 68       		.sleb128 -24
 3400 0352 11       		.uleb128 0x11
 3401 0353 7C030000 		.4byte	.LASF51
 3402 0357 01       		.byte	0x1
 3403 0358 6801     		.2byte	0x168
 3404 035a 6B000000 		.4byte	0x6b
 3405 035e 02       		.uleb128 0x2
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 111


 3406 035f 91       		.byte	0x91
 3407 0360 67       		.sleb128 -25
 3408 0361 11       		.uleb128 0x11
 3409 0362 DE080000 		.4byte	.LASF52
 3410 0366 01       		.byte	0x1
 3411 0367 6901     		.2byte	0x169
 3412 0369 6B000000 		.4byte	0x6b
 3413 036d 02       		.uleb128 0x2
 3414 036e 91       		.byte	0x91
 3415 036f 66       		.sleb128 -26
 3416 0370 00       		.byte	0
 3417 0371 10       		.uleb128 0x10
 3418 0372 35060000 		.4byte	.LASF53
 3419 0376 01       		.byte	0x1
 3420 0377 2102     		.2byte	0x221
 3421 0379 00000000 		.4byte	.LFB40
 3422 037d 1E000000 		.4byte	.LFE40-.LFB40
 3423 0381 01       		.uleb128 0x1
 3424 0382 9C       		.byte	0x9c
 3425 0383 97030000 		.4byte	0x397
 3426 0387 12       		.uleb128 0x12
 3427 0388 14050000 		.4byte	.LASF42
 3428 038c 01       		.byte	0x1
 3429 038d 2102     		.2byte	0x221
 3430 038f 81000000 		.4byte	0x81
 3431 0393 02       		.uleb128 0x2
 3432 0394 91       		.byte	0x91
 3433 0395 74       		.sleb128 -12
 3434 0396 00       		.byte	0
 3435 0397 10       		.uleb128 0x10
 3436 0398 C6000000 		.4byte	.LASF54
 3437 039c 01       		.byte	0x1
 3438 039d 5702     		.2byte	0x257
 3439 039f 00000000 		.4byte	.LFB41
 3440 03a3 40000000 		.4byte	.LFE41-.LFB41
 3441 03a7 01       		.uleb128 0x1
 3442 03a8 9C       		.byte	0x9c
 3443 03a9 CA030000 		.4byte	0x3ca
 3444 03ad 0F       		.uleb128 0xf
 3445 03ae 6900     		.ascii	"i\000"
 3446 03b0 01       		.byte	0x1
 3447 03b1 5902     		.2byte	0x259
 3448 03b3 81000000 		.4byte	0x81
 3449 03b7 02       		.uleb128 0x2
 3450 03b8 91       		.byte	0x91
 3451 03b9 74       		.sleb128 -12
 3452 03ba 11       		.uleb128 0x11
 3453 03bb FF000000 		.4byte	.LASF45
 3454 03bf 01       		.byte	0x1
 3455 03c0 5A02     		.2byte	0x25a
 3456 03c2 81000000 		.4byte	0x81
 3457 03c6 02       		.uleb128 0x2
 3458 03c7 91       		.byte	0x91
 3459 03c8 70       		.sleb128 -16
 3460 03c9 00       		.byte	0
 3461 03ca 10       		.uleb128 0x10
 3462 03cb CE020000 		.4byte	.LASF55
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 112


 3463 03cf 01       		.byte	0x1
 3464 03d0 8402     		.2byte	0x284
 3465 03d2 00000000 		.4byte	.LFB42
 3466 03d6 58000000 		.4byte	.LFE42-.LFB42
 3467 03da 01       		.uleb128 0x1
 3468 03db 9C       		.byte	0x9c
 3469 03dc 39040000 		.4byte	0x439
 3470 03e0 12       		.uleb128 0x12
 3471 03e1 7C030000 		.4byte	.LASF51
 3472 03e5 01       		.byte	0x1
 3473 03e6 8402     		.2byte	0x284
 3474 03e8 81000000 		.4byte	0x81
 3475 03ec 02       		.uleb128 0x2
 3476 03ed 91       		.byte	0x91
 3477 03ee 5C       		.sleb128 -36
 3478 03ef 11       		.uleb128 0x11
 3479 03f0 98040000 		.4byte	.LASF56
 3480 03f4 01       		.byte	0x1
 3481 03f5 8602     		.2byte	0x286
 3482 03f7 81000000 		.4byte	0x81
 3483 03fb 02       		.uleb128 0x2
 3484 03fc 91       		.byte	0x91
 3485 03fd 70       		.sleb128 -16
 3486 03fe 11       		.uleb128 0x11
 3487 03ff 04080000 		.4byte	.LASF57
 3488 0403 01       		.byte	0x1
 3489 0404 8702     		.2byte	0x287
 3490 0406 81000000 		.4byte	0x81
 3491 040a 02       		.uleb128 0x2
 3492 040b 91       		.byte	0x91
 3493 040c 6C       		.sleb128 -20
 3494 040d 11       		.uleb128 0x11
 3495 040e B1070000 		.4byte	.LASF58
 3496 0412 01       		.byte	0x1
 3497 0413 8802     		.2byte	0x288
 3498 0415 81000000 		.4byte	0x81
 3499 0419 02       		.uleb128 0x2
 3500 041a 91       		.byte	0x91
 3501 041b 68       		.sleb128 -24
 3502 041c 0F       		.uleb128 0xf
 3503 041d 6900     		.ascii	"i\000"
 3504 041f 01       		.byte	0x1
 3505 0420 8902     		.2byte	0x289
 3506 0422 81000000 		.4byte	0x81
 3507 0426 02       		.uleb128 0x2
 3508 0427 91       		.byte	0x91
 3509 0428 74       		.sleb128 -12
 3510 0429 11       		.uleb128 0x11
 3511 042a FF000000 		.4byte	.LASF45
 3512 042e 01       		.byte	0x1
 3513 042f 8A02     		.2byte	0x28a
 3514 0431 81000000 		.4byte	0x81
 3515 0435 02       		.uleb128 0x2
 3516 0436 91       		.byte	0x91
 3517 0437 64       		.sleb128 -28
 3518 0438 00       		.byte	0
 3519 0439 13       		.uleb128 0x13
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 113


 3520 043a 73090000 		.4byte	.LASF61
 3521 043e 01       		.byte	0x1
 3522 043f B502     		.2byte	0x2b5
 3523 0441 76000000 		.4byte	0x76
 3524 0445 00000000 		.4byte	.LFB43
 3525 0449 1C000000 		.4byte	.LFE43-.LFB43
 3526 044d 01       		.uleb128 0x1
 3527 044e 9C       		.byte	0x9c
 3528 044f 63040000 		.4byte	0x463
 3529 0453 12       		.uleb128 0x12
 3530 0454 14050000 		.4byte	.LASF42
 3531 0458 01       		.byte	0x1
 3532 0459 B502     		.2byte	0x2b5
 3533 045b 81000000 		.4byte	0x81
 3534 045f 02       		.uleb128 0x2
 3535 0460 91       		.byte	0x91
 3536 0461 74       		.sleb128 -12
 3537 0462 00       		.byte	0
 3538 0463 14       		.uleb128 0x14
 3539 0464 41020000 		.4byte	.LASF59
 3540 0468 01       		.byte	0x1
 3541 0469 D002     		.2byte	0x2d0
 3542 046b 00000000 		.4byte	.LFB44
 3543 046f 24000000 		.4byte	.LFE44-.LFB44
 3544 0473 01       		.uleb128 0x1
 3545 0474 9C       		.byte	0x9c
 3546 0475 98040000 		.4byte	0x498
 3547 0479 12       		.uleb128 0x12
 3548 047a 14050000 		.4byte	.LASF42
 3549 047e 01       		.byte	0x1
 3550 047f D002     		.2byte	0x2d0
 3551 0481 81000000 		.4byte	0x81
 3552 0485 02       		.uleb128 0x2
 3553 0486 91       		.byte	0x91
 3554 0487 74       		.sleb128 -12
 3555 0488 12       		.uleb128 0x12
 3556 0489 70050000 		.4byte	.LASF60
 3557 048d 01       		.byte	0x1
 3558 048e D002     		.2byte	0x2d0
 3559 0490 76000000 		.4byte	0x76
 3560 0494 02       		.uleb128 0x2
 3561 0495 91       		.byte	0x91
 3562 0496 72       		.sleb128 -14
 3563 0497 00       		.byte	0
 3564 0498 13       		.uleb128 0x13
 3565 0499 41040000 		.4byte	.LASF62
 3566 049d 01       		.byte	0x1
 3567 049e EB02     		.2byte	0x2eb
 3568 04a0 6B000000 		.4byte	0x6b
 3569 04a4 00000000 		.4byte	.LFB45
 3570 04a8 1C000000 		.4byte	.LFE45-.LFB45
 3571 04ac 01       		.uleb128 0x1
 3572 04ad 9C       		.byte	0x9c
 3573 04ae C2040000 		.4byte	0x4c2
 3574 04b2 12       		.uleb128 0x12
 3575 04b3 14050000 		.4byte	.LASF42
 3576 04b7 01       		.byte	0x1
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 114


 3577 04b8 EB02     		.2byte	0x2eb
 3578 04ba 81000000 		.4byte	0x81
 3579 04be 02       		.uleb128 0x2
 3580 04bf 91       		.byte	0x91
 3581 04c0 74       		.sleb128 -12
 3582 04c1 00       		.byte	0
 3583 04c2 14       		.uleb128 0x14
 3584 04c3 77020000 		.4byte	.LASF63
 3585 04c7 01       		.byte	0x1
 3586 04c8 0603     		.2byte	0x306
 3587 04ca 00000000 		.4byte	.LFB46
 3588 04ce 24000000 		.4byte	.LFE46-.LFB46
 3589 04d2 01       		.uleb128 0x1
 3590 04d3 9C       		.byte	0x9c
 3591 04d4 F7040000 		.4byte	0x4f7
 3592 04d8 12       		.uleb128 0x12
 3593 04d9 14050000 		.4byte	.LASF42
 3594 04dd 01       		.byte	0x1
 3595 04de 0603     		.2byte	0x306
 3596 04e0 81000000 		.4byte	0x81
 3597 04e4 02       		.uleb128 0x2
 3598 04e5 91       		.byte	0x91
 3599 04e6 74       		.sleb128 -12
 3600 04e7 12       		.uleb128 0x12
 3601 04e8 1E040000 		.4byte	.LASF64
 3602 04ec 01       		.byte	0x1
 3603 04ed 0603     		.2byte	0x306
 3604 04ef 6B000000 		.4byte	0x6b
 3605 04f3 02       		.uleb128 0x2
 3606 04f4 91       		.byte	0x91
 3607 04f5 73       		.sleb128 -13
 3608 04f6 00       		.byte	0
 3609 04f7 13       		.uleb128 0x13
 3610 04f8 0F070000 		.4byte	.LASF65
 3611 04fc 01       		.byte	0x1
 3612 04fd 2103     		.2byte	0x321
 3613 04ff 6B000000 		.4byte	0x6b
 3614 0503 00000000 		.4byte	.LFB47
 3615 0507 1C000000 		.4byte	.LFE47-.LFB47
 3616 050b 01       		.uleb128 0x1
 3617 050c 9C       		.byte	0x9c
 3618 050d 21050000 		.4byte	0x521
 3619 0511 12       		.uleb128 0x12
 3620 0512 7C030000 		.4byte	.LASF51
 3621 0516 01       		.byte	0x1
 3622 0517 2103     		.2byte	0x321
 3623 0519 81000000 		.4byte	0x81
 3624 051d 02       		.uleb128 0x2
 3625 051e 91       		.byte	0x91
 3626 051f 74       		.sleb128 -12
 3627 0520 00       		.byte	0
 3628 0521 13       		.uleb128 0x13
 3629 0522 30030000 		.4byte	.LASF66
 3630 0526 01       		.byte	0x1
 3631 0527 3C03     		.2byte	0x33c
 3632 0529 6B000000 		.4byte	0x6b
 3633 052d 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 115


 3634 0531 1C000000 		.4byte	.LFE48-.LFB48
 3635 0535 01       		.uleb128 0x1
 3636 0536 9C       		.byte	0x9c
 3637 0537 4B050000 		.4byte	0x54b
 3638 053b 12       		.uleb128 0x12
 3639 053c 7C030000 		.4byte	.LASF51
 3640 0540 01       		.byte	0x1
 3641 0541 3C03     		.2byte	0x33c
 3642 0543 81000000 		.4byte	0x81
 3643 0547 02       		.uleb128 0x2
 3644 0548 91       		.byte	0x91
 3645 0549 74       		.sleb128 -12
 3646 054a 00       		.byte	0
 3647 054b 13       		.uleb128 0x13
 3648 054c 24040000 		.4byte	.LASF67
 3649 0550 01       		.byte	0x1
 3650 0551 5803     		.2byte	0x358
 3651 0553 6B000000 		.4byte	0x6b
 3652 0557 00000000 		.4byte	.LFB49
 3653 055b 1C000000 		.4byte	.LFE49-.LFB49
 3654 055f 01       		.uleb128 0x1
 3655 0560 9C       		.byte	0x9c
 3656 0561 75050000 		.4byte	0x575
 3657 0565 12       		.uleb128 0x12
 3658 0566 7C030000 		.4byte	.LASF51
 3659 056a 01       		.byte	0x1
 3660 056b 5803     		.2byte	0x358
 3661 056d 81000000 		.4byte	0x81
 3662 0571 02       		.uleb128 0x2
 3663 0572 91       		.byte	0x91
 3664 0573 74       		.sleb128 -12
 3665 0574 00       		.byte	0
 3666 0575 13       		.uleb128 0x13
 3667 0576 46050000 		.4byte	.LASF68
 3668 057a 01       		.byte	0x1
 3669 057b 7403     		.2byte	0x374
 3670 057d 6B000000 		.4byte	0x6b
 3671 0581 00000000 		.4byte	.LFB50
 3672 0585 1C000000 		.4byte	.LFE50-.LFB50
 3673 0589 01       		.uleb128 0x1
 3674 058a 9C       		.byte	0x9c
 3675 058b 9F050000 		.4byte	0x59f
 3676 058f 12       		.uleb128 0x12
 3677 0590 7C030000 		.4byte	.LASF51
 3678 0594 01       		.byte	0x1
 3679 0595 7403     		.2byte	0x374
 3680 0597 81000000 		.4byte	0x81
 3681 059b 02       		.uleb128 0x2
 3682 059c 91       		.byte	0x91
 3683 059d 74       		.sleb128 -12
 3684 059e 00       		.byte	0
 3685 059f 14       		.uleb128 0x14
 3686 05a0 E3030000 		.4byte	.LASF69
 3687 05a4 01       		.byte	0x1
 3688 05a5 9503     		.2byte	0x395
 3689 05a7 00000000 		.4byte	.LFB51
 3690 05ab 24000000 		.4byte	.LFE51-.LFB51
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 116


 3691 05af 01       		.uleb128 0x1
 3692 05b0 9C       		.byte	0x9c
 3693 05b1 D4050000 		.4byte	0x5d4
 3694 05b5 12       		.uleb128 0x12
 3695 05b6 7C030000 		.4byte	.LASF51
 3696 05ba 01       		.byte	0x1
 3697 05bb 9503     		.2byte	0x395
 3698 05bd 81000000 		.4byte	0x81
 3699 05c1 02       		.uleb128 0x2
 3700 05c2 91       		.byte	0x91
 3701 05c3 74       		.sleb128 -12
 3702 05c4 12       		.uleb128 0x12
 3703 05c5 1E040000 		.4byte	.LASF64
 3704 05c9 01       		.byte	0x1
 3705 05ca 9503     		.2byte	0x395
 3706 05cc 6B000000 		.4byte	0x6b
 3707 05d0 02       		.uleb128 0x2
 3708 05d1 91       		.byte	0x91
 3709 05d2 73       		.sleb128 -13
 3710 05d3 00       		.byte	0
 3711 05d4 14       		.uleb128 0x14
 3712 05d5 B3020000 		.4byte	.LASF70
 3713 05d9 01       		.byte	0x1
 3714 05da B103     		.2byte	0x3b1
 3715 05dc 00000000 		.4byte	.LFB52
 3716 05e0 24000000 		.4byte	.LFE52-.LFB52
 3717 05e4 01       		.uleb128 0x1
 3718 05e5 9C       		.byte	0x9c
 3719 05e6 09060000 		.4byte	0x609
 3720 05ea 12       		.uleb128 0x12
 3721 05eb 7C030000 		.4byte	.LASF51
 3722 05ef 01       		.byte	0x1
 3723 05f0 B103     		.2byte	0x3b1
 3724 05f2 81000000 		.4byte	0x81
 3725 05f6 02       		.uleb128 0x2
 3726 05f7 91       		.byte	0x91
 3727 05f8 74       		.sleb128 -12
 3728 05f9 12       		.uleb128 0x12
 3729 05fa 1E040000 		.4byte	.LASF64
 3730 05fe 01       		.byte	0x1
 3731 05ff B103     		.2byte	0x3b1
 3732 0601 6B000000 		.4byte	0x6b
 3733 0605 02       		.uleb128 0x2
 3734 0606 91       		.byte	0x91
 3735 0607 73       		.sleb128 -13
 3736 0608 00       		.byte	0
 3737 0609 14       		.uleb128 0x14
 3738 060a F2060000 		.4byte	.LASF71
 3739 060e 01       		.byte	0x1
 3740 060f CD03     		.2byte	0x3cd
 3741 0611 00000000 		.4byte	.LFB53
 3742 0615 24000000 		.4byte	.LFE53-.LFB53
 3743 0619 01       		.uleb128 0x1
 3744 061a 9C       		.byte	0x9c
 3745 061b 3E060000 		.4byte	0x63e
 3746 061f 12       		.uleb128 0x12
 3747 0620 7C030000 		.4byte	.LASF51
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 117


 3748 0624 01       		.byte	0x1
 3749 0625 CD03     		.2byte	0x3cd
 3750 0627 81000000 		.4byte	0x81
 3751 062b 02       		.uleb128 0x2
 3752 062c 91       		.byte	0x91
 3753 062d 74       		.sleb128 -12
 3754 062e 12       		.uleb128 0x12
 3755 062f 1E040000 		.4byte	.LASF64
 3756 0633 01       		.byte	0x1
 3757 0634 CD03     		.2byte	0x3cd
 3758 0636 6B000000 		.4byte	0x6b
 3759 063a 02       		.uleb128 0x2
 3760 063b 91       		.byte	0x91
 3761 063c 73       		.sleb128 -13
 3762 063d 00       		.byte	0
 3763 063e 14       		.uleb128 0x14
 3764 063f AB060000 		.4byte	.LASF72
 3765 0643 01       		.byte	0x1
 3766 0644 EA03     		.2byte	0x3ea
 3767 0646 00000000 		.4byte	.LFB54
 3768 064a 24000000 		.4byte	.LFE54-.LFB54
 3769 064e 01       		.uleb128 0x1
 3770 064f 9C       		.byte	0x9c
 3771 0650 73060000 		.4byte	0x673
 3772 0654 12       		.uleb128 0x12
 3773 0655 7C030000 		.4byte	.LASF51
 3774 0659 01       		.byte	0x1
 3775 065a EA03     		.2byte	0x3ea
 3776 065c 81000000 		.4byte	0x81
 3777 0660 02       		.uleb128 0x2
 3778 0661 91       		.byte	0x91
 3779 0662 74       		.sleb128 -12
 3780 0663 12       		.uleb128 0x12
 3781 0664 1E040000 		.4byte	.LASF64
 3782 0668 01       		.byte	0x1
 3783 0669 EA03     		.2byte	0x3ea
 3784 066b 6B000000 		.4byte	0x6b
 3785 066f 02       		.uleb128 0x2
 3786 0670 91       		.byte	0x91
 3787 0671 73       		.sleb128 -13
 3788 0672 00       		.byte	0
 3789 0673 14       		.uleb128 0x14
 3790 0674 ED080000 		.4byte	.LASF73
 3791 0678 01       		.byte	0x1
 3792 0679 0604     		.2byte	0x406
 3793 067b 00000000 		.4byte	.LFB55
 3794 067f 24000000 		.4byte	.LFE55-.LFB55
 3795 0683 01       		.uleb128 0x1
 3796 0684 9C       		.byte	0x9c
 3797 0685 A8060000 		.4byte	0x6a8
 3798 0689 12       		.uleb128 0x12
 3799 068a 7C030000 		.4byte	.LASF51
 3800 068e 01       		.byte	0x1
 3801 068f 0604     		.2byte	0x406
 3802 0691 81000000 		.4byte	0x81
 3803 0695 02       		.uleb128 0x2
 3804 0696 91       		.byte	0x91
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 118


 3805 0697 74       		.sleb128 -12
 3806 0698 12       		.uleb128 0x12
 3807 0699 1E040000 		.4byte	.LASF64
 3808 069d 01       		.byte	0x1
 3809 069e 0604     		.2byte	0x406
 3810 06a0 6B000000 		.4byte	0x6b
 3811 06a4 02       		.uleb128 0x2
 3812 06a5 91       		.byte	0x91
 3813 06a6 73       		.sleb128 -13
 3814 06a7 00       		.byte	0
 3815 06a8 14       		.uleb128 0x14
 3816 06a9 8C090000 		.4byte	.LASF74
 3817 06ad 01       		.byte	0x1
 3818 06ae 2204     		.2byte	0x422
 3819 06b0 00000000 		.4byte	.LFB56
 3820 06b4 24000000 		.4byte	.LFE56-.LFB56
 3821 06b8 01       		.uleb128 0x1
 3822 06b9 9C       		.byte	0x9c
 3823 06ba DD060000 		.4byte	0x6dd
 3824 06be 12       		.uleb128 0x12
 3825 06bf 14050000 		.4byte	.LASF42
 3826 06c3 01       		.byte	0x1
 3827 06c4 2204     		.2byte	0x422
 3828 06c6 81000000 		.4byte	0x81
 3829 06ca 02       		.uleb128 0x2
 3830 06cb 91       		.byte	0x91
 3831 06cc 74       		.sleb128 -12
 3832 06cd 12       		.uleb128 0x12
 3833 06ce 1E040000 		.4byte	.LASF64
 3834 06d2 01       		.byte	0x1
 3835 06d3 2204     		.2byte	0x422
 3836 06d5 6B000000 		.4byte	0x6b
 3837 06d9 02       		.uleb128 0x2
 3838 06da 91       		.byte	0x91
 3839 06db 73       		.sleb128 -13
 3840 06dc 00       		.byte	0
 3841 06dd 15       		.uleb128 0x15
 3842 06de 0E060000 		.4byte	.LASF75
 3843 06e2 01       		.byte	0x1
 3844 06e3 5004     		.2byte	0x450
 3845 06e5 81000000 		.4byte	0x81
 3846 06e9 00000000 		.4byte	.LFB57
 3847 06ed 40010000 		.4byte	.LFE57-.LFB57
 3848 06f1 01       		.uleb128 0x1
 3849 06f2 9C       		.byte	0x9c
 3850 06f3 64070000 		.4byte	0x764
 3851 06f7 12       		.uleb128 0x12
 3852 06f8 14050000 		.4byte	.LASF42
 3853 06fc 01       		.byte	0x1
 3854 06fd 5004     		.2byte	0x450
 3855 06ff 81000000 		.4byte	0x81
 3856 0703 02       		.uleb128 0x2
 3857 0704 91       		.byte	0x91
 3858 0705 6C       		.sleb128 -20
 3859 0706 11       		.uleb128 0x11
 3860 0707 7C030000 		.4byte	.LASF51
 3861 070b 01       		.byte	0x1
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 119


 3862 070c 5204     		.2byte	0x452
 3863 070e 6B000000 		.4byte	0x6b
 3864 0712 02       		.uleb128 0x2
 3865 0713 91       		.byte	0x91
 3866 0714 77       		.sleb128 -9
 3867 0715 11       		.uleb128 0x11
 3868 0716 FA050000 		.4byte	.LASF76
 3869 071a 01       		.byte	0x1
 3870 071b 5304     		.2byte	0x453
 3871 071d 6B000000 		.4byte	0x6b
 3872 0721 02       		.uleb128 0x2
 3873 0722 91       		.byte	0x91
 3874 0723 74       		.sleb128 -12
 3875 0724 11       		.uleb128 0x11
 3876 0725 45090000 		.4byte	.LASF77
 3877 0729 01       		.byte	0x1
 3878 072a 5404     		.2byte	0x454
 3879 072c 6B000000 		.4byte	0x6b
 3880 0730 02       		.uleb128 0x2
 3881 0731 91       		.byte	0x91
 3882 0732 73       		.sleb128 -13
 3883 0733 11       		.uleb128 0x11
 3884 0734 02090000 		.4byte	.LASF78
 3885 0738 01       		.byte	0x1
 3886 0739 5604     		.2byte	0x456
 3887 073b 6B000000 		.4byte	0x6b
 3888 073f 02       		.uleb128 0x2
 3889 0740 91       		.byte	0x91
 3890 0741 76       		.sleb128 -10
 3891 0742 11       		.uleb128 0x11
 3892 0743 7D040000 		.4byte	.LASF79
 3893 0747 01       		.byte	0x1
 3894 0748 5704     		.2byte	0x457
 3895 074a 6B000000 		.4byte	0x6b
 3896 074e 02       		.uleb128 0x2
 3897 074f 91       		.byte	0x91
 3898 0750 75       		.sleb128 -11
 3899 0751 11       		.uleb128 0x11
 3900 0752 2F000000 		.4byte	.LASF80
 3901 0756 01       		.byte	0x1
 3902 0757 5804     		.2byte	0x458
 3903 0759 64070000 		.4byte	0x764
 3904 075d 05       		.uleb128 0x5
 3905 075e 03       		.byte	0x3
 3906 075f 20000000 		.4byte	CapSense_debounceCounter.5358
 3907 0763 00       		.byte	0
 3908 0764 16       		.uleb128 0x16
 3909 0765 6B000000 		.4byte	0x6b
 3910 0769 74070000 		.4byte	0x774
 3911 076d 17       		.uleb128 0x17
 3912 076e B7000000 		.4byte	0xb7
 3913 0772 00       		.byte	0
 3914 0773 00       		.byte	0
 3915 0774 15       		.uleb128 0x15
 3916 0775 8D0A0000 		.4byte	.LASF81
 3917 0779 01       		.byte	0x1
 3918 077a A704     		.2byte	0x4a7
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 120


 3919 077c 81000000 		.4byte	0x81
 3920 0780 00000000 		.4byte	.LFB58
 3921 0784 44000000 		.4byte	.LFE58-.LFB58
 3922 0788 01       		.uleb128 0x1
 3923 0789 9C       		.byte	0x9c
 3924 078a CB070000 		.4byte	0x7cb
 3925 078e 12       		.uleb128 0x12
 3926 078f 7C030000 		.4byte	.LASF51
 3927 0793 01       		.byte	0x1
 3928 0794 A704     		.2byte	0x4a7
 3929 0796 81000000 		.4byte	0x81
 3930 079a 02       		.uleb128 0x2
 3931 079b 91       		.byte	0x91
 3932 079c 64       		.sleb128 -28
 3933 079d 11       		.uleb128 0x11
 3934 079e 8F050000 		.4byte	.LASF82
 3935 07a2 01       		.byte	0x1
 3936 07a3 A904     		.2byte	0x4a9
 3937 07a5 81000000 		.4byte	0x81
 3938 07a9 02       		.uleb128 0x2
 3939 07aa 91       		.byte	0x91
 3940 07ab 74       		.sleb128 -12
 3941 07ac 11       		.uleb128 0x11
 3942 07ad 0F010000 		.4byte	.LASF83
 3943 07b1 01       		.byte	0x1
 3944 07b2 AA04     		.2byte	0x4aa
 3945 07b4 81000000 		.4byte	0x81
 3946 07b8 02       		.uleb128 0x2
 3947 07b9 91       		.byte	0x91
 3948 07ba 6C       		.sleb128 -20
 3949 07bb 11       		.uleb128 0x11
 3950 07bc CE090000 		.4byte	.LASF84
 3951 07c0 01       		.byte	0x1
 3952 07c1 AB04     		.2byte	0x4ab
 3953 07c3 81000000 		.4byte	0x81
 3954 07c7 02       		.uleb128 0x2
 3955 07c8 91       		.byte	0x91
 3956 07c9 70       		.sleb128 -16
 3957 07ca 00       		.byte	0
 3958 07cb 15       		.uleb128 0x15
 3959 07cc A9040000 		.4byte	.LASF85
 3960 07d0 01       		.byte	0x1
 3961 07d1 D504     		.2byte	0x4d5
 3962 07d3 81000000 		.4byte	0x81
 3963 07d7 00000000 		.4byte	.LFB59
 3964 07db 38000000 		.4byte	.LFE59-.LFB59
 3965 07df 01       		.uleb128 0x1
 3966 07e0 9C       		.byte	0x9c
 3967 07e1 02080000 		.4byte	0x802
 3968 07e5 0F       		.uleb128 0xf
 3969 07e6 6900     		.ascii	"i\000"
 3970 07e8 01       		.byte	0x1
 3971 07e9 D804     		.2byte	0x4d8
 3972 07eb 81000000 		.4byte	0x81
 3973 07ef 02       		.uleb128 0x2
 3974 07f0 91       		.byte	0x91
 3975 07f1 74       		.sleb128 -12
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 121


 3976 07f2 11       		.uleb128 0x11
 3977 07f3 CE090000 		.4byte	.LASF84
 3978 07f7 01       		.byte	0x1
 3979 07f8 D904     		.2byte	0x4d9
 3980 07fa 81000000 		.4byte	0x81
 3981 07fe 02       		.uleb128 0x2
 3982 07ff 91       		.byte	0x91
 3983 0800 70       		.sleb128 -16
 3984 0801 00       		.byte	0
 3985 0802 10       		.uleb128 0x10
 3986 0803 2B050000 		.4byte	.LASF86
 3987 0807 01       		.byte	0x1
 3988 0808 0405     		.2byte	0x504
 3989 080a 00000000 		.4byte	.LFB60
 3990 080e 5C000000 		.4byte	.LFE60-.LFB60
 3991 0812 01       		.uleb128 0x1
 3992 0813 9C       		.byte	0x9c
 3993 0814 46080000 		.4byte	0x846
 3994 0818 12       		.uleb128 0x12
 3995 0819 7C030000 		.4byte	.LASF51
 3996 081d 01       		.byte	0x1
 3997 081e 0405     		.2byte	0x504
 3998 0820 81000000 		.4byte	0x81
 3999 0824 02       		.uleb128 0x2
 4000 0825 91       		.byte	0x91
 4001 0826 6C       		.sleb128 -20
 4002 0827 11       		.uleb128 0x11
 4003 0828 8F050000 		.4byte	.LASF82
 4004 082c 01       		.byte	0x1
 4005 082d 0705     		.2byte	0x507
 4006 082f 6B000000 		.4byte	0x6b
 4007 0833 02       		.uleb128 0x2
 4008 0834 91       		.byte	0x91
 4009 0835 77       		.sleb128 -9
 4010 0836 11       		.uleb128 0x11
 4011 0837 0F010000 		.4byte	.LASF83
 4012 083b 01       		.byte	0x1
 4013 083c 0805     		.2byte	0x508
 4014 083e 6B000000 		.4byte	0x6b
 4015 0842 02       		.uleb128 0x2
 4016 0843 91       		.byte	0x91
 4017 0844 76       		.sleb128 -10
 4018 0845 00       		.byte	0
 4019 0846 10       		.uleb128 0x10
 4020 0847 A7000000 		.4byte	.LASF87
 4021 084b 01       		.byte	0x1
 4022 084c 2F05     		.2byte	0x52f
 4023 084e 00000000 		.4byte	.LFB61
 4024 0852 5C000000 		.4byte	.LFE61-.LFB61
 4025 0856 01       		.uleb128 0x1
 4026 0857 9C       		.byte	0x9c
 4027 0858 8A080000 		.4byte	0x88a
 4028 085c 12       		.uleb128 0x12
 4029 085d 7C030000 		.4byte	.LASF51
 4030 0861 01       		.byte	0x1
 4031 0862 2F05     		.2byte	0x52f
 4032 0864 81000000 		.4byte	0x81
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 122


 4033 0868 02       		.uleb128 0x2
 4034 0869 91       		.byte	0x91
 4035 086a 6C       		.sleb128 -20
 4036 086b 11       		.uleb128 0x11
 4037 086c 8F050000 		.4byte	.LASF82
 4038 0870 01       		.byte	0x1
 4039 0871 3105     		.2byte	0x531
 4040 0873 6B000000 		.4byte	0x6b
 4041 0877 02       		.uleb128 0x2
 4042 0878 91       		.byte	0x91
 4043 0879 77       		.sleb128 -9
 4044 087a 11       		.uleb128 0x11
 4045 087b 0F010000 		.4byte	.LASF83
 4046 087f 01       		.byte	0x1
 4047 0880 3205     		.2byte	0x532
 4048 0882 6B000000 		.4byte	0x6b
 4049 0886 02       		.uleb128 0x2
 4050 0887 91       		.byte	0x91
 4051 0888 76       		.sleb128 -10
 4052 0889 00       		.byte	0
 4053 088a 13       		.uleb128 0x13
 4054 088b 15080000 		.4byte	.LASF88
 4055 088f 01       		.byte	0x1
 4056 0890 6105     		.2byte	0x561
 4057 0892 6B000000 		.4byte	0x6b
 4058 0896 00000000 		.4byte	.LFB62
 4059 089a AC000000 		.4byte	.LFE62-.LFB62
 4060 089e 01       		.uleb128 0x1
 4061 089f 9C       		.byte	0x9c
 4062 08a0 0C090000 		.4byte	0x90c
 4063 08a4 12       		.uleb128 0x12
 4064 08a5 60040000 		.4byte	.LASF89
 4065 08a9 01       		.byte	0x1
 4066 08aa 6105     		.2byte	0x561
 4067 08ac 6B000000 		.4byte	0x6b
 4068 08b0 02       		.uleb128 0x2
 4069 08b1 91       		.byte	0x91
 4070 08b2 6F       		.sleb128 -17
 4071 08b3 12       		.uleb128 0x12
 4072 08b4 0C030000 		.4byte	.LASF90
 4073 08b8 01       		.byte	0x1
 4074 08b9 6105     		.2byte	0x561
 4075 08bb 6B000000 		.4byte	0x6b
 4076 08bf 02       		.uleb128 0x2
 4077 08c0 91       		.byte	0x91
 4078 08c1 6E       		.sleb128 -18
 4079 08c2 12       		.uleb128 0x12
 4080 08c3 02090000 		.4byte	.LASF78
 4081 08c7 01       		.byte	0x1
 4082 08c8 6105     		.2byte	0x561
 4083 08ca 6B000000 		.4byte	0x6b
 4084 08ce 02       		.uleb128 0x2
 4085 08cf 91       		.byte	0x91
 4086 08d0 6D       		.sleb128 -19
 4087 08d1 0F       		.uleb128 0xf
 4088 08d2 6900     		.ascii	"i\000"
 4089 08d4 01       		.byte	0x1
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 123


 4090 08d5 6405     		.2byte	0x564
 4091 08d7 6B000000 		.4byte	0x6b
 4092 08db 02       		.uleb128 0x2
 4093 08dc 91       		.byte	0x91
 4094 08dd 77       		.sleb128 -9
 4095 08de 11       		.uleb128 0x11
 4096 08df B2080000 		.4byte	.LASF91
 4097 08e3 01       		.byte	0x1
 4098 08e4 6E05     		.2byte	0x56e
 4099 08e6 6B000000 		.4byte	0x6b
 4100 08ea 02       		.uleb128 0x2
 4101 08eb 91       		.byte	0x91
 4102 08ec 76       		.sleb128 -10
 4103 08ed 11       		.uleb128 0x11
 4104 08ee 10080000 		.4byte	.LASF92
 4105 08f2 01       		.byte	0x1
 4106 08f3 7005     		.2byte	0x570
 4107 08f5 6B000000 		.4byte	0x6b
 4108 08f9 02       		.uleb128 0x2
 4109 08fa 91       		.byte	0x91
 4110 08fb 75       		.sleb128 -11
 4111 08fc 11       		.uleb128 0x11
 4112 08fd E4060000 		.4byte	.LASF93
 4113 0901 01       		.byte	0x1
 4114 0902 7105     		.2byte	0x571
 4115 0904 6F010000 		.4byte	0x16f
 4116 0908 02       		.uleb128 0x2
 4117 0909 91       		.byte	0x91
 4118 090a 70       		.sleb128 -16
 4119 090b 00       		.byte	0
 4120 090c 15       		.uleb128 0x15
 4121 090d 65060000 		.4byte	.LASF94
 4122 0911 01       		.byte	0x1
 4123 0912 0006     		.2byte	0x600
 4124 0914 6B000000 		.4byte	0x6b
 4125 0918 00000000 		.4byte	.LFB63
 4126 091c 94010000 		.4byte	.LFE63-.LFB63
 4127 0920 01       		.uleb128 0x1
 4128 0921 9C       		.byte	0x9c
 4129 0922 DE090000 		.4byte	0x9de
 4130 0926 12       		.uleb128 0x12
 4131 0927 B2080000 		.4byte	.LASF91
 4132 092b 01       		.byte	0x1
 4133 092c 0006     		.2byte	0x600
 4134 092e 6B000000 		.4byte	0x6b
 4135 0932 02       		.uleb128 0x2
 4136 0933 91       		.byte	0x91
 4137 0934 57       		.sleb128 -41
 4138 0935 12       		.uleb128 0x12
 4139 0936 60040000 		.4byte	.LASF89
 4140 093a 01       		.byte	0x1
 4141 093b 0006     		.2byte	0x600
 4142 093d 6B000000 		.4byte	0x6b
 4143 0941 02       		.uleb128 0x2
 4144 0942 91       		.byte	0x91
 4145 0943 56       		.sleb128 -42
 4146 0944 12       		.uleb128 0x12
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 124


 4147 0945 0C030000 		.4byte	.LASF90
 4148 0949 01       		.byte	0x1
 4149 094a 0106     		.2byte	0x601
 4150 094c 6B000000 		.4byte	0x6b
 4151 0950 02       		.uleb128 0x2
 4152 0951 91       		.byte	0x91
 4153 0952 55       		.sleb128 -43
 4154 0953 12       		.uleb128 0x12
 4155 0954 84050000 		.4byte	.LASF95
 4156 0958 01       		.byte	0x1
 4157 0959 0106     		.2byte	0x601
 4158 095b 76000000 		.4byte	0x76
 4159 095f 02       		.uleb128 0x2
 4160 0960 91       		.byte	0x91
 4161 0961 52       		.sleb128 -46
 4162 0962 12       		.uleb128 0x12
 4163 0963 DE080000 		.4byte	.LASF52
 4164 0967 01       		.byte	0x1
 4165 0968 0106     		.2byte	0x601
 4166 096a 6B000000 		.4byte	0x6b
 4167 096e 02       		.uleb128 0x2
 4168 096f 91       		.byte	0x91
 4169 0970 00       		.sleb128 0
 4170 0971 11       		.uleb128 0x11
 4171 0972 B7010000 		.4byte	.LASF96
 4172 0976 01       		.byte	0x1
 4173 0977 0506     		.2byte	0x605
 4174 0979 6B000000 		.4byte	0x6b
 4175 097d 02       		.uleb128 0x2
 4176 097e 91       		.byte	0x91
 4177 097f 6F       		.sleb128 -17
 4178 0980 11       		.uleb128 0x11
 4179 0981 39010000 		.4byte	.LASF97
 4180 0985 01       		.byte	0x1
 4181 0986 0606     		.2byte	0x606
 4182 0988 6B000000 		.4byte	0x6b
 4183 098c 02       		.uleb128 0x2
 4184 098d 91       		.byte	0x91
 4185 098e 67       		.sleb128 -25
 4186 098f 11       		.uleb128 0x11
 4187 0990 98050000 		.4byte	.LASF98
 4188 0994 01       		.byte	0x1
 4189 0995 0B06     		.2byte	0x60b
 4190 0997 DE090000 		.4byte	0x9de
 4191 099b 05       		.uleb128 0x5
 4192 099c 03       		.byte	0x3
 4193 099d 24000000 		.4byte	CapSense_centroid.5410
 4194 09a1 11       		.uleb128 0x11
 4195 09a2 ED0A0000 		.4byte	.LASF99
 4196 09a6 01       		.byte	0x1
 4197 09a7 1206     		.2byte	0x612
 4198 09a9 6B000000 		.4byte	0x6b
 4199 09ad 02       		.uleb128 0x2
 4200 09ae 91       		.byte	0x91
 4201 09af 5B       		.sleb128 -37
 4202 09b0 11       		.uleb128 0x11
 4203 09b1 A7070000 		.4byte	.LASF100
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 125


 4204 09b5 01       		.byte	0x1
 4205 09b6 1306     		.2byte	0x613
 4206 09b8 81000000 		.4byte	0x81
 4207 09bc 02       		.uleb128 0x2
 4208 09bd 91       		.byte	0x91
 4209 09be 60       		.sleb128 -32
 4210 09bf 11       		.uleb128 0x11
 4211 09c0 A7020000 		.4byte	.LASF101
 4212 09c4 01       		.byte	0x1
 4213 09c5 1406     		.2byte	0x614
 4214 09c7 97000000 		.4byte	0x97
 4215 09cb 02       		.uleb128 0x2
 4216 09cc 91       		.byte	0x91
 4217 09cd 5C       		.sleb128 -36
 4218 09ce 11       		.uleb128 0x11
 4219 09cf E4060000 		.4byte	.LASF93
 4220 09d3 01       		.byte	0x1
 4221 09d4 1606     		.2byte	0x616
 4222 09d6 6F010000 		.4byte	0x16f
 4223 09da 02       		.uleb128 0x2
 4224 09db 91       		.byte	0x91
 4225 09dc 68       		.sleb128 -24
 4226 09dd 00       		.byte	0
 4227 09de 16       		.uleb128 0x16
 4228 09df 6B000000 		.4byte	0x6b
 4229 09e3 EE090000 		.4byte	0x9ee
 4230 09e7 17       		.uleb128 0x17
 4231 09e8 B7000000 		.4byte	0xb7
 4232 09ec 02       		.byte	0x2
 4233 09ed 00       		.byte	0
 4234 09ee 15       		.uleb128 0x15
 4235 09ef CA070000 		.4byte	.LASF102
 4236 09f3 01       		.byte	0x1
 4237 09f4 D306     		.2byte	0x6d3
 4238 09f6 76000000 		.4byte	0x76
 4239 09fa 00000000 		.4byte	.LFB64
 4240 09fe BC010000 		.4byte	.LFE64-.LFB64
 4241 0a02 01       		.uleb128 0x1
 4242 0a03 9C       		.byte	0x9c
 4243 0a04 900A0000 		.4byte	0xa90
 4244 0a08 12       		.uleb128 0x12
 4245 0a09 7C030000 		.4byte	.LASF51
 4246 0a0d 01       		.byte	0x1
 4247 0a0e D306     		.2byte	0x6d3
 4248 0a10 81000000 		.4byte	0x81
 4249 0a14 02       		.uleb128 0x2
 4250 0a15 91       		.byte	0x91
 4251 0a16 5C       		.sleb128 -36
 4252 0a17 11       		.uleb128 0x11
 4253 0a18 E6000000 		.4byte	.LASF103
 4254 0a1c 01       		.byte	0x1
 4255 0a1d DA06     		.2byte	0x6da
 4256 0a1f 6B000000 		.4byte	0x6b
 4257 0a23 02       		.uleb128 0x2
 4258 0a24 91       		.byte	0x91
 4259 0a25 68       		.sleb128 -24
 4260 0a26 11       		.uleb128 0x11
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 126


 4261 0a27 D5060000 		.4byte	.LASF104
 4262 0a2b 01       		.byte	0x1
 4263 0a2c DB06     		.2byte	0x6db
 4264 0a2e 6B000000 		.4byte	0x6b
 4265 0a32 02       		.uleb128 0x2
 4266 0a33 91       		.byte	0x91
 4267 0a34 6D       		.sleb128 -19
 4268 0a35 11       		.uleb128 0x11
 4269 0a36 21030000 		.4byte	.LASF105
 4270 0a3a 01       		.byte	0x1
 4271 0a3b DC06     		.2byte	0x6dc
 4272 0a3d 6B000000 		.4byte	0x6b
 4273 0a41 02       		.uleb128 0x2
 4274 0a42 91       		.byte	0x91
 4275 0a43 6C       		.sleb128 -20
 4276 0a44 11       		.uleb128 0x11
 4277 0a45 BE000000 		.4byte	.LASF106
 4278 0a49 01       		.byte	0x1
 4279 0a4a E106     		.2byte	0x6e1
 4280 0a4c 6B000000 		.4byte	0x6b
 4281 0a50 02       		.uleb128 0x2
 4282 0a51 91       		.byte	0x91
 4283 0a52 67       		.sleb128 -25
 4284 0a53 11       		.uleb128 0x11
 4285 0a54 B2080000 		.4byte	.LASF91
 4286 0a58 01       		.byte	0x1
 4287 0a59 E606     		.2byte	0x6e6
 4288 0a5b 6B000000 		.4byte	0x6b
 4289 0a5f 02       		.uleb128 0x2
 4290 0a60 91       		.byte	0x91
 4291 0a61 69       		.sleb128 -23
 4292 0a62 11       		.uleb128 0x11
 4293 0a63 ED0A0000 		.4byte	.LASF99
 4294 0a67 01       		.byte	0x1
 4295 0a68 E706     		.2byte	0x6e7
 4296 0a6a 76000000 		.4byte	0x76
 4297 0a6e 02       		.uleb128 0x2
 4298 0a6f 91       		.byte	0x91
 4299 0a70 6E       		.sleb128 -18
 4300 0a71 11       		.uleb128 0x11
 4301 0a72 60040000 		.4byte	.LASF89
 4302 0a76 01       		.byte	0x1
 4303 0a77 E806     		.2byte	0x6e8
 4304 0a79 6B000000 		.4byte	0x6b
 4305 0a7d 02       		.uleb128 0x2
 4306 0a7e 91       		.byte	0x91
 4307 0a7f 6B       		.sleb128 -21
 4308 0a80 11       		.uleb128 0x11
 4309 0a81 0C030000 		.4byte	.LASF90
 4310 0a85 01       		.byte	0x1
 4311 0a86 E906     		.2byte	0x6e9
 4312 0a88 6B000000 		.4byte	0x6b
 4313 0a8c 02       		.uleb128 0x2
 4314 0a8d 91       		.byte	0x91
 4315 0a8e 6A       		.sleb128 -22
 4316 0a8f 00       		.byte	0
 4317 0a90 15       		.uleb128 0x15
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 127


 4318 0a91 2D0A0000 		.4byte	.LASF107
 4319 0a95 01       		.byte	0x1
 4320 0a96 9E07     		.2byte	0x79e
 4321 0a98 76000000 		.4byte	0x76
 4322 0a9c 00000000 		.4byte	.LFB65
 4323 0aa0 98000000 		.4byte	.LFE65-.LFB65
 4324 0aa4 01       		.uleb128 0x1
 4325 0aa5 9C       		.byte	0x9c
 4326 0aa6 F60A0000 		.4byte	0xaf6
 4327 0aaa 12       		.uleb128 0x12
 4328 0aab 7C030000 		.4byte	.LASF51
 4329 0aaf 01       		.byte	0x1
 4330 0ab0 9E07     		.2byte	0x79e
 4331 0ab2 81000000 		.4byte	0x81
 4332 0ab6 02       		.uleb128 0x2
 4333 0ab7 91       		.byte	0x91
 4334 0ab8 64       		.sleb128 -28
 4335 0ab9 11       		.uleb128 0x11
 4336 0aba B2080000 		.4byte	.LASF91
 4337 0abe 01       		.byte	0x1
 4338 0abf AD07     		.2byte	0x7ad
 4339 0ac1 6B000000 		.4byte	0x6b
 4340 0ac5 02       		.uleb128 0x2
 4341 0ac6 91       		.byte	0x91
 4342 0ac7 6B       		.sleb128 -21
 4343 0ac8 11       		.uleb128 0x11
 4344 0ac9 ED0A0000 		.4byte	.LASF99
 4345 0acd 01       		.byte	0x1
 4346 0ace AE07     		.2byte	0x7ae
 4347 0ad0 76000000 		.4byte	0x76
 4348 0ad4 02       		.uleb128 0x2
 4349 0ad5 91       		.byte	0x91
 4350 0ad6 6E       		.sleb128 -18
 4351 0ad7 11       		.uleb128 0x11
 4352 0ad8 60040000 		.4byte	.LASF89
 4353 0adc 01       		.byte	0x1
 4354 0add AF07     		.2byte	0x7af
 4355 0adf 6B000000 		.4byte	0x6b
 4356 0ae3 02       		.uleb128 0x2
 4357 0ae4 91       		.byte	0x91
 4358 0ae5 6D       		.sleb128 -19
 4359 0ae6 11       		.uleb128 0x11
 4360 0ae7 0C030000 		.4byte	.LASF90
 4361 0aeb 01       		.byte	0x1
 4362 0aec B007     		.2byte	0x7b0
 4363 0aee 6B000000 		.4byte	0x6b
 4364 0af2 02       		.uleb128 0x2
 4365 0af3 91       		.byte	0x91
 4366 0af4 6C       		.sleb128 -20
 4367 0af5 00       		.byte	0
 4368 0af6 13       		.uleb128 0x13
 4369 0af7 5A0A0000 		.4byte	.LASF108
 4370 0afb 01       		.byte	0x1
 4371 0afc 4B09     		.2byte	0x94b
 4372 0afe 76000000 		.4byte	0x76
 4373 0b02 00000000 		.4byte	.LFB66
 4374 0b06 6A000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 128


 4375 0b0a 01       		.uleb128 0x1
 4376 0b0b 9C       		.byte	0x9c
 4377 0b0c 4A0B0000 		.4byte	0xb4a
 4378 0b10 18       		.uleb128 0x18
 4379 0b11 783100   		.ascii	"x1\000"
 4380 0b14 01       		.byte	0x1
 4381 0b15 4B09     		.2byte	0x94b
 4382 0b17 76000000 		.4byte	0x76
 4383 0b1b 02       		.uleb128 0x2
 4384 0b1c 91       		.byte	0x91
 4385 0b1d 6E       		.sleb128 -18
 4386 0b1e 18       		.uleb128 0x18
 4387 0b1f 783200   		.ascii	"x2\000"
 4388 0b22 01       		.byte	0x1
 4389 0b23 4B09     		.2byte	0x94b
 4390 0b25 76000000 		.4byte	0x76
 4391 0b29 02       		.uleb128 0x2
 4392 0b2a 91       		.byte	0x91
 4393 0b2b 6C       		.sleb128 -20
 4394 0b2c 18       		.uleb128 0x18
 4395 0b2d 783300   		.ascii	"x3\000"
 4396 0b30 01       		.byte	0x1
 4397 0b31 4B09     		.2byte	0x94b
 4398 0b33 76000000 		.4byte	0x76
 4399 0b37 02       		.uleb128 0x2
 4400 0b38 91       		.byte	0x91
 4401 0b39 6A       		.sleb128 -22
 4402 0b3a 0F       		.uleb128 0xf
 4403 0b3b 746D7000 		.ascii	"tmp\000"
 4404 0b3f 01       		.byte	0x1
 4405 0b40 4D09     		.2byte	0x94d
 4406 0b42 76000000 		.4byte	0x76
 4407 0b46 02       		.uleb128 0x2
 4408 0b47 91       		.byte	0x91
 4409 0b48 76       		.sleb128 -10
 4410 0b49 00       		.byte	0
 4411 0b4a 15       		.uleb128 0x15
 4412 0b4b B4030000 		.4byte	.LASF109
 4413 0b4f 01       		.byte	0x1
 4414 0b50 7C09     		.2byte	0x97c
 4415 0b52 76000000 		.4byte	0x76
 4416 0b56 00000000 		.4byte	.LFB67
 4417 0b5a 3A000000 		.4byte	.LFE67-.LFB67
 4418 0b5e 01       		.uleb128 0x1
 4419 0b5f 9C       		.byte	0x9c
 4420 0b60 9E0B0000 		.4byte	0xb9e
 4421 0b64 18       		.uleb128 0x18
 4422 0b65 783100   		.ascii	"x1\000"
 4423 0b68 01       		.byte	0x1
 4424 0b69 7C09     		.2byte	0x97c
 4425 0b6b 76000000 		.4byte	0x76
 4426 0b6f 02       		.uleb128 0x2
 4427 0b70 91       		.byte	0x91
 4428 0b71 6E       		.sleb128 -18
 4429 0b72 18       		.uleb128 0x18
 4430 0b73 783200   		.ascii	"x2\000"
 4431 0b76 01       		.byte	0x1
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 129


 4432 0b77 7C09     		.2byte	0x97c
 4433 0b79 76000000 		.4byte	0x76
 4434 0b7d 02       		.uleb128 0x2
 4435 0b7e 91       		.byte	0x91
 4436 0b7f 6C       		.sleb128 -20
 4437 0b80 18       		.uleb128 0x18
 4438 0b81 783300   		.ascii	"x3\000"
 4439 0b84 01       		.byte	0x1
 4440 0b85 7C09     		.2byte	0x97c
 4441 0b87 76000000 		.4byte	0x76
 4442 0b8b 02       		.uleb128 0x2
 4443 0b8c 91       		.byte	0x91
 4444 0b8d 6A       		.sleb128 -22
 4445 0b8e 0F       		.uleb128 0xf
 4446 0b8f 746D7000 		.ascii	"tmp\000"
 4447 0b93 01       		.byte	0x1
 4448 0b94 7E09     		.2byte	0x97e
 4449 0b96 81000000 		.4byte	0x81
 4450 0b9a 02       		.uleb128 0x2
 4451 0b9b 91       		.byte	0x91
 4452 0b9c 74       		.sleb128 -12
 4453 0b9d 00       		.byte	0
 4454 0b9e 13       		.uleb128 0x13
 4455 0b9f 1B000000 		.4byte	.LASF110
 4456 0ba3 01       		.byte	0x1
 4457 0ba4 C309     		.2byte	0x9c3
 4458 0ba6 76000000 		.4byte	0x76
 4459 0baa 00000000 		.4byte	.LFB68
 4460 0bae 3C000000 		.4byte	.LFE68-.LFB68
 4461 0bb2 01       		.uleb128 0x1
 4462 0bb3 9C       		.byte	0x9c
 4463 0bb4 E40B0000 		.4byte	0xbe4
 4464 0bb8 18       		.uleb128 0x18
 4465 0bb9 783100   		.ascii	"x1\000"
 4466 0bbc 01       		.byte	0x1
 4467 0bbd C309     		.2byte	0x9c3
 4468 0bbf 76000000 		.4byte	0x76
 4469 0bc3 02       		.uleb128 0x2
 4470 0bc4 91       		.byte	0x91
 4471 0bc5 6E       		.sleb128 -18
 4472 0bc6 18       		.uleb128 0x18
 4473 0bc7 783200   		.ascii	"x2\000"
 4474 0bca 01       		.byte	0x1
 4475 0bcb C309     		.2byte	0x9c3
 4476 0bcd 76000000 		.4byte	0x76
 4477 0bd1 02       		.uleb128 0x2
 4478 0bd2 91       		.byte	0x91
 4479 0bd3 6C       		.sleb128 -20
 4480 0bd4 0F       		.uleb128 0xf
 4481 0bd5 746D7000 		.ascii	"tmp\000"
 4482 0bd9 01       		.byte	0x1
 4483 0bda C509     		.2byte	0x9c5
 4484 0bdc 81000000 		.4byte	0x81
 4485 0be0 02       		.uleb128 0x2
 4486 0be1 91       		.byte	0x91
 4487 0be2 74       		.sleb128 -12
 4488 0be3 00       		.byte	0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 130


 4489 0be4 13       		.uleb128 0x13
 4490 0be5 E1050000 		.4byte	.LASF111
 4491 0be9 01       		.byte	0x1
 4492 0bea AC0A     		.2byte	0xaac
 4493 0bec 81000000 		.4byte	0x81
 4494 0bf0 00000000 		.4byte	.LFB69
 4495 0bf4 1C000000 		.4byte	.LFE69-.LFB69
 4496 0bf8 01       		.uleb128 0x1
 4497 0bf9 9C       		.byte	0x9c
 4498 0bfa 0E0C0000 		.4byte	0xc0e
 4499 0bfe 12       		.uleb128 0x12
 4500 0bff 14050000 		.4byte	.LASF42
 4501 0c03 01       		.byte	0x1
 4502 0c04 AC0A     		.2byte	0xaac
 4503 0c06 81000000 		.4byte	0x81
 4504 0c0a 02       		.uleb128 0x2
 4505 0c0b 91       		.byte	0x91
 4506 0c0c 74       		.sleb128 -12
 4507 0c0d 00       		.byte	0
 4508 0c0e 13       		.uleb128 0x13
 4509 0c0f 8E060000 		.4byte	.LASF112
 4510 0c13 01       		.byte	0x1
 4511 0c14 C60A     		.2byte	0xac6
 4512 0c16 6B000000 		.4byte	0x6b
 4513 0c1a 00000000 		.4byte	.LFB70
 4514 0c1e 1C000000 		.4byte	.LFE70-.LFB70
 4515 0c22 01       		.uleb128 0x1
 4516 0c23 9C       		.byte	0x9c
 4517 0c24 380C0000 		.4byte	0xc38
 4518 0c28 12       		.uleb128 0x12
 4519 0c29 14050000 		.4byte	.LASF42
 4520 0c2d 01       		.byte	0x1
 4521 0c2e C60A     		.2byte	0xac6
 4522 0c30 81000000 		.4byte	0x81
 4523 0c34 02       		.uleb128 0x2
 4524 0c35 91       		.byte	0x91
 4525 0c36 74       		.sleb128 -12
 4526 0c37 00       		.byte	0
 4527 0c38 13       		.uleb128 0x13
 4528 0c39 780A0000 		.4byte	.LASF113
 4529 0c3d 01       		.byte	0x1
 4530 0c3e E00A     		.2byte	0xae0
 4531 0c40 6B000000 		.4byte	0x6b
 4532 0c44 00000000 		.4byte	.LFB71
 4533 0c48 1C000000 		.4byte	.LFE71-.LFB71
 4534 0c4c 01       		.uleb128 0x1
 4535 0c4d 9C       		.byte	0x9c
 4536 0c4e 620C0000 		.4byte	0xc62
 4537 0c52 12       		.uleb128 0x12
 4538 0c53 7C030000 		.4byte	.LASF51
 4539 0c57 01       		.byte	0x1
 4540 0c58 E00A     		.2byte	0xae0
 4541 0c5a 81000000 		.4byte	0x81
 4542 0c5e 02       		.uleb128 0x2
 4543 0c5f 91       		.byte	0x91
 4544 0c60 74       		.sleb128 -12
 4545 0c61 00       		.byte	0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 131


 4546 0c62 19       		.uleb128 0x19
 4547 0c63 3B080000 		.4byte	.LASF114
 4548 0c67 01       		.byte	0x1
 4549 0c68 FA0A     		.2byte	0xafa
 4550 0c6a 00000000 		.4byte	.LFB72
 4551 0c6e 14000000 		.4byte	.LFE72-.LFB72
 4552 0c72 01       		.uleb128 0x1
 4553 0c73 9C       		.byte	0x9c
 4554 0c74 19       		.uleb128 0x19
 4555 0c75 FF030000 		.4byte	.LASF115
 4556 0c79 01       		.byte	0x1
 4557 0c7a 130B     		.2byte	0xb13
 4558 0c7c 00000000 		.4byte	.LFB73
 4559 0c80 14000000 		.4byte	.LFE73-.LFB73
 4560 0c84 01       		.uleb128 0x1
 4561 0c85 9C       		.byte	0x9c
 4562 0c86 16       		.uleb128 0x16
 4563 0c87 76000000 		.4byte	0x76
 4564 0c8b 960C0000 		.4byte	0xc96
 4565 0c8f 17       		.uleb128 0x17
 4566 0c90 B7000000 		.4byte	0xb7
 4567 0c94 00       		.byte	0
 4568 0c95 00       		.byte	0
 4569 0c96 1A       		.uleb128 0x1a
 4570 0c97 B8090000 		.4byte	.LASF116
 4571 0c9b 01       		.byte	0x1
 4572 0c9c 5D       		.byte	0x5d
 4573 0c9d A70C0000 		.4byte	0xca7
 4574 0ca1 05       		.uleb128 0x5
 4575 0ca2 03       		.byte	0x3
 4576 0ca3 08000000 		.4byte	CapSense_centroidMult
 4577 0ca7 08       		.uleb128 0x8
 4578 0ca8 860C0000 		.4byte	0xc86
 4579 0cac 1A       		.uleb128 0x1a
 4580 0cad 83030000 		.4byte	.LASF117
 4581 0cb1 01       		.byte	0x1
 4582 0cb2 61       		.byte	0x61
 4583 0cb3 64070000 		.4byte	0x764
 4584 0cb7 05       		.uleb128 0x5
 4585 0cb8 03       		.byte	0x3
 4586 0cb9 0C000000 		.4byte	CapSense_posFiltersMask
 4587 0cbd 16       		.uleb128 0x16
 4588 0cbe 6B000000 		.4byte	0x6b
 4589 0cc2 CD0C0000 		.4byte	0xccd
 4590 0cc6 17       		.uleb128 0x17
 4591 0cc7 B7000000 		.4byte	0xb7
 4592 0ccb 03       		.byte	0x3
 4593 0ccc 00       		.byte	0
 4594 0ccd 1A       		.uleb128 0x1a
 4595 0cce 6B010000 		.4byte	.LASF118
 4596 0cd2 01       		.byte	0x1
 4597 0cd3 65       		.byte	0x65
 4598 0cd4 BD0C0000 		.4byte	0xcbd
 4599 0cd8 05       		.uleb128 0x5
 4600 0cd9 03       		.byte	0x3
 4601 0cda 10000000 		.4byte	CapSense_posFiltersData
 4602 0cde 16       		.uleb128 0x16
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 132


 4603 0cdf 76000000 		.4byte	0x76
 4604 0ce3 EE0C0000 		.4byte	0xcee
 4605 0ce7 17       		.uleb128 0x17
 4606 0ce8 B7000000 		.4byte	0xb7
 4607 0cec 04       		.byte	0x4
 4608 0ced 00       		.byte	0
 4609 0cee 1B       		.uleb128 0x1b
 4610 0cef 7B060000 		.4byte	.LASF119
 4611 0cf3 01       		.byte	0x1
 4612 0cf4 2C       		.byte	0x2c
 4613 0cf5 DE0C0000 		.4byte	0xcde
 4614 0cf9 1B       		.uleb128 0x1b
 4615 0cfa 62030000 		.4byte	.LASF120
 4616 0cfe 01       		.byte	0x1
 4617 0cff 2D       		.byte	0x2d
 4618 0d00 64070000 		.4byte	0x764
 4619 0d04 16       		.uleb128 0x16
 4620 0d05 6B000000 		.4byte	0x6b
 4621 0d09 140D0000 		.4byte	0xd14
 4622 0d0d 17       		.uleb128 0x17
 4623 0d0e B7000000 		.4byte	0xb7
 4624 0d12 04       		.byte	0x4
 4625 0d13 00       		.byte	0
 4626 0d14 1B       		.uleb128 0x1b
 4627 0d15 CD030000 		.4byte	.LASF121
 4628 0d19 01       		.byte	0x1
 4629 0d1a 2E       		.byte	0x2e
 4630 0d1b 1F0D0000 		.4byte	0xd1f
 4631 0d1f 08       		.uleb128 0x8
 4632 0d20 040D0000 		.4byte	0xd04
 4633 0d24 1C       		.uleb128 0x1c
 4634 0d25 9A080000 		.4byte	.LASF122
 4635 0d29 01       		.byte	0x1
 4636 0d2a 34       		.byte	0x34
 4637 0d2b DE0C0000 		.4byte	0xcde
 4638 0d2f 05       		.uleb128 0x5
 4639 0d30 03       		.byte	0x3
 4640 0d31 00000000 		.4byte	CapSense_sensorBaseline
 4641 0d35 1C       		.uleb128 0x1c
 4642 0d36 00000000 		.4byte	.LASF123
 4643 0d3a 01       		.byte	0x1
 4644 0d3b 35       		.byte	0x35
 4645 0d3c 040D0000 		.4byte	0xd04
 4646 0d40 05       		.uleb128 0x5
 4647 0d41 03       		.byte	0x3
 4648 0d42 00000000 		.4byte	CapSense_sensorBaselineLow
 4649 0d46 1C       		.uleb128 0x1c
 4650 0d47 91020000 		.4byte	.LASF124
 4651 0d4b 01       		.byte	0x1
 4652 0d4c 36       		.byte	0x36
 4653 0d4d 040D0000 		.4byte	0xd04
 4654 0d51 05       		.uleb128 0x5
 4655 0d52 03       		.byte	0x3
 4656 0d53 00000000 		.4byte	CapSense_sensorSignal
 4657 0d57 1C       		.uleb128 0x1c
 4658 0d58 F60A0000 		.4byte	.LASF125
 4659 0d5c 01       		.byte	0x1
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 133


 4660 0d5d 37       		.byte	0x37
 4661 0d5e 64070000 		.4byte	0x764
 4662 0d62 05       		.uleb128 0x5
 4663 0d63 03       		.byte	0x3
 4664 0d64 00000000 		.4byte	CapSense_sensorOnMask
 4665 0d68 1C       		.uleb128 0x1c
 4666 0d69 48000000 		.4byte	.LASF126
 4667 0d6d 01       		.byte	0x1
 4668 0d6e 39       		.byte	0x39
 4669 0d6f 040D0000 		.4byte	0xd04
 4670 0d73 05       		.uleb128 0x5
 4671 0d74 03       		.byte	0x3
 4672 0d75 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4673 0d79 1C       		.uleb128 0x1c
 4674 0d7a 59080000 		.4byte	.LASF127
 4675 0d7e 01       		.byte	0x1
 4676 0d7f 3A       		.byte	0x3a
 4677 0d80 040D0000 		.4byte	0xd04
 4678 0d84 05       		.uleb128 0x5
 4679 0d85 03       		.byte	0x3
 4680 0d86 00000000 		.4byte	CapSense_lowBaselineReset
 4681 0d8a 1C       		.uleb128 0x1c
 4682 0d8b 9B030000 		.4byte	.LASF128
 4683 0d8f 01       		.byte	0x1
 4684 0d90 49       		.byte	0x49
 4685 0d91 64070000 		.4byte	0x764
 4686 0d95 05       		.uleb128 0x5
 4687 0d96 03       		.byte	0x3
 4688 0d97 00000000 		.4byte	CapSense_fingerThreshold
 4689 0d9b 1C       		.uleb128 0x1c
 4690 0d9c 2D090000 		.4byte	.LASF129
 4691 0da0 01       		.byte	0x1
 4692 0da1 4B       		.byte	0x4b
 4693 0da2 64070000 		.4byte	0x764
 4694 0da6 05       		.uleb128 0x5
 4695 0da7 03       		.byte	0x3
 4696 0da8 00000000 		.4byte	CapSense_noiseThreshold
 4697 0dac 1C       		.uleb128 0x1c
 4698 0dad E2040000 		.4byte	.LASF130
 4699 0db1 01       		.byte	0x1
 4700 0db2 4D       		.byte	0x4d
 4701 0db3 64070000 		.4byte	0x764
 4702 0db7 05       		.uleb128 0x5
 4703 0db8 03       		.byte	0x3
 4704 0db9 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4705 0dbd 1C       		.uleb128 0x1c
 4706 0dbe EC020000 		.4byte	.LASF131
 4707 0dc2 01       		.byte	0x1
 4708 0dc3 4F       		.byte	0x4f
 4709 0dc4 64070000 		.4byte	0x764
 4710 0dc8 05       		.uleb128 0x5
 4711 0dc9 03       		.byte	0x3
 4712 0dca 00000000 		.4byte	CapSense_hysteresis
 4713 0dce 1C       		.uleb128 0x1c
 4714 0dcf 83010000 		.4byte	.LASF132
 4715 0dd3 01       		.byte	0x1
 4716 0dd4 51       		.byte	0x51
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 134


 4717 0dd5 64070000 		.4byte	0x764
 4718 0dd9 05       		.uleb128 0x5
 4719 0dda 03       		.byte	0x3
 4720 0ddb 00000000 		.4byte	CapSense_debounce
 4721 0ddf 1C       		.uleb128 0x1c
 4722 0de0 F8090000 		.4byte	.LASF133
 4723 0de4 01       		.byte	0x1
 4724 0de5 55       		.byte	0x55
 4725 0de6 F00D0000 		.4byte	0xdf0
 4726 0dea 05       		.uleb128 0x5
 4727 0deb 03       		.byte	0x3
 4728 0dec 00000000 		.4byte	CapSense_rawDataIndex
 4729 0df0 08       		.uleb128 0x8
 4730 0df1 64070000 		.4byte	0x764
 4731 0df5 1C       		.uleb128 0x1c
 4732 0df6 C9040000 		.4byte	.LASF134
 4733 0dfa 01       		.byte	0x1
 4734 0dfb 59       		.byte	0x59
 4735 0dfc 060E0000 		.4byte	0xe06
 4736 0e00 05       		.uleb128 0x5
 4737 0e01 03       		.byte	0x3
 4738 0e02 00000000 		.4byte	CapSense_numberOfSensors
 4739 0e06 08       		.uleb128 0x8
 4740 0e07 64070000 		.4byte	0x764
 4741 0e0b 1C       		.uleb128 0x1c
 4742 0e0c D50A0000 		.4byte	.LASF135
 4743 0e10 01       		.byte	0x1
 4744 0e11 27       		.byte	0x27
 4745 0e12 DE0C0000 		.4byte	0xcde
 4746 0e16 05       		.uleb128 0x5
 4747 0e17 03       		.byte	0x3
 4748 0e18 00000000 		.4byte	CapSense_rawFilterData1
 4749 0e1c 1B       		.uleb128 0x1b
 4750 0e1d EF000000 		.4byte	.LASF136
 4751 0e21 01       		.byte	0x1
 4752 0e22 41       		.byte	0x41
 4753 0e23 48020000 		.4byte	0x248
 4754 0e27 1C       		.uleb128 0x1c
 4755 0e28 D4090000 		.4byte	.LASF137
 4756 0e2c 01       		.byte	0x1
 4757 0e2d 45       		.byte	0x45
 4758 0e2e 6B000000 		.4byte	0x6b
 4759 0e32 05       		.uleb128 0x5
 4760 0e33 03       		.byte	0x3
 4761 0e34 00000000 		.4byte	CapSense_enableRawFilters
 4762 0e38 00       		.byte	0
 4763              		.section	.debug_abbrev,"",%progbits
 4764              	.Ldebug_abbrev0:
 4765 0000 01       		.uleb128 0x1
 4766 0001 11       		.uleb128 0x11
 4767 0002 01       		.byte	0x1
 4768 0003 25       		.uleb128 0x25
 4769 0004 0E       		.uleb128 0xe
 4770 0005 13       		.uleb128 0x13
 4771 0006 0B       		.uleb128 0xb
 4772 0007 03       		.uleb128 0x3
 4773 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 135


 4774 0009 1B       		.uleb128 0x1b
 4775 000a 0E       		.uleb128 0xe
 4776 000b 55       		.uleb128 0x55
 4777 000c 17       		.uleb128 0x17
 4778 000d 11       		.uleb128 0x11
 4779 000e 01       		.uleb128 0x1
 4780 000f 10       		.uleb128 0x10
 4781 0010 17       		.uleb128 0x17
 4782 0011 00       		.byte	0
 4783 0012 00       		.byte	0
 4784 0013 02       		.uleb128 0x2
 4785 0014 24       		.uleb128 0x24
 4786 0015 00       		.byte	0
 4787 0016 0B       		.uleb128 0xb
 4788 0017 0B       		.uleb128 0xb
 4789 0018 3E       		.uleb128 0x3e
 4790 0019 0B       		.uleb128 0xb
 4791 001a 03       		.uleb128 0x3
 4792 001b 0E       		.uleb128 0xe
 4793 001c 00       		.byte	0
 4794 001d 00       		.byte	0
 4795 001e 03       		.uleb128 0x3
 4796 001f 24       		.uleb128 0x24
 4797 0020 00       		.byte	0
 4798 0021 0B       		.uleb128 0xb
 4799 0022 0B       		.uleb128 0xb
 4800 0023 3E       		.uleb128 0x3e
 4801 0024 0B       		.uleb128 0xb
 4802 0025 03       		.uleb128 0x3
 4803 0026 08       		.uleb128 0x8
 4804 0027 00       		.byte	0
 4805 0028 00       		.byte	0
 4806 0029 04       		.uleb128 0x4
 4807 002a 16       		.uleb128 0x16
 4808 002b 00       		.byte	0
 4809 002c 03       		.uleb128 0x3
 4810 002d 0E       		.uleb128 0xe
 4811 002e 3A       		.uleb128 0x3a
 4812 002f 0B       		.uleb128 0xb
 4813 0030 3B       		.uleb128 0x3b
 4814 0031 0B       		.uleb128 0xb
 4815 0032 49       		.uleb128 0x49
 4816 0033 13       		.uleb128 0x13
 4817 0034 00       		.byte	0
 4818 0035 00       		.byte	0
 4819 0036 05       		.uleb128 0x5
 4820 0037 13       		.uleb128 0x13
 4821 0038 01       		.byte	0x1
 4822 0039 0B       		.uleb128 0xb
 4823 003a 0B       		.uleb128 0xb
 4824 003b 3A       		.uleb128 0x3a
 4825 003c 0B       		.uleb128 0xb
 4826 003d 3B       		.uleb128 0x3b
 4827 003e 0B       		.uleb128 0xb
 4828 003f 01       		.uleb128 0x1
 4829 0040 13       		.uleb128 0x13
 4830 0041 00       		.byte	0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 136


 4831 0042 00       		.byte	0
 4832 0043 06       		.uleb128 0x6
 4833 0044 0D       		.uleb128 0xd
 4834 0045 00       		.byte	0
 4835 0046 03       		.uleb128 0x3
 4836 0047 0E       		.uleb128 0xe
 4837 0048 3A       		.uleb128 0x3a
 4838 0049 0B       		.uleb128 0xb
 4839 004a 3B       		.uleb128 0x3b
 4840 004b 0B       		.uleb128 0xb
 4841 004c 49       		.uleb128 0x49
 4842 004d 13       		.uleb128 0x13
 4843 004e 38       		.uleb128 0x38
 4844 004f 0B       		.uleb128 0xb
 4845 0050 00       		.byte	0
 4846 0051 00       		.byte	0
 4847 0052 07       		.uleb128 0x7
 4848 0053 0F       		.uleb128 0xf
 4849 0054 00       		.byte	0
 4850 0055 0B       		.uleb128 0xb
 4851 0056 0B       		.uleb128 0xb
 4852 0057 49       		.uleb128 0x49
 4853 0058 13       		.uleb128 0x13
 4854 0059 00       		.byte	0
 4855 005a 00       		.byte	0
 4856 005b 08       		.uleb128 0x8
 4857 005c 26       		.uleb128 0x26
 4858 005d 00       		.byte	0
 4859 005e 49       		.uleb128 0x49
 4860 005f 13       		.uleb128 0x13
 4861 0060 00       		.byte	0
 4862 0061 00       		.byte	0
 4863 0062 09       		.uleb128 0x9
 4864 0063 15       		.uleb128 0x15
 4865 0064 01       		.byte	0x1
 4866 0065 27       		.uleb128 0x27
 4867 0066 19       		.uleb128 0x19
 4868 0067 49       		.uleb128 0x49
 4869 0068 13       		.uleb128 0x13
 4870 0069 01       		.uleb128 0x1
 4871 006a 13       		.uleb128 0x13
 4872 006b 00       		.byte	0
 4873 006c 00       		.byte	0
 4874 006d 0A       		.uleb128 0xa
 4875 006e 05       		.uleb128 0x5
 4876 006f 00       		.byte	0
 4877 0070 49       		.uleb128 0x49
 4878 0071 13       		.uleb128 0x13
 4879 0072 00       		.byte	0
 4880 0073 00       		.byte	0
 4881 0074 0B       		.uleb128 0xb
 4882 0075 15       		.uleb128 0x15
 4883 0076 01       		.byte	0x1
 4884 0077 27       		.uleb128 0x27
 4885 0078 19       		.uleb128 0x19
 4886 0079 01       		.uleb128 0x1
 4887 007a 13       		.uleb128 0x13
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 137


 4888 007b 00       		.byte	0
 4889 007c 00       		.byte	0
 4890 007d 0C       		.uleb128 0xc
 4891 007e 2E       		.uleb128 0x2e
 4892 007f 01       		.byte	0x1
 4893 0080 3F       		.uleb128 0x3f
 4894 0081 19       		.uleb128 0x19
 4895 0082 03       		.uleb128 0x3
 4896 0083 0E       		.uleb128 0xe
 4897 0084 3A       		.uleb128 0x3a
 4898 0085 0B       		.uleb128 0xb
 4899 0086 3B       		.uleb128 0x3b
 4900 0087 0B       		.uleb128 0xb
 4901 0088 27       		.uleb128 0x27
 4902 0089 19       		.uleb128 0x19
 4903 008a 11       		.uleb128 0x11
 4904 008b 01       		.uleb128 0x1
 4905 008c 12       		.uleb128 0x12
 4906 008d 06       		.uleb128 0x6
 4907 008e 40       		.uleb128 0x40
 4908 008f 18       		.uleb128 0x18
 4909 0090 9742     		.uleb128 0x2117
 4910 0092 19       		.uleb128 0x19
 4911 0093 01       		.uleb128 0x1
 4912 0094 13       		.uleb128 0x13
 4913 0095 00       		.byte	0
 4914 0096 00       		.byte	0
 4915 0097 0D       		.uleb128 0xd
 4916 0098 05       		.uleb128 0x5
 4917 0099 00       		.byte	0
 4918 009a 03       		.uleb128 0x3
 4919 009b 0E       		.uleb128 0xe
 4920 009c 3A       		.uleb128 0x3a
 4921 009d 0B       		.uleb128 0xb
 4922 009e 3B       		.uleb128 0x3b
 4923 009f 0B       		.uleb128 0xb
 4924 00a0 49       		.uleb128 0x49
 4925 00a1 13       		.uleb128 0x13
 4926 00a2 02       		.uleb128 0x2
 4927 00a3 18       		.uleb128 0x18
 4928 00a4 00       		.byte	0
 4929 00a5 00       		.byte	0
 4930 00a6 0E       		.uleb128 0xe
 4931 00a7 2E       		.uleb128 0x2e
 4932 00a8 01       		.byte	0x1
 4933 00a9 3F       		.uleb128 0x3f
 4934 00aa 19       		.uleb128 0x19
 4935 00ab 03       		.uleb128 0x3
 4936 00ac 0E       		.uleb128 0xe
 4937 00ad 3A       		.uleb128 0x3a
 4938 00ae 0B       		.uleb128 0xb
 4939 00af 3B       		.uleb128 0x3b
 4940 00b0 0B       		.uleb128 0xb
 4941 00b1 27       		.uleb128 0x27
 4942 00b2 19       		.uleb128 0x19
 4943 00b3 11       		.uleb128 0x11
 4944 00b4 01       		.uleb128 0x1
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 138


 4945 00b5 12       		.uleb128 0x12
 4946 00b6 06       		.uleb128 0x6
 4947 00b7 40       		.uleb128 0x40
 4948 00b8 18       		.uleb128 0x18
 4949 00b9 9642     		.uleb128 0x2116
 4950 00bb 19       		.uleb128 0x19
 4951 00bc 01       		.uleb128 0x1
 4952 00bd 13       		.uleb128 0x13
 4953 00be 00       		.byte	0
 4954 00bf 00       		.byte	0
 4955 00c0 0F       		.uleb128 0xf
 4956 00c1 34       		.uleb128 0x34
 4957 00c2 00       		.byte	0
 4958 00c3 03       		.uleb128 0x3
 4959 00c4 08       		.uleb128 0x8
 4960 00c5 3A       		.uleb128 0x3a
 4961 00c6 0B       		.uleb128 0xb
 4962 00c7 3B       		.uleb128 0x3b
 4963 00c8 05       		.uleb128 0x5
 4964 00c9 49       		.uleb128 0x49
 4965 00ca 13       		.uleb128 0x13
 4966 00cb 02       		.uleb128 0x2
 4967 00cc 18       		.uleb128 0x18
 4968 00cd 00       		.byte	0
 4969 00ce 00       		.byte	0
 4970 00cf 10       		.uleb128 0x10
 4971 00d0 2E       		.uleb128 0x2e
 4972 00d1 01       		.byte	0x1
 4973 00d2 3F       		.uleb128 0x3f
 4974 00d3 19       		.uleb128 0x19
 4975 00d4 03       		.uleb128 0x3
 4976 00d5 0E       		.uleb128 0xe
 4977 00d6 3A       		.uleb128 0x3a
 4978 00d7 0B       		.uleb128 0xb
 4979 00d8 3B       		.uleb128 0x3b
 4980 00d9 05       		.uleb128 0x5
 4981 00da 27       		.uleb128 0x27
 4982 00db 19       		.uleb128 0x19
 4983 00dc 11       		.uleb128 0x11
 4984 00dd 01       		.uleb128 0x1
 4985 00de 12       		.uleb128 0x12
 4986 00df 06       		.uleb128 0x6
 4987 00e0 40       		.uleb128 0x40
 4988 00e1 18       		.uleb128 0x18
 4989 00e2 9642     		.uleb128 0x2116
 4990 00e4 19       		.uleb128 0x19
 4991 00e5 01       		.uleb128 0x1
 4992 00e6 13       		.uleb128 0x13
 4993 00e7 00       		.byte	0
 4994 00e8 00       		.byte	0
 4995 00e9 11       		.uleb128 0x11
 4996 00ea 34       		.uleb128 0x34
 4997 00eb 00       		.byte	0
 4998 00ec 03       		.uleb128 0x3
 4999 00ed 0E       		.uleb128 0xe
 5000 00ee 3A       		.uleb128 0x3a
 5001 00ef 0B       		.uleb128 0xb
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 139


 5002 00f0 3B       		.uleb128 0x3b
 5003 00f1 05       		.uleb128 0x5
 5004 00f2 49       		.uleb128 0x49
 5005 00f3 13       		.uleb128 0x13
 5006 00f4 02       		.uleb128 0x2
 5007 00f5 18       		.uleb128 0x18
 5008 00f6 00       		.byte	0
 5009 00f7 00       		.byte	0
 5010 00f8 12       		.uleb128 0x12
 5011 00f9 05       		.uleb128 0x5
 5012 00fa 00       		.byte	0
 5013 00fb 03       		.uleb128 0x3
 5014 00fc 0E       		.uleb128 0xe
 5015 00fd 3A       		.uleb128 0x3a
 5016 00fe 0B       		.uleb128 0xb
 5017 00ff 3B       		.uleb128 0x3b
 5018 0100 05       		.uleb128 0x5
 5019 0101 49       		.uleb128 0x49
 5020 0102 13       		.uleb128 0x13
 5021 0103 02       		.uleb128 0x2
 5022 0104 18       		.uleb128 0x18
 5023 0105 00       		.byte	0
 5024 0106 00       		.byte	0
 5025 0107 13       		.uleb128 0x13
 5026 0108 2E       		.uleb128 0x2e
 5027 0109 01       		.byte	0x1
 5028 010a 3F       		.uleb128 0x3f
 5029 010b 19       		.uleb128 0x19
 5030 010c 03       		.uleb128 0x3
 5031 010d 0E       		.uleb128 0xe
 5032 010e 3A       		.uleb128 0x3a
 5033 010f 0B       		.uleb128 0xb
 5034 0110 3B       		.uleb128 0x3b
 5035 0111 05       		.uleb128 0x5
 5036 0112 27       		.uleb128 0x27
 5037 0113 19       		.uleb128 0x19
 5038 0114 49       		.uleb128 0x49
 5039 0115 13       		.uleb128 0x13
 5040 0116 11       		.uleb128 0x11
 5041 0117 01       		.uleb128 0x1
 5042 0118 12       		.uleb128 0x12
 5043 0119 06       		.uleb128 0x6
 5044 011a 40       		.uleb128 0x40
 5045 011b 18       		.uleb128 0x18
 5046 011c 9742     		.uleb128 0x2117
 5047 011e 19       		.uleb128 0x19
 5048 011f 01       		.uleb128 0x1
 5049 0120 13       		.uleb128 0x13
 5050 0121 00       		.byte	0
 5051 0122 00       		.byte	0
 5052 0123 14       		.uleb128 0x14
 5053 0124 2E       		.uleb128 0x2e
 5054 0125 01       		.byte	0x1
 5055 0126 3F       		.uleb128 0x3f
 5056 0127 19       		.uleb128 0x19
 5057 0128 03       		.uleb128 0x3
 5058 0129 0E       		.uleb128 0xe
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 140


 5059 012a 3A       		.uleb128 0x3a
 5060 012b 0B       		.uleb128 0xb
 5061 012c 3B       		.uleb128 0x3b
 5062 012d 05       		.uleb128 0x5
 5063 012e 27       		.uleb128 0x27
 5064 012f 19       		.uleb128 0x19
 5065 0130 11       		.uleb128 0x11
 5066 0131 01       		.uleb128 0x1
 5067 0132 12       		.uleb128 0x12
 5068 0133 06       		.uleb128 0x6
 5069 0134 40       		.uleb128 0x40
 5070 0135 18       		.uleb128 0x18
 5071 0136 9742     		.uleb128 0x2117
 5072 0138 19       		.uleb128 0x19
 5073 0139 01       		.uleb128 0x1
 5074 013a 13       		.uleb128 0x13
 5075 013b 00       		.byte	0
 5076 013c 00       		.byte	0
 5077 013d 15       		.uleb128 0x15
 5078 013e 2E       		.uleb128 0x2e
 5079 013f 01       		.byte	0x1
 5080 0140 3F       		.uleb128 0x3f
 5081 0141 19       		.uleb128 0x19
 5082 0142 03       		.uleb128 0x3
 5083 0143 0E       		.uleb128 0xe
 5084 0144 3A       		.uleb128 0x3a
 5085 0145 0B       		.uleb128 0xb
 5086 0146 3B       		.uleb128 0x3b
 5087 0147 05       		.uleb128 0x5
 5088 0148 27       		.uleb128 0x27
 5089 0149 19       		.uleb128 0x19
 5090 014a 49       		.uleb128 0x49
 5091 014b 13       		.uleb128 0x13
 5092 014c 11       		.uleb128 0x11
 5093 014d 01       		.uleb128 0x1
 5094 014e 12       		.uleb128 0x12
 5095 014f 06       		.uleb128 0x6
 5096 0150 40       		.uleb128 0x40
 5097 0151 18       		.uleb128 0x18
 5098 0152 9642     		.uleb128 0x2116
 5099 0154 19       		.uleb128 0x19
 5100 0155 01       		.uleb128 0x1
 5101 0156 13       		.uleb128 0x13
 5102 0157 00       		.byte	0
 5103 0158 00       		.byte	0
 5104 0159 16       		.uleb128 0x16
 5105 015a 01       		.uleb128 0x1
 5106 015b 01       		.byte	0x1
 5107 015c 49       		.uleb128 0x49
 5108 015d 13       		.uleb128 0x13
 5109 015e 01       		.uleb128 0x1
 5110 015f 13       		.uleb128 0x13
 5111 0160 00       		.byte	0
 5112 0161 00       		.byte	0
 5113 0162 17       		.uleb128 0x17
 5114 0163 21       		.uleb128 0x21
 5115 0164 00       		.byte	0
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 141


 5116 0165 49       		.uleb128 0x49
 5117 0166 13       		.uleb128 0x13
 5118 0167 2F       		.uleb128 0x2f
 5119 0168 0B       		.uleb128 0xb
 5120 0169 00       		.byte	0
 5121 016a 00       		.byte	0
 5122 016b 18       		.uleb128 0x18
 5123 016c 05       		.uleb128 0x5
 5124 016d 00       		.byte	0
 5125 016e 03       		.uleb128 0x3
 5126 016f 08       		.uleb128 0x8
 5127 0170 3A       		.uleb128 0x3a
 5128 0171 0B       		.uleb128 0xb
 5129 0172 3B       		.uleb128 0x3b
 5130 0173 05       		.uleb128 0x5
 5131 0174 49       		.uleb128 0x49
 5132 0175 13       		.uleb128 0x13
 5133 0176 02       		.uleb128 0x2
 5134 0177 18       		.uleb128 0x18
 5135 0178 00       		.byte	0
 5136 0179 00       		.byte	0
 5137 017a 19       		.uleb128 0x19
 5138 017b 2E       		.uleb128 0x2e
 5139 017c 00       		.byte	0
 5140 017d 3F       		.uleb128 0x3f
 5141 017e 19       		.uleb128 0x19
 5142 017f 03       		.uleb128 0x3
 5143 0180 0E       		.uleb128 0xe
 5144 0181 3A       		.uleb128 0x3a
 5145 0182 0B       		.uleb128 0xb
 5146 0183 3B       		.uleb128 0x3b
 5147 0184 05       		.uleb128 0x5
 5148 0185 27       		.uleb128 0x27
 5149 0186 19       		.uleb128 0x19
 5150 0187 11       		.uleb128 0x11
 5151 0188 01       		.uleb128 0x1
 5152 0189 12       		.uleb128 0x12
 5153 018a 06       		.uleb128 0x6
 5154 018b 40       		.uleb128 0x40
 5155 018c 18       		.uleb128 0x18
 5156 018d 9742     		.uleb128 0x2117
 5157 018f 19       		.uleb128 0x19
 5158 0190 00       		.byte	0
 5159 0191 00       		.byte	0
 5160 0192 1A       		.uleb128 0x1a
 5161 0193 34       		.uleb128 0x34
 5162 0194 00       		.byte	0
 5163 0195 03       		.uleb128 0x3
 5164 0196 0E       		.uleb128 0xe
 5165 0197 3A       		.uleb128 0x3a
 5166 0198 0B       		.uleb128 0xb
 5167 0199 3B       		.uleb128 0x3b
 5168 019a 0B       		.uleb128 0xb
 5169 019b 49       		.uleb128 0x49
 5170 019c 13       		.uleb128 0x13
 5171 019d 02       		.uleb128 0x2
 5172 019e 18       		.uleb128 0x18
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 142


 5173 019f 00       		.byte	0
 5174 01a0 00       		.byte	0
 5175 01a1 1B       		.uleb128 0x1b
 5176 01a2 34       		.uleb128 0x34
 5177 01a3 00       		.byte	0
 5178 01a4 03       		.uleb128 0x3
 5179 01a5 0E       		.uleb128 0xe
 5180 01a6 3A       		.uleb128 0x3a
 5181 01a7 0B       		.uleb128 0xb
 5182 01a8 3B       		.uleb128 0x3b
 5183 01a9 0B       		.uleb128 0xb
 5184 01aa 49       		.uleb128 0x49
 5185 01ab 13       		.uleb128 0x13
 5186 01ac 3F       		.uleb128 0x3f
 5187 01ad 19       		.uleb128 0x19
 5188 01ae 3C       		.uleb128 0x3c
 5189 01af 19       		.uleb128 0x19
 5190 01b0 00       		.byte	0
 5191 01b1 00       		.byte	0
 5192 01b2 1C       		.uleb128 0x1c
 5193 01b3 34       		.uleb128 0x34
 5194 01b4 00       		.byte	0
 5195 01b5 03       		.uleb128 0x3
 5196 01b6 0E       		.uleb128 0xe
 5197 01b7 3A       		.uleb128 0x3a
 5198 01b8 0B       		.uleb128 0xb
 5199 01b9 3B       		.uleb128 0x3b
 5200 01ba 0B       		.uleb128 0xb
 5201 01bb 49       		.uleb128 0x49
 5202 01bc 13       		.uleb128 0x13
 5203 01bd 3F       		.uleb128 0x3f
 5204 01be 19       		.uleb128 0x19
 5205 01bf 02       		.uleb128 0x2
 5206 01c0 18       		.uleb128 0x18
 5207 01c1 00       		.byte	0
 5208 01c2 00       		.byte	0
 5209 01c3 00       		.byte	0
 5210              		.section	.debug_aranges,"",%progbits
 5211 0000 4C010000 		.4byte	0x14c
 5212 0004 0200     		.2byte	0x2
 5213 0006 00000000 		.4byte	.Ldebug_info0
 5214 000a 04       		.byte	0x4
 5215 000b 00       		.byte	0
 5216 000c 0000     		.2byte	0
 5217 000e 0000     		.2byte	0
 5218 0010 00000000 		.4byte	.LFB35
 5219 0014 58000000 		.4byte	.LFE35-.LFB35
 5220 0018 00000000 		.4byte	.LFB36
 5221 001c 2A000000 		.4byte	.LFE36-.LFB36
 5222 0020 00000000 		.4byte	.LFB37
 5223 0024 26000000 		.4byte	.LFE37-.LFB37
 5224 0028 00000000 		.4byte	.LFB38
 5225 002c 50000000 		.4byte	.LFE38-.LFB38
 5226 0030 00000000 		.4byte	.LFB39
 5227 0034 28020000 		.4byte	.LFE39-.LFB39
 5228 0038 00000000 		.4byte	.LFB40
 5229 003c 1E000000 		.4byte	.LFE40-.LFB40
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 143


 5230 0040 00000000 		.4byte	.LFB41
 5231 0044 40000000 		.4byte	.LFE41-.LFB41
 5232 0048 00000000 		.4byte	.LFB42
 5233 004c 58000000 		.4byte	.LFE42-.LFB42
 5234 0050 00000000 		.4byte	.LFB43
 5235 0054 1C000000 		.4byte	.LFE43-.LFB43
 5236 0058 00000000 		.4byte	.LFB44
 5237 005c 24000000 		.4byte	.LFE44-.LFB44
 5238 0060 00000000 		.4byte	.LFB45
 5239 0064 1C000000 		.4byte	.LFE45-.LFB45
 5240 0068 00000000 		.4byte	.LFB46
 5241 006c 24000000 		.4byte	.LFE46-.LFB46
 5242 0070 00000000 		.4byte	.LFB47
 5243 0074 1C000000 		.4byte	.LFE47-.LFB47
 5244 0078 00000000 		.4byte	.LFB48
 5245 007c 1C000000 		.4byte	.LFE48-.LFB48
 5246 0080 00000000 		.4byte	.LFB49
 5247 0084 1C000000 		.4byte	.LFE49-.LFB49
 5248 0088 00000000 		.4byte	.LFB50
 5249 008c 1C000000 		.4byte	.LFE50-.LFB50
 5250 0090 00000000 		.4byte	.LFB51
 5251 0094 24000000 		.4byte	.LFE51-.LFB51
 5252 0098 00000000 		.4byte	.LFB52
 5253 009c 24000000 		.4byte	.LFE52-.LFB52
 5254 00a0 00000000 		.4byte	.LFB53
 5255 00a4 24000000 		.4byte	.LFE53-.LFB53
 5256 00a8 00000000 		.4byte	.LFB54
 5257 00ac 24000000 		.4byte	.LFE54-.LFB54
 5258 00b0 00000000 		.4byte	.LFB55
 5259 00b4 24000000 		.4byte	.LFE55-.LFB55
 5260 00b8 00000000 		.4byte	.LFB56
 5261 00bc 24000000 		.4byte	.LFE56-.LFB56
 5262 00c0 00000000 		.4byte	.LFB57
 5263 00c4 40010000 		.4byte	.LFE57-.LFB57
 5264 00c8 00000000 		.4byte	.LFB58
 5265 00cc 44000000 		.4byte	.LFE58-.LFB58
 5266 00d0 00000000 		.4byte	.LFB59
 5267 00d4 38000000 		.4byte	.LFE59-.LFB59
 5268 00d8 00000000 		.4byte	.LFB60
 5269 00dc 5C000000 		.4byte	.LFE60-.LFB60
 5270 00e0 00000000 		.4byte	.LFB61
 5271 00e4 5C000000 		.4byte	.LFE61-.LFB61
 5272 00e8 00000000 		.4byte	.LFB62
 5273 00ec AC000000 		.4byte	.LFE62-.LFB62
 5274 00f0 00000000 		.4byte	.LFB63
 5275 00f4 94010000 		.4byte	.LFE63-.LFB63
 5276 00f8 00000000 		.4byte	.LFB64
 5277 00fc BC010000 		.4byte	.LFE64-.LFB64
 5278 0100 00000000 		.4byte	.LFB65
 5279 0104 98000000 		.4byte	.LFE65-.LFB65
 5280 0108 00000000 		.4byte	.LFB66
 5281 010c 6A000000 		.4byte	.LFE66-.LFB66
 5282 0110 00000000 		.4byte	.LFB67
 5283 0114 3A000000 		.4byte	.LFE67-.LFB67
 5284 0118 00000000 		.4byte	.LFB68
 5285 011c 3C000000 		.4byte	.LFE68-.LFB68
 5286 0120 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 144


 5287 0124 1C000000 		.4byte	.LFE69-.LFB69
 5288 0128 00000000 		.4byte	.LFB70
 5289 012c 1C000000 		.4byte	.LFE70-.LFB70
 5290 0130 00000000 		.4byte	.LFB71
 5291 0134 1C000000 		.4byte	.LFE71-.LFB71
 5292 0138 00000000 		.4byte	.LFB72
 5293 013c 14000000 		.4byte	.LFE72-.LFB72
 5294 0140 00000000 		.4byte	.LFB73
 5295 0144 14000000 		.4byte	.LFE73-.LFB73
 5296 0148 00000000 		.4byte	0
 5297 014c 00000000 		.4byte	0
 5298              		.section	.debug_ranges,"",%progbits
 5299              	.Ldebug_ranges0:
 5300 0000 00000000 		.4byte	.LFB35
 5301 0004 58000000 		.4byte	.LFE35
 5302 0008 00000000 		.4byte	.LFB36
 5303 000c 2A000000 		.4byte	.LFE36
 5304 0010 00000000 		.4byte	.LFB37
 5305 0014 26000000 		.4byte	.LFE37
 5306 0018 00000000 		.4byte	.LFB38
 5307 001c 50000000 		.4byte	.LFE38
 5308 0020 00000000 		.4byte	.LFB39
 5309 0024 28020000 		.4byte	.LFE39
 5310 0028 00000000 		.4byte	.LFB40
 5311 002c 1E000000 		.4byte	.LFE40
 5312 0030 00000000 		.4byte	.LFB41
 5313 0034 40000000 		.4byte	.LFE41
 5314 0038 00000000 		.4byte	.LFB42
 5315 003c 58000000 		.4byte	.LFE42
 5316 0040 00000000 		.4byte	.LFB43
 5317 0044 1C000000 		.4byte	.LFE43
 5318 0048 00000000 		.4byte	.LFB44
 5319 004c 24000000 		.4byte	.LFE44
 5320 0050 00000000 		.4byte	.LFB45
 5321 0054 1C000000 		.4byte	.LFE45
 5322 0058 00000000 		.4byte	.LFB46
 5323 005c 24000000 		.4byte	.LFE46
 5324 0060 00000000 		.4byte	.LFB47
 5325 0064 1C000000 		.4byte	.LFE47
 5326 0068 00000000 		.4byte	.LFB48
 5327 006c 1C000000 		.4byte	.LFE48
 5328 0070 00000000 		.4byte	.LFB49
 5329 0074 1C000000 		.4byte	.LFE49
 5330 0078 00000000 		.4byte	.LFB50
 5331 007c 1C000000 		.4byte	.LFE50
 5332 0080 00000000 		.4byte	.LFB51
 5333 0084 24000000 		.4byte	.LFE51
 5334 0088 00000000 		.4byte	.LFB52
 5335 008c 24000000 		.4byte	.LFE52
 5336 0090 00000000 		.4byte	.LFB53
 5337 0094 24000000 		.4byte	.LFE53
 5338 0098 00000000 		.4byte	.LFB54
 5339 009c 24000000 		.4byte	.LFE54
 5340 00a0 00000000 		.4byte	.LFB55
 5341 00a4 24000000 		.4byte	.LFE55
 5342 00a8 00000000 		.4byte	.LFB56
 5343 00ac 24000000 		.4byte	.LFE56
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 145


 5344 00b0 00000000 		.4byte	.LFB57
 5345 00b4 40010000 		.4byte	.LFE57
 5346 00b8 00000000 		.4byte	.LFB58
 5347 00bc 44000000 		.4byte	.LFE58
 5348 00c0 00000000 		.4byte	.LFB59
 5349 00c4 38000000 		.4byte	.LFE59
 5350 00c8 00000000 		.4byte	.LFB60
 5351 00cc 5C000000 		.4byte	.LFE60
 5352 00d0 00000000 		.4byte	.LFB61
 5353 00d4 5C000000 		.4byte	.LFE61
 5354 00d8 00000000 		.4byte	.LFB62
 5355 00dc AC000000 		.4byte	.LFE62
 5356 00e0 00000000 		.4byte	.LFB63
 5357 00e4 94010000 		.4byte	.LFE63
 5358 00e8 00000000 		.4byte	.LFB64
 5359 00ec BC010000 		.4byte	.LFE64
 5360 00f0 00000000 		.4byte	.LFB65
 5361 00f4 98000000 		.4byte	.LFE65
 5362 00f8 00000000 		.4byte	.LFB66
 5363 00fc 6A000000 		.4byte	.LFE66
 5364 0100 00000000 		.4byte	.LFB67
 5365 0104 3A000000 		.4byte	.LFE67
 5366 0108 00000000 		.4byte	.LFB68
 5367 010c 3C000000 		.4byte	.LFE68
 5368 0110 00000000 		.4byte	.LFB69
 5369 0114 1C000000 		.4byte	.LFE69
 5370 0118 00000000 		.4byte	.LFB70
 5371 011c 1C000000 		.4byte	.LFE70
 5372 0120 00000000 		.4byte	.LFB71
 5373 0124 1C000000 		.4byte	.LFE71
 5374 0128 00000000 		.4byte	.LFB72
 5375 012c 14000000 		.4byte	.LFE72
 5376 0130 00000000 		.4byte	.LFB73
 5377 0134 14000000 		.4byte	.LFE73
 5378 0138 00000000 		.4byte	0
 5379 013c 00000000 		.4byte	0
 5380              		.section	.debug_line,"",%progbits
 5381              	.Ldebug_line0:
 5382 0000 A7040000 		.section	.debug_str,"MS",%progbits,1
 5382      02005E00 
 5382      00000201 
 5382      FB0E0D00 
 5382      01010101 
 5383              	.LASF123:
 5384 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5384      656E7365 
 5384      5F73656E 
 5384      736F7242 
 5384      6173656C 
 5385              	.LASF110:
 5386 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5386      656E7365 
 5386      5F494952 
 5386      3446696C 
 5386      74657200 
 5387              	.LASF80:
 5388 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 146


 5388      656E7365 
 5388      5F646562 
 5388      6F756E63 
 5388      65436F75 
 5389              	.LASF126:
 5390 0048 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5390      656E7365 
 5390      5F6C6F77 
 5390      42617365 
 5390      6C696E65 
 5391              	.LASF46:
 5392 0065 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5392      656E7365 
 5392      5F557064 
 5392      61746542 
 5392      6173656C 
 5393              	.LASF26:
 5394 0088 6E756D62 		.ascii	"numberOfSensors\000"
 5394      65724F66 
 5394      53656E73 
 5394      6F727300 
 5395              	.LASF30:
 5396 0098 70747247 		.ascii	"ptrGetBitValue\000"
 5396      65744269 
 5396      7456616C 
 5396      756500
 5397              	.LASF87:
 5398 00a7 43617053 		.ascii	"CapSense_DisableWidget\000"
 5398      656E7365 
 5398      5F446973 
 5398      61626C65 
 5398      57696467 
 5399              	.LASF106:
 5400 00be 74656D70 		.ascii	"tempPos\000"
 5400      506F7300 
 5401              	.LASF54:
 5402 00c6 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5402      656E7365 
 5402      5F557064 
 5402      61746545 
 5402      6E61626C 
 5403              	.LASF103:
 5404 00e6 706F7349 		.ascii	"posIndex\000"
 5404      6E646578 
 5404      00
 5405              	.LASF136:
 5406 00ef 43617053 		.ascii	"CapSense_config\000"
 5406      656E7365 
 5406      5F636F6E 
 5406      66696700 
 5407              	.LASF45:
 5408 00ff 69735365 		.ascii	"isSensorEnabled\000"
 5408      6E736F72 
 5408      456E6162 
 5408      6C656400 
 5409              	.LASF83:
 5410 010f 6E756D4F 		.ascii	"numOfSensors\000"
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 147


 5410      6653656E 
 5410      736F7273 
 5410      00
 5411              	.LASF8:
 5412 011c 756E7369 		.ascii	"unsigned int\000"
 5412      676E6564 
 5412      20696E74 
 5412      00
 5413              	.LASF35:
 5414 0129 746F7461 		.ascii	"totalSensorsNum\000"
 5414      6C53656E 
 5414      736F7273 
 5414      4E756D00 
 5415              	.LASF97:
 5416 0139 706F734E 		.ascii	"posNext\000"
 5416      65787400 
 5417              	.LASF12:
 5418 0141 696E7431 		.ascii	"int16\000"
 5418      3600
 5419              	.LASF44:
 5420 0147 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5420      656E7365 
 5420      5F496E69 
 5420      7469616C 
 5420      697A6545 
 5421              	.LASF118:
 5422 016b 43617053 		.ascii	"CapSense_posFiltersData\000"
 5422      656E7365 
 5422      5F706F73 
 5422      46696C74 
 5422      65727344 
 5423              	.LASF132:
 5424 0183 43617053 		.ascii	"CapSense_debounce\000"
 5424      656E7365 
 5424      5F646562 
 5424      6F756E63 
 5424      6500
 5425              	.LASF41:
 5426 0195 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5426      656E7365 
 5426      5F496E69 
 5426      7469616C 
 5426      697A6553 
 5427              	.LASF96:
 5428 01b7 706F7350 		.ascii	"posPrev\000"
 5428      72657600 
 5429              	.LASF140:
 5430 01bf 433A5C55 		.ascii	"C:\\Users\\AhmedR\\Desktop\\EECE-321\\Cypress BLE\\"
 5430      73657273 
 5430      5C41686D 
 5430      6564525C 
 5430      4465736B 
 5431 01ec 43797072 		.ascii	"Cypress BLE Workshop\\WorkShop Lab Exercises\\Compl"
 5431      65737320 
 5431      424C4520 
 5431      576F726B 
 5431      73686F70 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 148


 5432 021d 65746564 		.ascii	"eted Labs\\BLE Lab 4\\BLE Lab 4.cydsn\000"
 5432      204C6162 
 5432      735C424C 
 5432      45204C61 
 5432      6220345C 
 5433              	.LASF59:
 5434 0241 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5434      656E7365 
 5434      5F536574 
 5434      42617365 
 5434      6C696E65 
 5435              	.LASF25:
 5436 025a 72617744 		.ascii	"rawDataIndex\000"
 5436      61746149 
 5436      6E646578 
 5436      00
 5437              	.LASF34:
 5438 0267 746F7461 		.ascii	"totalWidgetsNum\000"
 5438      6C576964 
 5438      67657473 
 5438      4E756D00 
 5439              	.LASF63:
 5440 0277 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5440      656E7365 
 5440      5F536574 
 5440      44696666 
 5440      436F756E 
 5441              	.LASF124:
 5442 0291 43617053 		.ascii	"CapSense_sensorSignal\000"
 5442      656E7365 
 5442      5F73656E 
 5442      736F7253 
 5442      69676E61 
 5443              	.LASF101:
 5444 02a7 64656E6F 		.ascii	"denominator\000"
 5444      6D696E61 
 5444      746F7200 
 5445              	.LASF70:
 5446 02b3 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5446      656E7365 
 5446      5F536574 
 5446      4E6F6973 
 5446      65546872 
 5447              	.LASF55:
 5448 02ce 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5448      656E7365 
 5448      5F557064 
 5448      61746557 
 5448      69646765 
 5449              	.LASF131:
 5450 02ec 43617053 		.ascii	"CapSense_hysteresis\000"
 5450      656E7365 
 5450      5F687973 
 5450      74657265 
 5450      73697300 
 5451              	.LASF14:
 5452 0300 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 149


 5452      7400
 5453              	.LASF13:
 5454 0306 696E7433 		.ascii	"int32\000"
 5454      3200
 5455              	.LASF90:
 5456 030c 636F756E 		.ascii	"count\000"
 5456      7400
 5457              	.LASF24:
 5458 0312 7265736F 		.ascii	"resolutionsTbl\000"
 5458      6C757469 
 5458      6F6E7354 
 5458      626C00
 5459              	.LASF105:
 5460 0321 706F7346 		.ascii	"posFiltersMask\000"
 5460      696C7465 
 5460      72734D61 
 5460      736B00
 5461              	.LASF66:
 5462 0330 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5462      656E7365 
 5462      5F476574 
 5462      4E6F6973 
 5462      65546872 
 5463              	.LASF7:
 5464 034b 6C6F6E67 		.ascii	"long long unsigned int\000"
 5464      206C6F6E 
 5464      6720756E 
 5464      7369676E 
 5464      65642069 
 5465              	.LASF120:
 5466 0362 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5466      656E7365 
 5466      5F73656E 
 5466      736F7245 
 5466      6E61626C 
 5467              	.LASF51:
 5468 037c 77696467 		.ascii	"widget\000"
 5468      657400
 5469              	.LASF117:
 5470 0383 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5470      656E7365 
 5470      5F706F73 
 5470      46696C74 
 5470      6572734D 
 5471              	.LASF128:
 5472 039b 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5472      656E7365 
 5472      5F66696E 
 5472      67657254 
 5472      68726573 
 5473              	.LASF109:
 5474 03b4 43617053 		.ascii	"CapSense_AveragingFilter\000"
 5474      656E7365 
 5474      5F417665 
 5474      72616769 
 5474      6E674669 
 5475              	.LASF121:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 150


 5476 03cd 43617053 		.ascii	"CapSense_widgetNumber\000"
 5476      656E7365 
 5476      5F776964 
 5476      6765744E 
 5476      756D6265 
 5477              	.LASF69:
 5478 03e3 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5478      656E7365 
 5478      5F536574 
 5478      46696E67 
 5478      65725468 
 5479              	.LASF115:
 5480 03ff 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5480      656E7365 
 5480      5F446973 
 5480      61626C65 
 5480      52617744 
 5481              	.LASF64:
 5482 041e 76616C75 		.ascii	"value\000"
 5482      6500
 5483              	.LASF67:
 5484 0424 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5484      656E7365 
 5484      5F476574 
 5484      46696E67 
 5484      65724879 
 5485              	.LASF62:
 5486 0441 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5486      656E7365 
 5486      5F476574 
 5486      44696666 
 5486      436F756E 
 5487              	.LASF48:
 5488 045b 7369676E 		.ascii	"sign\000"
 5488      00
 5489              	.LASF89:
 5490 0460 6F666673 		.ascii	"offset\000"
 5490      657400
 5491              	.LASF47:
 5492 0467 63616C63 		.ascii	"calc\000"
 5492      00
 5493              	.LASF29:
 5494 046c 70747252 		.ascii	"ptrReadSensorRaw\000"
 5494      65616453 
 5494      656E736F 
 5494      72526177 
 5494      00
 5495              	.LASF79:
 5496 047d 68797374 		.ascii	"hysteresis\000"
 5496      65726573 
 5496      697300
 5497              	.LASF50:
 5498 0488 66696C74 		.ascii	"filteredRawData\000"
 5498      65726564 
 5498      52617744 
 5498      61746100 
 5499              	.LASF56:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 151


 5500 0498 73656E73 		.ascii	"sensorsPerWidget\000"
 5500      6F727350 
 5500      65725769 
 5500      64676574 
 5500      00
 5501              	.LASF85:
 5502 04a9 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5502      656E7365 
 5502      5F436865 
 5502      636B4973 
 5502      416E7957 
 5503              	.LASF134:
 5504 04c9 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5504      656E7365 
 5504      5F6E756D 
 5504      6265724F 
 5504      6653656E 
 5505              	.LASF130:
 5506 04e2 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5506      656E7365 
 5506      5F6E6567 
 5506      61746976 
 5506      654E6F69 
 5507              	.LASF33:
 5508 0502 746F7461 		.ascii	"totalScanslotsNum\000"
 5508      6C536361 
 5508      6E736C6F 
 5508      74734E75 
 5508      6D00
 5509              	.LASF42:
 5510 0514 73656E73 		.ascii	"sensor\000"
 5510      6F7200
 5511              	.LASF36:
 5512 051b 73656E73 		.ascii	"sensetivitySeed\000"
 5512      65746976 
 5512      69747953 
 5512      65656400 
 5513              	.LASF86:
 5514 052b 43617053 		.ascii	"CapSense_EnableWidget\000"
 5514      656E7365 
 5514      5F456E61 
 5514      626C6557 
 5514      69646765 
 5515              	.LASF16:
 5516 0541 63686172 		.ascii	"char\000"
 5516      00
 5517              	.LASF68:
 5518 0546 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5518      656E7365 
 5518      5F476574 
 5518      4E656761 
 5518      74697665 
 5519              	.LASF10:
 5520 0569 75696E74 		.ascii	"uint16\000"
 5520      313600
 5521              	.LASF60:
 5522 0570 64617461 		.ascii	"data\000"
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 152


 5522      00
 5523              	.LASF18:
 5524 0575 69646163 		.ascii	"idac1LevelsTbl\000"
 5524      314C6576 
 5524      656C7354 
 5524      626C00
 5525              	.LASF95:
 5526 0584 7265736F 		.ascii	"resolution\000"
 5526      6C757469 
 5526      6F6E00
 5527              	.LASF82:
 5528 058f 72617749 		.ascii	"rawIndex\000"
 5528      6E646578 
 5528      00
 5529              	.LASF98:
 5530 0598 43617053 		.ascii	"CapSense_centroid\000"
 5530      656E7365 
 5530      5F63656E 
 5530      74726F69 
 5530      6400
 5531              	.LASF139:
 5532 05aa 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5532      6E657261 
 5532      7465645F 
 5532      536F7572 
 5532      63655C50 
 5533              	.LASF6:
 5534 05d3 6C6F6E67 		.ascii	"long long int\000"
 5534      206C6F6E 
 5534      6720696E 
 5534      7400
 5535              	.LASF111:
 5536 05e1 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5536      656E7365 
 5536      5F476574 
 5536      57696467 
 5536      65744E75 
 5537              	.LASF76:
 5538 05fa 6465626F 		.ascii	"debounce\000"
 5538      756E6365 
 5538      00
 5539              	.LASF28:
 5540 0603 70747250 		.ascii	"ptrPreScan\000"
 5540      72655363 
 5540      616E00
 5541              	.LASF75:
 5542 060e 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5542      656E7365 
 5542      5F436865 
 5542      636B4973 
 5542      53656E73 
 5543              	.LASF27:
 5544 062b 70747247 		.ascii	"ptrGetRaw\000"
 5544      65745261 
 5544      7700
 5545              	.LASF53:
 5546 0635 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 153


 5546      656E7365 
 5546      5F557064 
 5546      61746553 
 5546      656E736F 
 5547              	.LASF40:
 5548 0653 43617053 		.ascii	"CapSense_BaseInit\000"
 5548      656E7365 
 5548      5F426173 
 5548      65496E69 
 5548      7400
 5549              	.LASF94:
 5550 0665 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5550      656E7365 
 5550      5F43616C 
 5550      6343656E 
 5550      74726F69 
 5551              	.LASF119:
 5552 067b 43617053 		.ascii	"CapSense_sensorRaw\000"
 5552      656E7365 
 5552      5F73656E 
 5552      736F7252 
 5552      617700
 5553              	.LASF112:
 5554 068e 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5554      656E7365 
 5554      5F476574 
 5554      4C6F7742 
 5554      6173656C 
 5555              	.LASF72:
 5556 06ab 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5556      656E7365 
 5556      5F536574 
 5556      4E656761 
 5556      74697665 
 5557              	.LASF11:
 5558 06ce 75696E74 		.ascii	"uint32\000"
 5558      333200
 5559              	.LASF104:
 5560 06d5 66697273 		.ascii	"firstTimeIndex\000"
 5560      7454696D 
 5560      65496E64 
 5560      657800
 5561              	.LASF93:
 5562 06e4 73746172 		.ascii	"startOfSlider\000"
 5562      744F6653 
 5562      6C696465 
 5562      7200
 5563              	.LASF71:
 5564 06f2 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5564      656E7365 
 5564      5F536574 
 5564      46696E67 
 5564      65724879 
 5565              	.LASF65:
 5566 070f 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5566      656E7365 
 5566      5F476574 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 154


 5566      46696E67 
 5566      65725468 
 5567              	.LASF138:
 5568 072b 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 5568      4320342E 
 5568      382E3420 
 5568      32303134 
 5568      30353236 
 5569 075e 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 5569      20726576 
 5569      6973696F 
 5569      6E203231 
 5569      31333538 
 5570 0791 30202D66 		.ascii	"0 -ffunction-sections\000"
 5570      66756E63 
 5570      74696F6E 
 5570      2D736563 
 5570      74696F6E 
 5571              	.LASF100:
 5572 07a7 6E756D65 		.ascii	"numerator\000"
 5572      7261746F 
 5572      7200
 5573              	.LASF58:
 5574 07b1 6C617374 		.ascii	"lastSensor\000"
 5574      53656E73 
 5574      6F7200
 5575              	.LASF37:
 5576 07bc 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5576      6B467265 
 5576      715F4D48 
 5576      7A00
 5577              	.LASF102:
 5578 07ca 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5578      656E7365 
 5578      5F476574 
 5578      43656E74 
 5578      726F6964 
 5579              	.LASF19:
 5580 07e2 69646163 		.ascii	"idac2LevelsTbl\000"
 5580      324C6576 
 5580      656C7354 
 5580      626C00
 5581              	.LASF2:
 5582 07f1 73686F72 		.ascii	"short int\000"
 5582      7420696E 
 5582      7400
 5583              	.LASF4:
 5584 07fb 6C6F6E67 		.ascii	"long int\000"
 5584      20696E74 
 5584      00
 5585              	.LASF57:
 5586 0804 66697273 		.ascii	"firstSensor\000"
 5586      7453656E 
 5586      736F7200 
 5587              	.LASF92:
 5588 0810 74656D70 		.ascii	"temp\000"
 5588      00
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 155


 5589              	.LASF88:
 5590 0815 43617053 		.ascii	"CapSense_FindMaximum\000"
 5590      656E7365 
 5590      5F46696E 
 5590      644D6178 
 5590      696D756D 
 5591              	.LASF23:
 5592 082a 77696467 		.ascii	"widgetNubmersTbl\000"
 5592      65744E75 
 5592      626D6572 
 5592      7354626C 
 5592      00
 5593              	.LASF114:
 5594 083b 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5594      656E7365 
 5594      5F456E61 
 5594      626C6552 
 5594      61774461 
 5595              	.LASF127:
 5596 0859 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5596      656E7365 
 5596      5F6C6F77 
 5596      42617365 
 5596      6C696E65 
 5597              	.LASF32:
 5598 0873 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_10\000"
 5598      656E7365 
 5598      5F434F4E 
 5598      4649475F 
 5598      54595045 
 5599              	.LASF122:
 5600 089a 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5600      656E7365 
 5600      5F73656E 
 5600      736F7242 
 5600      6173656C 
 5601              	.LASF91:
 5602 08b2 6D617869 		.ascii	"maximum\000"
 5602      6D756D00 
 5603              	.LASF17:
 5604 08ba 73697A65 		.ascii	"sizetype\000"
 5604      74797065 
 5604      00
 5605              	.LASF5:
 5606 08c3 6C6F6E67 		.ascii	"long unsigned int\000"
 5606      20756E73 
 5606      69676E65 
 5606      6420696E 
 5606      7400
 5607              	.LASF38:
 5608 08d5 706F696E 		.ascii	"pointers\000"
 5608      74657273 
 5608      00
 5609              	.LASF52:
 5610 08de 6E6F6973 		.ascii	"noiseThreshold\000"
 5610      65546872 
 5610      6573686F 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 156


 5610      6C6400
 5611              	.LASF73:
 5612 08ed 43617053 		.ascii	"CapSense_SetDebounce\000"
 5612      656E7365 
 5612      5F536574 
 5612      4465626F 
 5612      756E6365 
 5613              	.LASF78:
 5614 0902 66696E67 		.ascii	"fingerThreshold\000"
 5614      65725468 
 5614      72657368 
 5614      6F6C6400 
 5615              	.LASF21:
 5616 0912 63686172 		.ascii	"chargeDivTbl\000"
 5616      67654469 
 5616      7654626C 
 5616      00
 5617              	.LASF1:
 5618 091f 756E7369 		.ascii	"unsigned char\000"
 5618      676E6564 
 5618      20636861 
 5618      7200
 5619              	.LASF129:
 5620 092d 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5620      656E7365 
 5620      5F6E6F69 
 5620      73655468 
 5620      72657368 
 5621              	.LASF77:
 5622 0945 6465626F 		.ascii	"debounceIndex\000"
 5622      756E6365 
 5622      496E6465 
 5622      7800
 5623              	.LASF43:
 5624 0953 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5624      656E7365 
 5624      5F496E69 
 5624      7469616C 
 5624      697A6541 
 5625              	.LASF61:
 5626 0973 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5626      656E7365 
 5626      5F476574 
 5626      42617365 
 5626      6C696E65 
 5627              	.LASF74:
 5628 098c 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5628      656E7365 
 5628      5F536574 
 5628      4C6F7742 
 5628      6173656C 
 5629              	.LASF20:
 5630 09a9 73656E73 		.ascii	"sensetivityTbl\000"
 5630      65746976 
 5630      69747954 
 5630      626C00
 5631              	.LASF116:
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 157


 5632 09b8 43617053 		.ascii	"CapSense_centroidMult\000"
 5632      656E7365 
 5632      5F63656E 
 5632      74726F69 
 5632      644D756C 
 5633              	.LASF84:
 5634 09ce 73746174 		.ascii	"state\000"
 5634      6500
 5635              	.LASF137:
 5636 09d4 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5636      656E7365 
 5636      5F656E61 
 5636      626C6552 
 5636      61774669 
 5637              	.LASF22:
 5638 09ee 6D6F6444 		.ascii	"modDivTbl\000"
 5638      69765462 
 5638      6C00
 5639              	.LASF133:
 5640 09f8 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5640      656E7365 
 5640      5F726177 
 5640      44617461 
 5640      496E6465 
 5641              	.LASF0:
 5642 0a0e 7369676E 		.ascii	"signed char\000"
 5642      65642063 
 5642      68617200 
 5643              	.LASF3:
 5644 0a1a 73686F72 		.ascii	"short unsigned int\000"
 5644      7420756E 
 5644      7369676E 
 5644      65642069 
 5644      6E7400
 5645              	.LASF107:
 5646 0a2d 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5646      656E7365 
 5646      5F476574 
 5646      52616469 
 5646      616C4365 
 5647              	.LASF31:
 5648 0a4b 70747253 		.ascii	"ptrSetBitValue\000"
 5648      65744269 
 5648      7456616C 
 5648      756500
 5649              	.LASF108:
 5650 0a5a 43617053 		.ascii	"CapSense_MedianFilter\000"
 5650      656E7365 
 5650      5F4D6564 
 5650      69616E46 
 5650      696C7465 
 5651              	.LASF49:
 5652 0a70 74656D70 		.ascii	"tempRaw\000"
 5652      52617700 
 5653              	.LASF113:
 5654 0a78 43617053 		.ascii	"CapSense_GetDebounce\000"
 5654      656E7365 
ARM GAS  C:\Users\AhmedR\AppData\Local\Temp\ccOBzphh.s 			page 158


 5654      5F476574 
 5654      4465626F 
 5654      756E6365 
 5655              	.LASF81:
 5656 0a8d 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5656      656E7365 
 5656      5F436865 
 5656      636B4973 
 5656      57696467 
 5657              	.LASF9:
 5658 0aaa 75696E74 		.ascii	"uint8\000"
 5658      3800
 5659              	.LASF15:
 5660 0ab0 646F7562 		.ascii	"double\000"
 5660      6C6500
 5661              	.LASF39:
 5662 0ab7 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_10\000"
 5662      656E7365 
 5662      5F434F4E 
 5662      4649475F 
 5662      54595045 
 5663              	.LASF135:
 5664 0ad5 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5664      656E7365 
 5664      5F726177 
 5664      46696C74 
 5664      65724461 
 5665              	.LASF99:
 5666 0aed 706F7369 		.ascii	"position\000"
 5666      74696F6E 
 5666      00
 5667              	.LASF125:
 5668 0af6 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5668      656E7365 
 5668      5F73656E 
 5668      736F724F 
 5668      6E4D6173 
 5669              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
